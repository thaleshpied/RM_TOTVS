<?php

namespace App\Models;

use CodeIgniter\Model;

class Informacoes_andaimes extends Model
{
    protected $table = 'TPRODUTO'; 

    // protected $allowedFields = [
    // 'CODCOLIGADA',
    // 'OBSERVACOES',
    // 'ROTINA',
    // 'RECCREATEDON',
    // 'RECMODIFIEDON',
    // 'RECCREATEDBY',
    // 'RECMODIFIEDBY' 
    // ];

    
    

    //  TRAZENDO TODOS OS ITENS DE ANDAIME PARA SEREM APRESENTADOS AO USUÁRIO PARA LANÇAMENTO DO ANDAIME
     public function getAllItensAndaimes($IDMOVPLANEJAMENTO)
     {
     $query = $this->db->query("
        SELECT 
        TPRODUTO.IDPRD, 
        TPRODUTO.CODIGOPRD,
        TPRODUTO.NOMEFANTASIA, 
        TPRODUTO.DESCRICAO, 
        TPRODUTO.PESOLIQUIDO,
        TPRODUTO.PESOBRUTO,
        TPRODUTO.ESPESSURA,
        '02' AS DIAMETRO,
        TPRODUTO.COMPRIMENTO,
        '02' AS LARGURA,
        CASE 
        WHEN TGRUPOPRODUTO.DESCRICAO IS NULL THEN 'GERAL'
		ELSE TGRUPOPRODUTO.DESCRICAO 
		END
		AS GRUPO,
        CASE 
            WHEN TITMMOV.IDPRD IS NOT NULL THEN 'S'
            ELSE 'N'
        END AS EXISTE_EM_TITMMOV,
        CAST(TITMMOV.QUANTIDADE AS INT) AS QUANTIDADE
    FROM TPRODUTO
    LEFT JOIN TITMMOV ON TITMMOV.IDPRD = TPRODUTO.IDPRD AND TITMMOV.IDMOV = ?
	LEFT JOIN TPRDGRUPOPRODUTO ON TPRDGRUPOPRODUTO.IDPRD = TPRODUTO.IDPRD 
	LEFT JOIN TGRUPOPRODUTO ON TGRUPOPRODUTO.CODGRUPO = TPRDGRUPOPRODUTO.CODGRUPO AND TGRUPOPRODUTO.CODCOLIGADA = TPRDGRUPOPRODUTO.CODCOLGRUPO
    WHERE 
        TPRODUTO.CODIGOPRD LIKE '02.11%' 
        AND TPRODUTO.INATIVO = 0
        AND TPRODUTO.CODIGOPRD LIKE '__.__._____'
        --AND TPRODUTO.COMPRIMENTO IS NOT NULL
    ORDER BY TPRODUTO.NOMEFANTASIA",[$IDMOVPLANEJAMENTO]);
         
         return $query->getResultArray();
    }



    // TRAZENDO TOTALIZADOR DOS ITENS COMO PESO, METRAGEM LINEAR E QUANTIDADE DE ITENS 
    public function getTotalizadorAndaimesUnico($IDMOVPLANEJAMENTO)
    {
    $query = $this->db->query("
       
        SELECT 

        CAST(SUM(PESOBRUTO) AS DECIMAL(18,2)) AS PESO_BRUTO_TOTAL,
        CAST(SUM(PESOLIQUIDO) AS DECIMAL(18,2)) AS PESO_LIQUIDO_TOTAL,
        CAST(SUM(METRAGEM_LINEAR) AS DECIMAL(18,2)) AS METRAGEM_LINEAR_TOTAL,
        SUM(QUANTIDADE) AS QUANTIDADE_DE_ITENS
        FROM
        (
        SELECT  
            TPRODUTO.PESOLIQUIDO,
            TPRODUTO.PESOBRUTO,
            TPRODUTO.COMPRIMENTO,
            TPRODUTO.COMPRIMENTO * TITMMOV.QUANTIDADE AS METRAGEM_LINEAR,
            CASE 
                WHEN TITMMOV.IDPRD IS NOT NULL THEN 'S'
                ELSE 'N'
            END AS EXISTE_EM_TITMMOV,
            CAST(TITMMOV.QUANTIDADE AS INT) AS QUANTIDADE
        FROM TPRODUTO
        LEFT JOIN TITMMOV ON TITMMOV.IDPRD = TPRODUTO.IDPRD AND TITMMOV.IDMOV = ?
        WHERE 
            TPRODUTO.CODIGOPRD LIKE '02.11%' 
            AND TPRODUTO.INATIVO = 0
            AND TPRODUTO.CODIGOPRD LIKE '__.__._____'
        ) AS RESULT1",[$IDMOVPLANEJAMENTO]);
        
        return $query->getRow();
   }



   public function getMovimentosPLAndaimesExec($CODCCUSTO)
   {
       $query = $this->db->query("
           SELECT * FROM (

           SELECT 
           
           TMOVCOMPL_PLANEJAMENTO.SAMF_MTG_OPERACAO,
           TMOVCOMPL_PLANEJAMENTO.SAMF_MTG_BOLETAEMIT,
           TMOVCOMPL.IDMOV AS IDMOV_SC,
           --TMOVCOMPL.SAMF_CLI_LOCANDAIME2,
           TMOVCOMPL.SAMF_CLI_OS AS OS_CLIENTE,
           TMOVCOMPL.SAMF_CLI_LOC,
           TMOVCOMPL.SAMF_OBSERVACAO,
           TMOVCOMPL.SAMF_CLI_OS,
           TMOVCOMPL.SAMF_CLI_TEXTO_BREVE,
           TMOVCOMPL.SAMF_CLI_DESC_OP,
           --TMOVCOMPL.SAMF_CLI_DENOMINACAO,
           --TMOVCOMPL.SAMF_CLI_CENTRAB_RES,
           --TMOVCOMPL.SAMF_CLI_CENTRAB_OP,
           --TMOVCOMPL.SAMF_CLI_OPERACAO,
           --TMOVCOMPL.SAMF_CLI_CODCCUSTO,
           TMOVCOMPL.SAMF_CLI_QRCODE,
           TMOVCOMPL.SAMF_CLI_TAG,
           AREANV0.NOME_AREA AS SAMF_CLI_AREANV0,
           SAMF_ACESSO.CODUSUARIO AS ENCARREGADO,
           
           TMOVRELAC.IDMOVORIGEM AS IDMOVORIGEM,
           TMOVRELAC.IDMOVDESTINO AS IDMOVDESTINO,
           TR2.IDMOVDESTINO AS IDMOVPROJETO,
           TR3.IDMOVDESTINO AS IDMOVPLANEJAMENTO,

           TMOV_PLANEJAMENTO.STATUS AS STATUS_PLANEJAMENTO,            
           CONVERT(VARCHAR, TMOV_PLANEJAMENTO.DATAEXTRA1, 103) AS DATA_MONTAGEM,
           CONVERT(VARCHAR, TMOV_PLANEJAMENTO.DATAEXTRA2, 103) AS DATA_DESMONTAGEM,


           CASE 
               WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 3
               WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 2
               ELSE 1
               END AS VALIDACAO

           FROM 

           TMOVCOMPL

           LEFT JOIN TMOV ON TMOV.IDMOV = TMOVCOMPL.IDMOV AND TMOV.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA
           
           LEFT JOIN TMOVRELAC ON TMOVRELAC.CODCOLORIGEM = TMOV.CODCOLIGADA AND TMOVRELAC.IDMOVORIGEM = TMOV.IDMOV
           
           LEFT JOIN TMOVRELAC TR2 ON TR2.CODCOLORIGEM = TMOVRELAC.CODCOLORIGEM AND TR2.IDMOVORIGEM = TMOVRELAC.IDMOVDESTINO

           LEFT JOIN TMOVRELAC TR3 ON TR3.CODCOLORIGEM = TR2.CODCOLORIGEM AND TR3.IDMOVORIGEM = TR2.IDMOVDESTINO

           LEFT JOIN TMOV TMOV_PLANEJAMENTO ON TMOV_PLANEJAMENTO.CODCOLIGADA = TR3.CODCOLORIGEM AND TMOV_PLANEJAMENTO.IDMOV = TR3.IDMOVDESTINO
           
           LEFT JOIN TMOVCOMPL TMOVCOMPL_PROJETO ON TMOVCOMPL_PROJETO.CODCOLIGADA = TR2.CODCOLORIGEM AND TMOVCOMPL_PROJETO.IDMOV = TR2.IDMOVDESTINO
           
           LEFT JOIN TITMMOV ON TITMMOV.IDMOV = TMOV.IDMOV AND TITMMOV.CODCOLIGADA = TMOV.CODCOLIGADA
           
           LEFT JOIN TITMMOVCOMPL ON TITMMOVCOMPL.IDMOV = TR2.IDMOVDESTINO AND TITMMOVCOMPL.CODCOLIGADA = TR2.CODCOLORIGEM        
           
           --ABAIXO DADOS DA TITMMOV E TITMMOVCOMPL RELACIONADAS AO PLANEJAMENTO 
           LEFT JOIN TITMMOV TITMMOV_PLANEJAMENTO ON TITMMOV.IDMOV = TMOV_PLANEJAMENTO.IDMOV AND TITMMOV.CODCOLIGADA = TMOV_PLANEJAMENTO.CODCOLIGADA
           
           LEFT JOIN TITMMOVCOMPL TITMMOVCOMPL_PLANEJAMENTO ON TITMMOVCOMPL_PLANEJAMENTO.IDMOV = TR3.IDMOVDESTINO AND TITMMOVCOMPL_PLANEJAMENTO.CODCOLIGADA = TR3.CODCOLDESTINO     

           LEFT JOIN SAMF_ACESSO ON SAMF_ACESSO.ID = TMOVCOMPL.SAMF_ENCARREGADO

           LEFT JOIN SAMF_CLI_AREAS AS AREANV0 ON CAST(AREANV0.ID AS VARCHAR) = TMOVCOMPL.SAMF_CLI_AREANV0
           
           LEFT JOIN TMOVCOMPL AS TMOVCOMPL_PLANEJAMENTO ON TMOVCOMPL_PLANEJAMENTO.CODCOLIGADA = TMOV_PLANEJAMENTO.CODCOLIGADA AND TMOVCOMPL_PLANEJAMENTO.IDMOV = TMOV_PLANEJAMENTO.IDMOV

           WHERE 

               TMOV.CODTMV LIKE '1.1.4%'
               AND TMOV_PLANEJAMENTO.STATUS NOT IN ('C','Q','Z')
               AND TMOV.CODCCUSTO = ?

           ) AS RESULT1
           
           WHERE VALIDACAO = 3
           AND IDMOVPLANEJAMENTO IS NOT NULL
           ",[$CODCCUSTO]);
       
       return $query->getResultArray();
   }

    


   //TOTALIZADOR GAVETEIRO OBRA 
   public function getTotalizadorGaveteiro($CODCCUSTO)
   { 
       $query = $this->db->query("SELECT 
    CAST(SUM(EM_MONTAGEM) + SUM(MONTADO) AS DECIMAL(10, 2)) AS EMUSO,
    CAST(SUM(EM_MONTAGEM) AS DECIMAL(10, 2)) EM_MONTAGEM,
    CAST(SUM(DESMONTADO) AS DECIMAL(10, 2)) DESMONTADO,
    CAST(SUM(MONTADO) AS DECIMAL(10, 2)) MONTADO,
    SUM(TOTAL_ANDAIMES_EM_MONTAGEM) TOTAL_ANDAIMES_EM_MONTAGEM,
    SUM(TOTAL_ANDAIMES_SOLICITADOS) TOTAL_ANDAIMES_SOLICITADOS,
    SUM(TOTAL_ANDAIMES_CANCELADOS) TOTAL_ANDAIMES_CANCELADOS,
    SUM(TOTAL_ANDAIMES_MONTADOS) TOTAL_ANDAIMES_MONTADOS,
    SUM(TOTAL_ANDAIMES_DESMONTADOS) TOTAL_ANDAIMES_DESMONTADOS,
	CAST((

	SELECT 
	SUM(QUANTIDADE * COMPRIMENTO) AS METRO_LINEAR_MOVIMENTOS
	FROM(
	SELECT
		
		QUANTIDADE,
		COMPRIMENTO

	FROM	FC_TOP_SUBLOC_OBRA() AS FC_OBRA

		LEFT JOIN TPRD ON TPRD.CODIGOPRD = FC_OBRA.CODIGOPRD 
		AND TPRD.IDPRD = FC_OBRA.IDPRD
		AND TPRD.CODCOLIGADA = FC_OBRA.CODCOLIGADA 

	WHERE	

	FC_OBRA.CODCCUSTO = ?

	) AS RESULT1

	) - SUM(MONTADO)  AS DECIMAL(10, 2)) AS DISPONIVEL,


	CAST((

	SELECT 
	SUM(QUANTIDADE * COMPRIMENTO) AS METRO_LINEAR_MOVIMENTOS
	FROM(
	SELECT
		
		QUANTIDADE,
		COMPRIMENTO

	FROM	FC_TOP_SUBLOC_OBRA() AS FC_OBRA

		LEFT JOIN TPRD ON TPRD.CODIGOPRD = FC_OBRA.CODIGOPRD 
		AND TPRD.IDPRD = FC_OBRA.IDPRD
		AND TPRD.CODCOLIGADA = FC_OBRA.CODCOLIGADA 

	WHERE	

	FC_OBRA.CODCCUSTO = ?
	AND CODTMV =  '1.1.17'

	) AS RESULT1

	) AS DECIMAL(10, 2)) AS ENTRADA,

	CAST((

	SELECT 
	SUM(QUANTIDADE * COMPRIMENTO) AS METRO_LINEAR_MOVIMENTOS
	FROM(
	SELECT
		
		QUANTIDADE,
		COMPRIMENTO

	FROM	FC_TOP_SUBLOC_OBRA() AS FC_OBRA

		LEFT JOIN TPRD ON TPRD.CODIGOPRD = FC_OBRA.CODIGOPRD 
		AND TPRD.IDPRD = FC_OBRA.IDPRD
		AND TPRD.CODCOLIGADA = FC_OBRA.CODCOLIGADA 

	WHERE	

	FC_OBRA.CODCCUSTO = ?
	AND CODTMV =  '1.1.18'

	) AS RESULT1

	) AS DECIMAL(10, 2)) AS SAIDA,

	CAST(
        CASE 
            WHEN (
                SELECT 
                SUM(QUANTIDADE * COMPRIMENTO)
                FROM(
                    SELECT 
                    QUANTIDADE, COMPRIMENTO
                    FROM FC_TOP_SUBLOC_OBRA() AS FC_OBRA
                    LEFT JOIN TPRD ON TPRD.CODIGOPRD = FC_OBRA.CODIGOPRD 
                    AND TPRD.IDPRD = FC_OBRA.IDPRD
                    AND TPRD.CODCOLIGADA = FC_OBRA.CODCOLIGADA 
                    WHERE FC_OBRA.CODCCUSTO = ? AND CODTMV = '1.1.17'
                ) AS RESULT1
            ) > 0 
            THEN (SUM(MONTADO) / (
                SELECT 
                SUM(QUANTIDADE * COMPRIMENTO)
                FROM(
                    SELECT 
                    QUANTIDADE, COMPRIMENTO
                    FROM FC_TOP_SUBLOC_OBRA() AS FC_OBRA
                    LEFT JOIN TPRD ON TPRD.CODIGOPRD = FC_OBRA.CODIGOPRD 
                    AND TPRD.IDPRD = FC_OBRA.IDPRD
                    AND TPRD.CODCOLIGADA = FC_OBRA.CODCOLIGADA 
                    WHERE FC_OBRA.CODCCUSTO = ? AND CODTMV = '1.1.17'
                ) AS RESULT1
            )) * 100
            ELSE 0
        END 
    AS DECIMAL(10, 2)) AS PERCENTUAL_MONTADO_ENTRADA


    FROM(
    SELECT 
    
        0 AS EM_MONTAGEM,
        0 AS DESMONTADO,
        0 AS MONTADO,

        COUNT(CASE WHEN TMOV.STATUS = 'G' THEN TMOV.IDMOV ELSE NULL END) AS TOTAL_ANDAIMES_EM_MONTAGEM,
        COUNT(CASE WHEN TMOV.STATUS <> 'Z' THEN TMOV.IDMOV ELSE NULL END) AS TOTAL_ANDAIMES_SOLICITADOS,
        COUNT(CASE WHEN TMOV.STATUS = 'C' THEN TMOV.IDMOV ELSE NULL END) AS TOTAL_ANDAIMES_CANCELADOS,
        COUNT(CASE WHEN TMOV.STATUS = 'F' THEN TMOV.IDMOV ELSE NULL END) AS TOTAL_ANDAIMES_MONTADOS,
        COUNT(CASE WHEN TMOV.STATUS = 'B' THEN TMOV.IDMOV ELSE NULL END) AS TOTAL_ANDAIMES_DESMONTADOS

    FROM TMOV 

    WHERE CODTMV = '1.1.43' 
    AND TMOV.CODCCUSTO = ?
    

    UNION ALL

    SELECT 

        SUM(EM_MONTAGEM) AS EM_MONTAGEM,
        SUM(DESMONTADO) AS DESMONTADO,
        SUM(MONTADO) AS MONTADO,

        TOTAL_ANDAIMES_ATUADOS,
        TOTAL_ANDAIMES_SOLICITADOS,
        TOTAL_ANDAIMES_CANCELADOS,
        TOTAL_ANDAIMES_MONTADOS,
		TOTAL_ANDAIMES_DESMONTADOS

        FROM

        (

        SELECT 
            
            CASE 
                WHEN TMOV.STATUS = 'G' THEN TPRD.COMPRIMENTO * TITMMOV.QUANTIDADE  -- EM MONTAGEM
                ELSE 0 
            END AS EM_MONTAGEM,

            CASE 
                WHEN TMOV.STATUS = 'B' THEN TPRD.COMPRIMENTO * TITMMOV.QUANTIDADE  -- DESMONTADO 
                ELSE 0 
            END AS DESMONTADO ,

            CASE 
                WHEN TMOV.STATUS = 'F' THEN TPRD.COMPRIMENTO * TITMMOV.QUANTIDADE  -- MONTADO
                ELSE 0 
            END AS MONTADO,

            0 AS TOTAL_ANDAIMES_ATUADOS,

            0 AS TOTAL_ANDAIMES_SOLICITADOS,

            0 TOTAL_ANDAIMES_CANCELADOS,

			0 AS TOTAL_ANDAIMES_MONTADOS,

			0 AS TOTAL_ANDAIMES_DESMONTADOS
		
        FROM TMOV 

            LEFT JOIN TMOVCOMPL ON TMOVCOMPL.IDMOV = TMOV.IDMOV AND TMOVCOMPL.CODCOLIGADA = TMOV.CODCOLIGADA
            LEFT JOIN SAMF_CLI_AREAS AS AREANV0 ON CAST(AREANV0.ID AS VARCHAR) = TMOVCOMPL.SAMF_CLI_AREANV0	
            LEFT JOIN SAMF_CLI_AREAS AS AREANV1	ON CAST(AREANV1.ID AS VARCHAR) = TMOVCOMPL.SAMF_CLI_AREANV1
            LEFT JOIN SAMF_ACESSO ON SAMF_ACESSO.ID = TMOVCOMPL.SAMF_ENCARREGADO
            LEFT JOIN TITMMOV ON TMOV.IDMOV = TITMMOV.IDMOV AND TMOV.CODCOLIGADA = TITMMOV.CODCOLIGADA 
            LEFT JOIN TPRD ON TPRD.IDPRD = TITMMOV.IDPRD AND TPRD.CODCOLIGADA = TITMMOV.CODCOLIGADA 
        
        WHERE CODTMV = '1.1.43' 
        AND TMOV.CODCCUSTO = ?

		GROUP BY 
		TMOV.STATUS, TPRD.COMPRIMENTO, TITMMOV.QUANTIDADE
		
		) AS RESULT1 

		GROUP BY 

		TOTAL_ANDAIMES_ATUADOS,
        TOTAL_ANDAIMES_SOLICITADOS,
        TOTAL_ANDAIMES_CANCELADOS,
        TOTAL_ANDAIMES_MONTADOS,
		TOTAL_ANDAIMES_DESMONTADOS

		) AS RESULT
            ",[$CODCCUSTO, $CODCCUSTO, $CODCCUSTO, $CODCCUSTO, $CODCCUSTO, $CODCCUSTO, $CODCCUSTO]);
       
       return $query->getRow();
   }



   










   //MONTAGENS E DESMONTANGEM MES A MES 
   public function getMesamesMontagensDesmontagens($CODCCUSTO)
   { 
       $query = $this->db->query("
        SELECT 
        MES_ANO_MONTAGEM,
        SUM(TOTAL_MONTAGENS) AS TOTAL_MONTAGENS,
        SUM(TOTAL_DESMONTAGENS) AS TOTAL_DESMONTAGENS
        FROM (
            SELECT 
                FORMAT(DATAEXTRA1, 'yyyy-MM') AS MES_ANO_MONTAGEM,
                COUNT(CASE WHEN DATAEXTRA1 IS NOT NULL AND STATUS NOT IN ('Z', 'C') THEN 1 END) AS TOTAL_MONTAGENS,
                0 AS TOTAL_DESMONTAGENS
            FROM TMOV
            WHERE 
                CODTMV = '1.1.43' 
                AND CODCCUSTO = ?
                AND DATAEXTRA1 >= DATEADD(MONTH, -6, GETDATE())
                AND DATAEXTRA1 IS NOT NULL
                AND STATUS NOT IN ('Z', 'C')
            GROUP BY FORMAT(DATAEXTRA1, 'yyyy-MM')
            
            UNION ALL
            
            SELECT 
                FORMAT(DATAEXTRA2, 'yyyy-MM') AS MES_ANO_MONTAGEM,
                0 AS TOTAL_MONTAGENS,
                COUNT(CASE WHEN DATAEXTRA2 IS NOT NULL AND STATUS NOT IN ('Z', 'C') THEN 1 END) AS TOTAL_DESMONTAGENS
            FROM TMOV
            WHERE 
                CODTMV = '1.1.43' 
                AND CODCCUSTO = ?
                AND DATAEXTRA2 >= DATEADD(MONTH, -6, GETDATE())
                AND DATAEXTRA2 IS NOT NULL
                AND STATUS NOT IN ('Z', 'C')
            GROUP BY FORMAT(DATAEXTRA2, 'yyyy-MM')
        ) AS COMBINED
        GROUP BY MES_ANO_MONTAGEM
        ORDER BY MES_ANO_MONTAGEM",[$CODCCUSTO]);
       
       return $query->getRow();
   }












     


     
}