<?php

namespace App\Models;

use CodeIgniter\Model;

class Informacoes_gerenciais extends Model
{
    // protected $table = 'sm_sis_equipamentos';
    //protected $table = 'FTB1'; // Nome da tabela no banco de dados
    //protected $allowedFields = ['CODTB1FLX', 'DESCRICAO']; // Campos que podem ser inseridos/alterados

    public function __construct()
    {
        parent::__construct();
    }

  

    /* TRAZENDO OS MOVIMENTOS INSERIDOS PARA ADICIONAR ITENS */
    public function getMovimentos($CODCCUSTO)
    {
        $query = $this->db->query("
        SELECT 

        TMOV.CODCCUSTO, 
        TMOV.IDMOV, 
        DATAEMISSAO, 
        TMOV.CODUSUARIO,
        SAMF_CLI_OS, 
        SAMF_CLI_TEXTO_BREVE, 
        SAMF_CLI_DESC_OP, 
        SAMF_CLI_TAG, 
        SAMF_OBSERVACAO, 
        SAMF_PREV_VISITANOVO, 
        SAMF_PREDECESSORA,
        SAMF_VS_AMBIENTE,
        SAMF_VS_DESCPECAS,
        SAMF_VS_ATERRADO,
        TMOVCOMPL.RECMODIFIEDON,
        TMOV.DATAEXTRA1,
        TMOV.DATAEXTRA2,
        AREANV0.ID AS ID_AREA_NIVEL0,
        AREANV0.NOME_AREA AS SAMF_CLI_AREANV0,
        SAMF_CLI_AREANV0 AS NIVELTMOCOMPL0,
                        
        AREANV1.ID AS ID_AREA_NIVEL1,
        AREANV1.NOME_AREA AS SAMF_CLI_AREANV1,
        SAMF_CLI_AREANV1 AS NIVELTMOCOMPL1,

        SAMF_CLI_AREANV2,
        SAMF_CLI_TIPOSC,
        ACESSOS.ID AS ID_SAMF_ENCARREGADO,
        ACESSOS.CODUSUARIO AS SAMF_ENCARREGADO,
        RDO_RESPONSAVEL_CLI2
                        
        FROM TMOV
                        
        LEFT JOIN TMOVCOMPL 
        ON TMOVCOMPL.IDMOV = TMOV.IDMOV AND TMOVCOMPL.CODCOLIGADA = TMOV.CODCOLIGADA

        LEFT JOIN SAMF_CLI_AREAS AS AREANV0
        ON CAST(AREANV0.ID AS VARCHAR) = TMOVCOMPL.SAMF_CLI_AREANV0 

        LEFT JOIN SAMF_CLI_AREAS AS AREANV1
        ON CAST(AREANV1.ID AS VARCHAR) = TMOVCOMPL.SAMF_CLI_AREANV1

        LEFT JOIN SAMF_ACESSO AS ACESSOS
        ON CAST(ACESSOS.ID AS VARCHAR) = TMOVCOMPL.SAMF_ENCARREGADO
                    
        WHERE TMOV.CODTMV = '1.1.40' AND STATUS = 'A' AND TMOV.CODCCUSTO = ?
        
        AND TMOV.IDMOV NOT IN 

        (SELECT IDMOVORIGEM FROM TMOVRELAC LEFT JOIN TMOV ON TMOV.IDMOV = 
        TMOVRELAC.IDMOVORIGEM AND TMOV.CODCOLIGADA = TMOVRELAC.CODCOLORIGEM 
        WHERE TMOV.CODTMV = '1.1.40' AND STATUS = 'A' AND CODCCUSTO = ?)

        ORDER BY TMOV.IDMOV DESC
        ",[$CODCCUSTO, $CODCCUSTO]);
        
        return $query->getResultArray();
    }


    /* TRAZENDO OS RDO EM CRIAÇÃO*/
    public function getMovimentosRDO($CODCCUSTO)
    {
        $query = $this->db->query("
        SELECT
        CODCCUSTO, 
        TMOV.IDMOV,
        TMOV.STATUS,
        TMOV.NUMEROMOV, 
        DATAEMISSAO, 
        CODUSUARIO,
        SAMF_CLI_OS, 
        SAMF_CLI_TEXTO_BREVE, 
        SAMF_CLI_DESC_OP, 
        SAMF_CLI_TAG, 
        SAMF_OBSERVACAO, 
        SAMF_PREV_VISITANOVO, 
        SAMF_PREDECESSORA,
        TMOVCOMPL.RECMODIFIEDON,
        CONVERT(VARCHAR, DATAEXTRA1, 103) AS DATAEXTRA1,
        CONVERT(VARCHAR, DATAEXTRA1, 103) AS DATAEXTRA2,
        SAMF_CLI_AREANV1,
        SAMF_CLI_AREANV2,
        SAMF_CLI_TIPOSC, 
        SAMF_RDO_TPCONT AS TIPO_CONTRATO
                        
        FROM TMOV
                        
        LEFT JOIN TMOVCOMPL 
        ON TMOVCOMPL.IDMOV = TMOV.IDMOV AND TMOVCOMPL.CODCOLIGADA = TMOV.CODCOLIGADA
                        
        WHERE TMOV.CODTMV = '1.1.52' AND CODCCUSTO = ? AND TMOV.STATUS IN ('A','B')
                        
        --AND TMOV.IDMOV NOT IN (SELECT IDMOVORIGEM FROM TMOVRELAC LEFT JOIN TMOV ON TMOV.IDMOV = TMOVRELAC.IDMOVORIGEM AND TMOV.CODCOLIGADA = TMOVRELAC.CODCOLORIGEM)
        ORDER BY TMOV.DATAEXTRA1 DESC
        ",[$CODCCUSTO]);
        
        return $query->getResultArray();
    }



    /* TRAZENDO OS RDO PARA APROVACAO DO GESTOR NO QUAL O STATUS SERÁ G */
    public function getMovimentosRDOAprov($CODCCUSTO)
    {
        $query = $this->db->query("
        SELECT
        CODCCUSTO, 
        TMOV.IDMOV,
        TMOV.STATUS,
        TMOV.NUMEROMOV, 
        DATAEMISSAO, 
        CODUSUARIO,
        SAMF_CLI_OS, 
        SAMF_CLI_TEXTO_BREVE, 
        SAMF_CLI_DESC_OP, 
        SAMF_CLI_TAG, 
        SAMF_OBSERVACAO, 
        SAMF_PREV_VISITANOVO, 
        SAMF_PREDECESSORA,
        TMOVCOMPL.RECMODIFIEDON,
        CONVERT(VARCHAR, DATAEXTRA1, 103) AS DATAEXTRA1,
        CONVERT(VARCHAR, DATAEXTRA2, 103) AS DATAEXTRA2,
        SAMF_CLI_AREANV1,
        SAMF_CLI_AREANV2,
        SAMF_CLI_TIPOSC,
        (SELECT TOP 1 NOMEARQUIVO FROM SAMF_IMAGENS WHERE SAMF_IMAGENS.IDMOV = TMOV.IDMOV)  AS NOMEARQUIVO
                        
        FROM TMOV
                        
        LEFT JOIN TMOVCOMPL 
        ON TMOVCOMPL.IDMOV = TMOV.IDMOV AND TMOVCOMPL.CODCOLIGADA = TMOV.CODCOLIGADA
                        
        WHERE TMOV.CODTMV = '1.1.52' AND CODCCUSTO = ? AND TMOV.STATUS = 'G'
                        
        --AND TMOV.IDMOV NOT IN         (SELECT IDMOVORIGEM FROM TMOVRELAC LEFT JOIN TMOV ON TMOV.IDMOV = TMOVRELAC.IDMOVORIGEM AND TMOV.CODCOLIGADA = TMOVRELAC.CODCOLORIGEM)
        ORDER BY TMOV.DATAEXTRA1
        ",[$CODCCUSTO]);
        
        return $query->getResultArray();
    }

     /* TRAZENDO OS RDO PARA APROVACAO DO CLIENTE NO QUAL O STATUS SERÁ F */
     public function getMovimentosRDOAprovCliente($CODCCUSTO)
     {
         $query = $this->db->query("
         SELECT
        TMOV.CODCCUSTO, 
        TMOV.IDMOV,
        TMOV.STATUS,
        TMOV.NUMEROMOV, 
        DATAEMISSAO, 
        CODUSUARIO,
        SAMF_CLI_OS, 
        SAMF_CLI_TEXTO_BREVE, 
        SAMF_CLI_DESC_OP, 
        SAMF_CLI_TAG, 
        SAMF_OBSERVACAO, 
        SAMF_PREV_VISITANOVO, 
        SAMF_PREDECESSORA,
        TMOVCOMPL.RECMODIFIEDON,
        CONVERT(VARCHAR, DATAEXTRA1, 103) AS DATAREFERENCIA,
        CONVERT(VARCHAR, DATAEXTRA1, 103) AS DATAEXTRA2,
        SAMF_CLI_AREANV1,
        AREANV1.NOME_AREA, 
        SAMF_CLI_AREANV2,
        SAMF_CLI_TIPOSC,
        (SELECT TOP 1 NOMEARQUIVO FROM SAMF_IMAGENS WHERE SAMF_IMAGENS.IDMOV = TMOV.IDMOV)  AS NOMEARQUIVO,
        CASE 
            WHEN EXISTS (
                SELECT 1 
                FROM SAMF_COMENTARIOS 
                WHERE COMENTARIO LIKE '%REPROV%' 
                AND CODCCUSTO = ? 
                AND SAMF_COMENTARIOS.IDMOV = TMOV.IDMOV
            ) THEN 1
            ELSE 0
        END AS INDICADOR_REPROV
    FROM TMOV
    LEFT JOIN TMOVCOMPL 
        ON TMOVCOMPL.IDMOV = TMOV.IDMOV AND TMOVCOMPL.CODCOLIGADA = TMOV.CODCOLIGADA
    LEFT JOIN SAMF_CLI_AREAS AS AREANV0 ON CAST(AREANV0.ID AS VARCHAR) = TMOVCOMPL.SAMF_CLI_AREANV0 
    LEFT JOIN SAMF_CLI_AREAS AS AREANV1 ON CAST(AREANV1.ID AS VARCHAR) = TMOVCOMPL.SAMF_CLI_AREANV1
    WHERE TMOV.CODTMV = '1.1.52' 
        AND TMOV.CODCCUSTO = ? 
        AND TMOV.STATUS IN ('F','R')
    ORDER BY TMOV.RECCREATEDON DESC
         ",[$CODCCUSTO, $CODCCUSTO]);
         
         return $query->getResultArray();
     }




    /* TRAZENDO OS RDO APROVADOS PELO GERENTE TOP ANDAIMES */
    public function getMovimentosRDOFinal($CODCCUSTO)
    {
        $query = $this->db->query("
        SELECT
        CODCCUSTO, 
        TMOV.IDMOV,
        TMOV.STATUS,
        TMOV.NUMEROMOV, 
        DATAEMISSAO, 
        CODUSUARIO,
        SAMF_CLI_OS, 
        SAMF_CLI_TEXTO_BREVE, 
        SAMF_CLI_DESC_OP, 
        SAMF_CLI_TAG, 
        SAMF_OBSERVACAO, 
        SAMF_PREV_VISITANOVO, 
        SAMF_PREDECESSORA,
        TMOVCOMPL.RECMODIFIEDON,
        CONVERT(VARCHAR, DATAEXTRA1, 103) AS DATAEXTRA1,
        CONVERT(VARCHAR, DATAEXTRA1, 103) AS DATAEXTRA2,
        SAMF_CLI_AREANV1,
        SAMF_CLI_AREANV2,
        SAMF_CLI_TIPOSC
                        
        FROM TMOV
                        
        LEFT JOIN TMOVCOMPL 
        ON TMOVCOMPL.IDMOV = TMOV.IDMOV AND TMOVCOMPL.CODCOLIGADA = TMOV.CODCOLIGADA
                        
        WHERE TMOV.CODTMV = '1.1.52' AND CODCCUSTO = ? AND TMOV.STATUS = 'Q'
                        
        -- AND TMOV.IDMOV NOT IN         (SELECT IDMOVORIGEM FROM TMOVRELAC LEFT JOIN TMOV ON TMOV.IDMOV = TMOVRELAC.IDMOVORIGEM AND TMOV.CODCOLIGADA = TMOVRELAC.CODCOLORIGEM)
        ORDER BY TMOV.DATAEXTRA1
        ",[$CODCCUSTO]);
        
        return $query->getResultArray();
    }


     /* TRAZENDO OS MOVIMENTOS INSERIDOS PARA ADICIONAR ITENS */
     public function getTotalAtrasadosSC($CODCCUSTO)
     {
         $query = $this->db->query(" 
            SELECT 
            COUNT (TMOV.IDMOV) AS TOTAL				                  
            FROM TMOV                 
            LEFT JOIN TMOVCOMPL 
            ON TMOVCOMPL.IDMOV = TMOV.IDMOV AND TMOVCOMPL.CODCOLIGADA = TMOV.CODCOLIGADA       
            WHERE TMOV.CODTMV = '1.1.40' AND STATUS = 'A' 
            AND TMOV.IDMOV NOT IN 
            (SELECT IDMOVORIGEM FROM TMOVRELAC LEFT JOIN TMOV ON TMOV.IDMOV = TMOVRELAC.IDMOVORIGEM AND TMOV.CODCOLIGADA = TMOVRELAC.CODCOLORIGEM)
            AND TMOV.DATAEXTRA1 < GETDATE()
            AND CODCCUSTO = ?
            ",[$CODCCUSTO]);
         
         return $query->getResultArray();
     }

    /* QUANTIDADE DE MOVIMENTOS NA SOLICITAÇÃO */
    public function getTotalMovimentos($CODCCUSTO)
    {
        $query = $this->db->query("SELECT COUNT (TMOV.IDMOV) AS TOTAL

        FROM TMOV
                
        WHERE TMOV.CODTMV = '1.1.40' AND STATUS = 'A' AND CODCCUSTO = ?

		AND TMOV.IDMOV NOT IN 
		(SELECT IDMOVORIGEM FROM TMOVRELAC LEFT JOIN TMOV ON TMOV.IDMOV = TMOVRELAC.IDMOVORIGEM AND TMOV.CODCOLIGADA = TMOVRELAC.CODCOLORIGEM)",[$CODCCUSTO]);
        
        return $query->getResultArray();
    }

    /* QUANTIDADE DE MOVIMENTOS NA VISITA PENDENTES */
    public function getTotalMovimentosVisitas($CODCCUSTO)
    {
        $query = $this->db->query("SELECT COUNT (TMOV.IDMOV) AS TOTAL 
        FROM TMOV 
        WHERE TMOV.CODTMV = '1.1.41' AND STATUS = 'A'
        AND CODCCUSTO = ?
        AND TMOV.IDMOV NOT IN (SELECT IDMOVORIGEM FROM TMOVRELAC LEFT JOIN TMOV ON TMOV.IDMOV = TMOVRELAC.IDMOVORIGEM AND TMOV.CODCOLIGADA = TMOVRELAC.CODCOLORIGEM)",[$CODCCUSTO]);
        
        return $query->getResultArray();
    }

     /* QUANTIDADE DE RDO PENTENDE DO CLIENTE */
     public function getTotalRDOPendenteCliente($CODCCUSTO)
     {
         $query = $this->db->query("SELECT COUNT (IDMOV) AS TOTAL_RDO_PENDENTE_CLIENTE FROM TMOV WHERE CODTMV = '1.1.52' AND CODCCUSTO = ? AND STATUS IN ('R','F')",[$CODCCUSTO]);
         
         return $query->getResultArray();
     }

    /* TOTAL PREVISTO PARA PRÓXIMOS 7 DIAS MOVIMENTO VISITA */
    public function getTotal7Visitas()
    {
        $query = $this->db->query("SELECT 

        COUNT (TMOV.IDMOV) AS TOTAL
        
        FROM TMOV
        
        LEFT JOIN TMOVCOMPL ON TMOVCOMPL.IDMOV = TMOV.IDMOV AND TMOVCOMPL.CODCOLIGADA = TMOV.CODCOLIGADA
        LEFT JOIN TMOVRELAC ON TMOVRELAC.IDMOVORIGEM = TMOV.IDMOV
        
        WHERE
        
        TMOV.CODTMV = '1.1.40' AND STATUS = 'A' 
        AND TMOV.IDMOV IN (
            SELECT IDMOVORIGEM 
            FROM TMOVRELAC 
            LEFT JOIN TMOV ON TMOV.IDMOV = TMOVRELAC.IDMOVORIGEM AND TMOV.CODCOLIGADA = TMOVRELAC.CODCOLORIGEM
        )
        AND TMOV.DATAEXTRA1 < DATEADD(DAY, 6, GETDATE())");
        
        return $query->getResultArray();
    }

    /* TOTAL DA TAG QUE MAIS SE REPETE PARA OS PRÓXIMOS 7 DIAS */
    public function getTotal7Visitasrepete()
    {
        $query = $this->db->query("SELECT TOP 1
        SAMF_CLI_TAG,
        COUNT(*) AS TOTAL
    FROM TMOV
    LEFT JOIN TMOVCOMPL ON TMOVCOMPL.IDMOV = TMOV.IDMOV AND TMOVCOMPL.CODCOLIGADA = TMOV.CODCOLIGADA
    WHERE TMOV.CODTMV = '1.1.40' 
        AND STATUS = 'A' 
        AND TMOV.IDMOV IN (
            SELECT IDMOVORIGEM 
            FROM TMOVRELAC 
            LEFT JOIN TMOV ON TMOV.IDMOV = TMOVRELAC.IDMOVORIGEM AND TMOV.CODCOLIGADA = TMOVRELAC.CODCOLORIGEM
        )
        AND TMOV.DATAEXTRA1 < DATEADD(DAY, 6, GETDATE()) -- Comparando com a data atual + 6 dias
    GROUP BY SAMF_CLI_TAG
    ORDER BY COUNT(*) DESC");

    return $query->getResultArray();    
    }

    /* TRAZENDO IMAGENS */
    public function getImagens()
    {
        $query = $this->db->query("SELECT ID, NOMEARQUIVO, IDMOV, FLUXO, NOMEARQUIVO_EXIBIR FROM SAMF_IMAGENS");
        
        return $query->getResultArray();
    }






    


    /* TOTAL PREVISTO PARA PRÓXIMOS 7 DIAS */
    public function getTotal7($CODCCUSTO)
    {
        $query = $this->db->query("SELECT 
        COUNT (TMOV.IDMOV) AS TOTAL7
    FROM TMOV
    LEFT JOIN TMOVCOMPL ON TMOVCOMPL.IDMOV = TMOV.IDMOV AND TMOVCOMPL.CODCOLIGADA = TMOV.CODCOLIGADA
    WHERE TMOV.CODTMV = '1.1.40' 
        AND STATUS = 'A' 
        AND TMOV.IDMOV NOT IN (
            SELECT IDMOVORIGEM 
            FROM TMOVRELAC 
            LEFT JOIN TMOV ON TMOV.IDMOV = TMOVRELAC.IDMOVORIGEM AND TMOV.CODCOLIGADA = TMOVRELAC.CODCOLORIGEM
        )
        AND TMOV.DATAEXTRA1 < DATEADD(DAY, 6, GETDATE())
		AND CODCCUSTO = ?", [$CODCCUSTO]);
        
        return $query->getResultArray();
    }
    
    /* TOTAL DA TAG QUE MAIS SE REPETE PARA OS PRÓXIMOS 7 DIAS */
    public function getTotal7repete($CODCCUSTO)
    {
        $query = $this->db->query("SELECT TOP 1
        SAMF_CLI_TAG,
        COUNT(*) AS TOTAL
    FROM TMOV
    LEFT JOIN TMOVCOMPL ON TMOVCOMPL.IDMOV = TMOV.IDMOV AND TMOVCOMPL.CODCOLIGADA = TMOV.CODCOLIGADA
    WHERE TMOV.CODTMV = '1.1.40' 
        AND STATUS = 'A' 
        AND TMOV.IDMOV NOT IN (
            SELECT IDMOVORIGEM 
            FROM TMOVRELAC 
            LEFT JOIN TMOV ON TMOV.IDMOV = TMOVRELAC.IDMOVORIGEM AND TMOV.CODCOLIGADA = TMOVRELAC.CODCOLORIGEM
        )
        AND TMOV.DATAEXTRA1 < DATEADD(DAY, 6, GETDATE()) -- Comparando com a data atual + 6 dias
		AND CODCCUSTO = ?
    GROUP BY SAMF_CLI_TAG
    ORDER BY COUNT(*) DESC", [$CODCCUSTO]);
        
        return $query->getResultArray();
    }

    public function getDados() {
        $query = $this->db->query("SELECT *
      
        FROM TMOV
        LEFT JOIN TMOVCOMPL ON TMOVCOMPL.IDMOV = TMOV.IDMOV AND TMOVCOMPL.CODCOLIGADA = TMOV.CODCOLIGADA
        WHERE TMOV.CODTMV = '1.1.40' 
            AND STATUS = 'A' 
            AND TMOV.IDMOV NOT IN (
                SELECT IDMOVORIGEM 
                FROM TMOVRELAC 
                LEFT JOIN TMOV ON TMOV.IDMOV = TMOVRELAC.IDMOVORIGEM AND TMOV.CODCOLIGADA = TMOVRELAC.CODCOLORIGEM
            )
            AND TMOV.DATAEXTRA1 < DATEADD(DAY, 6, GETDATE())");



        return $query->getResultArray();

    }

    
    /* TRAZENDO QR CODE LIDO PELO USUÁRIO */
    public function getQrCodeLido($parametro)
    {
        $query = $this->db->query("
        SELECT * FROM (

            SELECT 

			FORMAT(TITMMOVCOMPL_PLANEJAMENTO.BM_ALTURA, 'N2') AS ALTURA_PLANEJAMENTO,
			FORMAT(TITMMOVCOMPL_PLANEJAMENTO.BM_LARGURA, 'N2')  AS LARGURA_PLANEJAMENTO,
			FORMAT(TITMMOVCOMPL_PLANEJAMENTO.BM_COMPRIMENTO, 'N2')  AS COMPRIMENTO_PLANEJAMENTO,
			FORMAT(TITMMOVCOMPL_PLANEJAMENTO.BM_ALTURA * TITMMOVCOMPL_PLANEJAMENTO.BM_LARGURA * TITMMOVCOMPL_PLANEJAMENTO.BM_COMPRIMENTO, 'N2')   AS METRAGEM_PLANEJAMENTO,


            TITMMOV.IDPRD, -- AJUSTAR ISSO
            TITMMOV.NSEQITMMOV, -- AJUSTAR ISSO
            
            TITMMOVCOMPL.BM_ALTURA,
            TITMMOVCOMPL.BM_COMPRIMENTO,
            TITMMOVCOMPL.BM_LARGURA,
            
            TMOVCOMPL_PROJETO.SAMF_VS_AP1,
            TMOVCOMPL_PROJETO.SAMF_VS_AP2,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER1,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER2,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER3,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER4,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER5,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER6,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER7,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER8,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER9,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER10,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER11,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER12,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER13,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER14,
            TMOVCOMPL_PROJETO.SAMF_VS_PP1,
            TMOVCOMPL_PROJETO.SAMF_VS_PP2,
            TMOVCOMPL_PROJETO.SAMF_VS_PP3,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP4, 108), 5) AS SAMF_VS_PP4,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP5, 108), 5) AS SAMF_VS_PP5,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP6, 108), 5) AS SAMF_VS_PP6,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP7, 108), 5) AS SAMF_VS_PP7,
            TMOVCOMPL_PROJETO.SAMF_VS_COMPLX,
            
            TMOVCOMPL.IDMOV AS IDMOV_SC,
			TMOVCOMPL.SAMF_CLI_LOCANDAIME2,
            TMOVCOMPL.SAMF_CLI_OS AS OS_CLIENTE,
            TMOVCOMPL.SAMF_CLI_LOC,
            TMOVCOMPL.SAMF_OBSERVACAO,
            TMOVCOMPL.SAMF_CLI_OS,
            TMOVCOMPL.SAMF_CLI_TEXTO_BREVE,
            TMOVCOMPL.SAMF_CLI_DESC_OP,
            TMOVCOMPL.SAMF_CLI_DENOMINACAO,
            TMOVCOMPL.SAMF_CLI_CENTRAB_RES,
            TMOVCOMPL.SAMF_CLI_CENTRAB_OP,
            TMOVCOMPL.SAMF_CLI_OPERACAO,
            TMOVCOMPL.SAMF_CLI_CODCCUSTO,
            TMOVCOMPL.SAMF_CLI_QRCODE,
            TMOVCOMPL.SAMF_CLI_TAG,
            TMOVCOMPL.SAMF_VS_PISO,
            TMOVCOMPL.SAMF_CLI_PARADA,
            
            TMOVRELAC.IDMOVORIGEM AS IDMOVORIGEM,
            TMOVRELAC.IDMOVDESTINO AS IDMOVDESTINO,
            TR2.IDMOVDESTINO AS IDMOVPROJETO,
			TR3.IDMOVDESTINO AS IDMOVPLANEJAMENTO,

			TMOV_PLANEJAMENTO.STATUS AS STATUS_PLANEJAMENTO,
			FORMAT(TMOV_PLANEJAMENTO.DATAEXTRA1, 'dd/MM/yyyy') AS DATA_MONTAGEM,
			FORMAT(TMOV_PLANEJAMENTO.DATAEXTRA1, 'dd/MM/yyyy') AS DATA_DESMONTAGEM,
            

            CASE 
                WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 3
                WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 2
                ELSE 1
                END AS VALIDACAO
            FROM 
                TMOVCOMPL

            LEFT JOIN TMOV ON TMOV.IDMOV = TMOVCOMPL.IDMOV AND TMOV.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA
            
            LEFT JOIN TMOVRELAC ON TMOVRELAC.CODCOLORIGEM = TMOV.CODCOLIGADA AND TMOVRELAC.IDMOVORIGEM = TMOV.IDMOV
            
            LEFT JOIN TMOVRELAC TR2 ON TR2.CODCOLORIGEM = TMOVRELAC.CODCOLORIGEM AND TR2.IDMOVORIGEM = TMOVRELAC.IDMOVDESTINO

            LEFT JOIN TMOVRELAC TR3 ON TR3.CODCOLORIGEM = TR2.CODCOLORIGEM AND TR3.IDMOVORIGEM = TR2.IDMOVDESTINO

			LEFT JOIN TMOV TMOV_PLANEJAMENTO ON TMOV_PLANEJAMENTO.CODCOLIGADA = TR3.CODCOLORIGEM AND TMOV_PLANEJAMENTO.IDMOV = TR3.IDMOVDESTINO
            
            LEFT JOIN TMOVCOMPL TMOVCOMPL_PROJETO ON TMOVCOMPL_PROJETO.CODCOLIGADA = TR2.CODCOLORIGEM AND TMOVCOMPL_PROJETO.IDMOV = TR2.IDMOVDESTINO
            
            LEFT JOIN TITMMOV ON TITMMOV.IDMOV = TMOV.IDMOV AND TITMMOV.CODCOLIGADA = TMOV.CODCOLIGADA
            
            LEFT JOIN TITMMOVCOMPL ON TITMMOVCOMPL.IDMOV = TR2.IDMOVDESTINO AND TITMMOVCOMPL.CODCOLIGADA = TR2.CODCOLORIGEM        
			
			--ABAIXO DADOS DA TITMMOV E TITMMOVCOMPL RELACIONADAS AO PLANEJAMENTO 
			LEFT JOIN TITMMOV TITMMOV_PLANEJAMENTO ON TITMMOV.IDMOV = TMOV_PLANEJAMENTO.IDMOV AND TITMMOV.CODCOLIGADA = TMOV_PLANEJAMENTO.CODCOLIGADA
            
            LEFT JOIN TITMMOVCOMPL TITMMOVCOMPL_PLANEJAMENTO ON TITMMOVCOMPL_PLANEJAMENTO.IDMOV = TR3.IDMOVDESTINO AND TITMMOVCOMPL_PLANEJAMENTO.CODCOLIGADA = TR3.CODCOLDESTINO     


            WHERE 
                TMOV.CODTMV LIKE '1.1.4%'
				            
            ) AS RESULT1
            
            WHERE VALIDACAO = 3

			AND SAMF_CLI_QRCODE = ?",[$parametro]);
        
        return $query->getResultArray();
    }

    /* TRAZENDO QR CODE LIDO PELO USUÁRIO */
    public function getPesquisaold($CODCCUSTO, $parametro)
    {
        $query = $this->db->query("
        SELECT

        TMOVCOMPL.SAMF_CLI_OS,
		TMOVRELAC.IDMOVORIGEM AS IDMOVORIGEM,
		TMOVRELAC.IDMOVDESTINO AS IDMOVDESTINO,
		TR2.IDMOVDESTINO AS IDMOVPROJETO,
		CASE 
			WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 3
			WHEN TMOVRELAC.IDMOVDESTINO IS NOT NULL THEN 2
			ELSE 1
		END AS VALIDACAO,

        TMOV.CODTMV,
        TMOV.STATUS,
        TMOV.IDMOV,
        DATAEXTRA1 AS DATA_INICIO,
        DATAEXTRA2 AS DATA_FIM,
        TMOVCOMPL.SAMF_CLI_LOC,
        TMOVCOMPL.SAMF_OBSERVACAO,
        TMOVCOMPL.SAMF_CLI_OS,
        TMOVCOMPL.SAMF_CLI_TEXTO_BREVE,
        TMOVCOMPL.SAMF_CLI_DESC_OP,
        TMOVCOMPL.SAMF_CLI_DENOMINACAO,
        TMOVCOMPL.SAMF_CLI_CENTRAB_RES,
        TMOVCOMPL.SAMF_CLI_CENTRAB_OP,
        TMOVCOMPL.SAMF_CLI_OPERACAO,
        TMOVCOMPL.SAMF_CLI_CODCCUSTO,
        TMOVCOMPL.SAMF_CLI_QRCODE,
        TMOVCOMPL.SAMF_IDMOV_ORIGEM,
        TMOVCOMPL.SAMF_ENCARREGADO,
        TMOVCOMPL.SAMF_PREDECESSORA,
        TMOVCOMPL.SAMF_PREV_DURACAO,
        TMOVCOMPL.SAMF_CLI_TAG,
        TMOVCOMPL.SAMF_PREV_VISITANOVO,
		
        --INFORMAÇÕES DO 1142 QUE SÃO ONDE ESTÁ INFORMAÇÕES DA VISITA 
		TMOVCOMPL_VS_PL.SAMF_VS_INTERFER1,
        TMOVCOMPL_VS_PL.SAMF_VS_INTERFER2,
        TMOVCOMPL_VS_PL.SAMF_VS_INTERFER3,
        TMOVCOMPL_VS_PL.SAMF_VS_INTERFER4,
        TMOVCOMPL_VS_PL.SAMF_VS_INTERFER5,
        TMOVCOMPL_VS_PL.SAMF_VS_INTERFER6,
        TMOVCOMPL_VS_PL.SAMF_VS_INTERFER7,
        TMOVCOMPL_VS_PL.SAMF_VS_INTERFER8,
        TMOVCOMPL_VS_PL.SAMF_VS_INTERFER9,
        TMOVCOMPL_VS_PL.SAMF_VS_INTERFER10,
        TMOVCOMPL_VS_PL.SAMF_VS_INTERFER11,
        TMOVCOMPL_VS_PL.SAMF_VS_INTERFER12,
        TMOVCOMPL_VS_PL.SAMF_VS_INTERFER13,
        TMOVCOMPL_VS_PL.SAMF_VS_INTERFER14,
        TMOVCOMPL_VS_PL.SAMF_VS_PP1,
        TMOVCOMPL_VS_PL.SAMF_VS_PP2,
        TMOVCOMPL_VS_PL.SAMF_VS_PP3,
        LEFT(CONVERT(varchar, TMOVCOMPL_VS_PL.SAMF_VS_PP4, 108), 5) AS SAMF_VS_PP4,
        LEFT(CONVERT(varchar, TMOVCOMPL_VS_PL.SAMF_VS_PP5, 108), 5) AS SAMF_VS_PP5,
        LEFT(CONVERT(varchar, TMOVCOMPL_VS_PL.SAMF_VS_PP6, 108), 5) AS SAMF_VS_PP6,
        LEFT(CONVERT(varchar, TMOVCOMPL_VS_PL.SAMF_VS_PP7, 108), 5) AS SAMF_VS_PP7,
        TMOVCOMPL_VS_PL.SAMF_VS_COMPLX,

        CODCCUSTO,
        DATAEMISSAO,
        TMOV.RECMODIFIEDON,
		TMOVCOMPL.IDMOV AS IDMOV_SC
		
         
        FROM	TMOV
                  
                LEFT JOIN
                TMOVCOMPL
                ON	TMOV.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA
                AND TMOV.IDMOV = TMOVCOMPL.IDMOV

				LEFT JOIN
				TMOVRELAC ON TMOVRELAC.CODCOLORIGEM = TMOV.CODCOLIGADA AND TMOVRELAC.IDMOVORIGEM = TMOV.IDMOV

				LEFT JOIN
				TMOVRELAC TR2 ON TR2.CODCOLORIGEM = TMOVRELAC.CODCOLORIGEM AND TR2.IDMOVORIGEM = TMOVRELAC.IDMOVDESTINO

				LEFT JOIN
                TMOVCOMPL AS TMOVCOMPL_VS_PL
                ON	TMOV.CODCOLIGADA = TMOVCOMPL_VS_PL.CODCOLIGADA
                AND TR2.IDMOVDESTINO = TMOVCOMPL_VS_PL.IDMOV

         
        WHERE	TMOV.CODCOLIGADA = 1
		AND   TMOV.CODTMV LIKE '1.1.4%'
        AND TMOV.CODCCUSTO = ?
		AND TMOVRELAC.IDMOVDESTINO = ?", [$CODCCUSTO, $parametro]);
        

        // $row = $query->getRow();
        // if ($row) {
        //     return $row; 
        // } else {
        //     return null; 
        // }

        return $query->getRow();



        // return $query->getResultArray();
    }
    

    public function getPesquisa($CODCCUSTO, $parametro)
    {
        $query = $this->db->query("
        
            SELECT 			
            
            TMOV_SOLICITACAO.IDMOV AS IDMOVSOLICITACAO,
            TMOV_VISITA.IDMOV AS IDMOVVISITA,
			TMOV_PROJETO.IDMOV AS IDMOVPROJETO, 
			RELAC_MONTAGEM.IDMOVDESTINO AS IDMOVMONTAGEM,
			TMOV_VISITA.CODTMV AS MOVIMENTO_VISITA,
			TMOV_VISITA.STATUS AS STATUS_VISITA, 
			

			TMOV_SOLICITACAO.CODCCUSTO,
            TMOV_SOLICITACAO.STATUS,
		
            --TITMMOV.IDPRD, -- AJUSTAR ISSO
            --TITMMOV.NSEQITMMOV, -- AJUSTAR ISSO
            
            TITMMOVCOMPL.BM_ALTURA,
            TITMMOVCOMPL.BM_COMPRIMENTO,
            TITMMOVCOMPL.BM_LARGURA,
            
			-- ABAIXO INFORMAÇÕES COMPLEMENTARES DA VISITA -- ELAS ESTÃO SENDO SALVAS NO MOVIMENTO DO PROJETO 
            COMPL_PROJETO.SAMF_VS_AP1,
            COMPL_PROJETO.SAMF_VS_AP2,
            COMPL_PROJETO.SAMF_VS_INTERFER1,
            COMPL_PROJETO.SAMF_VS_INTERFER2,
            COMPL_PROJETO.SAMF_VS_INTERFER3,
            COMPL_PROJETO.SAMF_VS_INTERFER4,
            COMPL_PROJETO.SAMF_VS_INTERFER5,
            COMPL_PROJETO.SAMF_VS_INTERFER6,
            COMPL_PROJETO.SAMF_VS_INTERFER7,
            COMPL_PROJETO.SAMF_VS_INTERFER8,
            COMPL_PROJETO.SAMF_VS_INTERFER9,
            COMPL_PROJETO.SAMF_VS_INTERFER10,
            COMPL_PROJETO.SAMF_VS_INTERFER11,
            COMPL_PROJETO.SAMF_VS_INTERFER12,
            COMPL_PROJETO.SAMF_VS_INTERFER13,
            COMPL_PROJETO.SAMF_VS_INTERFER14,
            COMPL_PROJETO.SAMF_VS_PP1,
            COMPL_PROJETO.SAMF_VS_PP2,
            COMPL_PROJETO.SAMF_VS_PP3,
            LEFT(CONVERT(varchar, COMPL_PROJETO.SAMF_VS_PP4, 108), 5) AS SAMF_VS_PP4,
            LEFT(CONVERT(varchar, COMPL_PROJETO.SAMF_VS_PP5, 108), 5) AS SAMF_VS_PP5,
            LEFT(CONVERT(varchar, COMPL_PROJETO.SAMF_VS_PP6, 108), 5) AS SAMF_VS_PP6,
            LEFT(CONVERT(varchar, COMPL_PROJETO.SAMF_VS_PP7, 108), 5) AS SAMF_VS_PP7,
            COMPL_PROJETO.SAMF_VS_COMPLX,
            
            COMPL_PROJETO.SAMF_VS_AMBIENTE,
            COMPL_SOLICITACAO.IDMOV AS IDMOV_SC,
			COMPL_SOLICITACAO.SAMF_CLI_LOCANDAIME2,
            COMPL_SOLICITACAO.SAMF_CLI_OS AS OS_CLIENTE,
            COMPL_SOLICITACAO.SAMF_CLI_LOC,
            COMPL_SOLICITACAO.SAMF_OBSERVACAO,
            COMPL_SOLICITACAO.SAMF_CLI_OS,
            COMPL_SOLICITACAO.SAMF_CLI_TEXTO_BREVE,
            COMPL_SOLICITACAO.SAMF_CLI_DESC_OP,
            COMPL_SOLICITACAO.SAMF_CLI_DENOMINACAO,
            COMPL_SOLICITACAO.SAMF_CLI_CENTRAB_RES,
            COMPL_SOLICITACAO.SAMF_CLI_CENTRAB_OP,
            COMPL_SOLICITACAO.SAMF_CLI_OPERACAO,
            COMPL_SOLICITACAO.SAMF_CLI_CODCCUSTO,
            COMPL_SOLICITACAO.SAMF_CLI_QRCODE,
            COMPL_SOLICITACAO.SAMF_CLI_TAG,
            COMPL_SOLICITACAO.SAMF_VS_PISO,
            COMPL_SOLICITACAO.SAMF_CLI_PARADA,
            COMPL_SOLICITACAO.SAMF_CLI_BMOBS,
			COMPL_SOLICITACAO.SAMF_CLI_AREANV0,
            COMPL_SOLICITACAO.SAMF_CLI_AREANV1,
            COMPL_SOLICITACAO.SAMF_CLI_AREANV2,
            TMOV_PROJETO.DATAEXTRA1 AS DATAEXTRA1EXIBIR,
            TMOV_PROJETO.DATAEXTRA2 AS DATAEXTRA2EXIBIR,	
            CONVERT(VARCHAR(10), TMOV_PROJETO.DATAEXTRA1, 120) AS DATAEXTRA1, 
			CONVERT(VARCHAR(5), TMOV_PROJETO.DATAEXTRA1, 108) AS HORADATAEXTRA1,      
			CONVERT(VARCHAR(10), TMOV_PROJETO.DATAEXTRA2, 120) AS DATAEXTRA2, 
			CONVERT(VARCHAR(5), TMOV_PROJETO.DATAEXTRA2, 108) AS HORADATAEXTRA2,  
			SAMF_ACESSO.ID AS ID_ENCARREGADO,
			SAMF_ACESSO.CODUSUARIO AS NOME_ENCARREGADO,
            AREANV0.NOME_AREA AS NOME_SAMF_CLI_AREANV0,
            COMPL_SOLICITACAO.SAMF_VS_ATERRADO,
            COMPL_SOLICITACAO.SAMF_VS_AMBIENTE AS SOLICITACAO_SAMF_VS_AMBIENTE

            FROM TMOV AS TMOV_SOLICITACAO

            LEFT JOIN TMOVCOMPL AS COMPL_SOLICITACAO ON COMPL_SOLICITACAO.IDMOV = TMOV_SOLICITACAO.IDMOV AND COMPL_SOLICITACAO.CODCOLIGADA = TMOV_SOLICITACAO.CODCOLIGADA 

			LEFT JOIN TMOVRELAC AS RELAC_SOLICITACAO ON RELAC_SOLICITACAO.CODCOLORIGEM = TMOV_SOLICITACAO.CODCOLIGADA AND RELAC_SOLICITACAO.IDMOVORIGEM = TMOV_SOLICITACAO.IDMOV             
         
			LEFT JOIN TMOV AS TMOV_VISITA ON TMOV_VISITA.IDMOV = RELAC_SOLICITACAO.IDMOVDESTINO 

			LEFT JOIN TMOVCOMPL AS COMPL_VISITA ON COMPL_VISITA.CODCOLIGADA = TMOV_VISITA.CODCOLIGADA AND COMPL_VISITA.IDMOV = TMOV_VISITA.IDMOV 			
			
			LEFT JOIN SAMF_ACESSO ON SAMF_ACESSO.CODCCUSTO = TMOV_SOLICITACAO.CODCCUSTO AND SAMF_ACESSO.ID = COMPL_SOLICITACAO.SAMF_ENCARREGADO
			
			LEFT JOIN SAMF_CLI_AREAS AS AREANV0 ON CAST(AREANV0.ID AS VARCHAR) = COMPL_SOLICITACAO.SAMF_CLI_AREANV0 
			
			LEFT JOIN SAMF_CLI_AREAS AS AREANV1	ON CAST(AREANV1.ID AS VARCHAR) = COMPL_SOLICITACAO.SAMF_CLI_AREANV1

			LEFT JOIN TMOVRELAC AS RELAC_PROJETO ON RELAC_PROJETO.IDMOVORIGEM = TMOV_VISITA.IDMOV AND RELAC_PROJETO.CODCOLORIGEM = TMOV_VISITA.CODCOLIGADA

			LEFT JOIN TMOV AS TMOV_PROJETO ON TMOV_PROJETO.IDMOV = RELAC_PROJETO.IDMOVDESTINO 
			
			LEFT JOIN TMOVCOMPL AS COMPL_PROJETO ON COMPL_PROJETO.CODCOLIGADA = TMOV_PROJETO.CODCOLIGADA AND COMPL_PROJETO.IDMOV = TMOV_PROJETO.IDMOV 	
			
			LEFT JOIN TITMMOV ON TITMMOV.IDMOV = TMOV_PROJETO.IDMOV AND TITMMOV.CODCOLIGADA = TMOV_PROJETO.CODCOLIGADA
            
            LEFT JOIN TITMMOVCOMPL ON TITMMOVCOMPL.IDMOV = RELAC_PROJETO.IDMOVDESTINO AND TITMMOVCOMPL.CODCOLIGADA = RELAC_PROJETO.CODCOLORIGEM 
			
			LEFT JOIN TMOVRELAC AS RELAC_MONTAGEM ON RELAC_MONTAGEM.IDMOVORIGEM = TMOV_PROJETO.IDMOV AND RELAC_PROJETO.CODCOLORIGEM= TMOV_PROJETO.CODCOLIGADA

            WHERE
            
			TMOV_VISITA.CODTMV LIKE '1.1.41'
			AND TMOV_VISITA.STATUS IN ('A','B')
			AND TMOV_VISITA.IDMOV NOT IN 
			(SELECT IDMOVORIGEM FROM TMOVRELAC   
			LEFT JOIN TMOV ON TMOV.IDMOV = TMOVRELAC.IDMOVORIGEM AND TMOV.CODCOLIGADA = TMOVRELAC.CODCOLORIGEM 
            WHERE TMOV.CODTMV = '1.1.41' AND STATUS = 'A' AND CODCCUSTO = ?)
			AND TMOV_SOLICITACAO.IDMOV = ?", [$CODCCUSTO, $parametro]);
        

        // $row = $query->getRow();
        // if ($row) {
        //     return $row; 
        // } else {
        //     return null; 
        // }

        return $query->getRow();



        // return $query->getResultArray();
    }







    /* TRAZENDO REGISTRO A EDITAR */
    public function getEditar($parametro)
    {
        $query = $this->db->query("
        SELECT 
                CODCCUSTO, 
                TMOV.IDMOV, 
                DATAEMISSAO, 
                CODUSUARIO,
                SAMF_CLI_OS, 
                SAMF_CLI_TEXTO_BREVE, 
                SAMF_CLI_DESC_OP, 
                SAMF_CLI_TAG, 
                SAMF_OBSERVACAO, 
                SAMF_PREV_VISITANOVO, 
                SAMF_PREDECESSORA,
                TMOVCOMPL.RECMODIFIEDON,
                TMOV.DATAEXTRA1,
                TMOV.DATAEXTRA2,
				TMOV.STATUS,
                SAMF_CLI_QRCODE,
                SAMF_VS_PISO,
                SAMF_CLI_AREANV1,
                SAMF_CLI_AREANV2,
                SAMF_CLI_TIPOSC
                
                FROM TMOV
                
                LEFT JOIN TMOVCOMPL 
                ON TMOVCOMPL.IDMOV = TMOV.IDMOV AND TMOVCOMPL.CODCOLIGADA = TMOV.CODCOLIGADA
                
                WHERE TMOV.CODTMV = '1.1.40' AND STATUS = 'A' 
        
                AND TMOV.IDMOV NOT IN 
                (SELECT IDMOVORIGEM FROM TMOVRELAC LEFT JOIN TMOV ON TMOV.IDMOV = TMOVRELAC.IDMOVORIGEM AND TMOV.CODCOLIGADA = TMOVRELAC.CODCOLORIGEM)
                AND TMOV.IDMOV = ?", [$parametro]);
        
        return $query->getResultArray();
    }


    /* TRAZENDO REGISTRO A EDITAR */
    public function getAtendimentoVS($parametro)
    {
        $query = $this->db->query("
        SELECT
        TMOV.CODTMV AS TIPO_MOV_VISITA,
        TMOV.IDMOV AS IDMOV,
        TMOV_SOLICITACAO.CODTMV AS TIPO_MOV_SOLICITACAO,
        TMOV_SOLICITACAO.IDMOV AS ID_SOLICITACAO,
        TMOV_SOLICITACAO.STATUS AS STATUS_SOLICITACAO,
        TMOV_SOLICITACAO.DATAEXTRA1 AS DATA_INICIO,
        TMOV_SOLICITACAO.DATAEXTRA2 AS DATA_FIM,
        SAMF_CLI_LOC,
        SAMF_OBSERVACAO,
        SAMF_CLI_OS,
        SAMF_CLI_TEXTO_BREVE,
        SAMF_CLI_DESC_OP,
        SAMF_CLI_DENOMINACAO,
        SAMF_CLI_CENTRAB_RES,
        SAMF_CLI_CENTRAB_OP,
        SAMF_CLI_OPERACAO,
        SAMF_CLI_CODCCUSTO,
        SAMF_CLI_QRCODE,
        SAMF_IDMOV_ORIGEM,
        SAMF_ENCARREGADO,
        SAMF_PREDECESSORA,
        SAMF_PREV_DURACAO,
        SAMF_CLI_TAG,
        SAMF_PREV_VISITANOVO
         
        FROM	TMOV
         
                LEFT JOIN
                TMOVRELAC
                ON	TMOV.CODCOLIGADA = TMOVRELAC.CODCOLDESTINO
                AND	TMOV.IDMOV = TMOVRELAC.IDMOVDESTINO
         
                LEFT JOIN
                TMOV TMOV_SOLICITACAO
                ON	TMOVRELAC.CODCOLORIGEM = TMOV_SOLICITACAO.CODCOLIGADA
                AND TMOVRELAC.IDMOVORIGEM = TMOV_SOLICITACAO.IDMOV
         
                LEFT JOIN
                TMOVCOMPL
                ON	TMOV_SOLICITACAO.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA
                AND TMOV_SOLICITACAO.IDMOV = TMOVCOMPL.IDMOV
         
        WHERE	TMOV.CODCOLIGADA = 1
        AND		TMOV.CODTMV = '1.1.41' AND TMOV.STATUS = 'A' AND TMOV.CODCCUSTO = ? 
		AND TMOV.IDMOV NOT IN 
                (SELECT IDMOVORIGEM FROM TMOVRELAC LEFT JOIN TMOV ON TMOV.IDMOV = TMOVRELAC.IDMOVORIGEM AND TMOV.CODCOLIGADA = TMOVRELAC.CODCOLORIGEM)
        AND TMOV.IDMOV = ?", [$parametro]);
        
        return $query->getResultArray();
    }




    /* TRAZENDO TODOS ÍTENS DE ANDAIMES */
    public function getItensAndaimes()
    {
        $query = $this->db->query("
        SELECT IDPRD, CODIGOPRD, NOMEFANTASIA AS NOME, INATIVO, PESOBRUTO, PESOLIQUIDO, COMPRIMENTO, ESPESSURA, LARGURA
        FROM TPRD 
        WHERE CODIGOPRD LIKE '02.11%'
        AND CODIGOPRD LIKE '__.__._____'
        AND CODCOLIGADA = 1
        AND INATIVO <> 1
        ORDER BY NOMEFANTASIA
        ");
        
        return $query->getResultArray();
    }




    

    public function getTotamMovimentosProjetos($CODCCUSTO)
    {
    $query = $this->db->query("SELECT COUNT (*) AS TOTAL FROM (
        SELECT      
                
        TMOVCOMPL_PROJETO.SAMF_VS_AP1,
        CASE 
            WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 3
            WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 2
            ELSE 1
            END AS VALIDACAO
        FROM 
            TMOVCOMPL
        LEFT JOIN 
            TMOV ON TMOV.IDMOV = TMOVCOMPL.IDMOV AND TMOV.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA
                
        LEFT JOIN
            TMOVRELAC ON TMOVRELAC.CODCOLORIGEM = TMOV.CODCOLIGADA AND TMOVRELAC.IDMOVORIGEM = TMOV.IDMOV
                
        LEFT JOIN
            TMOVRELAC TR2 ON TR2.CODCOLORIGEM = TMOVRELAC.CODCOLORIGEM AND TR2.IDMOVORIGEM = TMOVRELAC.IDMOVDESTINO
                
        LEFT JOIN
                TMOVCOMPL TMOVCOMPL_PROJETO
                ON	TMOVCOMPL_PROJETO.CODCOLIGADA = TR2.CODCOLORIGEM
                AND TMOVCOMPL_PROJETO.IDMOV = TR2.IDMOVDESTINO
                
        LEFT JOIN TITMMOV
        ON TITMMOV.IDMOV = TMOV.IDMOV AND TITMMOV.CODCOLIGADA = TMOV.CODCOLIGADA
                
        LEFT JOIN TITMMOVCOMPL
        ON TITMMOVCOMPL.IDMOV = TR2.IDMOVDESTINO AND TITMMOVCOMPL.CODCOLIGADA = TR2.CODCOLORIGEM 
                
        WHERE 
            TMOV.CODTMV LIKE '1.1.4%'
            AND TMOV.CODCCUSTO = ?
                
        ) AS RESULT1
                
        WHERE VALIDACAO = 3 AND SAMF_VS_AP1 = 1", [$CODCCUSTO]);
        
        return $query->getResultArray();
    }


    /* TRAZENDO OS FUNCIONÁRIOS DO CENTRO DE CUSTO PARA SEREM INSERIDOS */
    public function getFuncionarios($CODCCUSTO, $mes, $ano)
    {
    $query = $this->db->query("
    SELECT

	DISTINCT 

    PFUNC.CHAPA,
	PFUNC.DATADEMISSAO,
	PFUNC.CODSITUACAO,
    PFUNC.NOME AS FUNCIONARIO,
    PFUNCAO.NOME AS FUNCAO,
	PFRATEIOFIXO.CODCCUSTO,
	SAMF_GRUPO_FUNCIONARIOS.IDGRUPO,
	SAMF_GRUPO_TRABALHO.NOME AS NOME_GRUPO,
    SAMF_GRUPO_FUNCIONARIOS.MAO_DE_OBRA
 
    FROM PFUNC

	INNER JOIN
	PFRATEIOFIXO
	ON	PFUNC.CODCOLIGADA = PFRATEIOFIXO.CODCOLIGADA
	AND PFUNC.CHAPA = PFRATEIOFIXO.CHAPA
 
    INNER JOIN 
	PPESSOA ON PPESSOA.CODIGO = PFUNC.CODPESSOA
	INNER JOIN PFUNCAO ON PFUNCAO.CODIGO = PFUNC.CODFUNCAO AND PFUNCAO.CODCOLIGADA = PFUNC.CODCOLIGADA

	LEFT JOIN SAMF_GRUPO_FUNCIONARIOS
	ON SAMF_GRUPO_FUNCIONARIOS.CODCOLIGADA = PFUNC.CODCOLIGADA AND SAMF_GRUPO_FUNCIONARIOS.CODTB5FAT = PFUNC.CHAPA 

	LEFT JOIN SAMF_GRUPO_TRABALHO
	ON SAMF_GRUPO_TRABALHO.ID = SAMF_GRUPO_FUNCIONARIOS.IDGRUPO

	LEFT JOIN PFMOVCC 
	ON PFMOVCC.CODCOLIGADA = PFUNC.CODCOLIGADA AND PFMOVCC.CHAPA = PFUNC.CHAPA

    WHERE
 
    PFRATEIOFIXO.CODCCUSTO = ?
    AND PFUNC.CODCOLIGADA = 1
	AND (PFUNC.CODSITUACAO <> 'D'
    OR PFUNC.DATADEMISSAO > DATEADD(DAY, -5, GETDATE()))
	AND PFMOVCC.MESCOMP = ?
	AND PFMOVCC.ANOCOMP = ?

    ORDER BY

        PFUNC.NOME, PFUNCAO.NOME",
        [$CODCCUSTO, $mes, $ano]);
            
            return $query->getResultArray();
    }


    public function getFuncionariosatual($CODCCUSTO)
    {
    $query = $this->db->query("
    SELECT

	DISTINCT 

    PFUNC.CHAPA,
	PFUNC.DATADEMISSAO,
	PFUNC.CODSITUACAO,
    PFUNC.NOME AS FUNCIONARIO,
    PFUNCAO.NOME AS FUNCAO,
	PFRATEIOFIXO.CODCCUSTO,
	SAMF_GRUPO_FUNCIONARIOS.IDGRUPO,
	SAMF_GRUPO_TRABALHO.NOME AS NOME_GRUPO,
    SAMF_GRUPO_FUNCIONARIOS.MAO_DE_OBRA
 
    FROM PFUNC

	INNER JOIN
	PFRATEIOFIXO
	ON	PFUNC.CODCOLIGADA = PFRATEIOFIXO.CODCOLIGADA
	AND PFUNC.CHAPA = PFRATEIOFIXO.CHAPA
 
    INNER JOIN 
	PPESSOA ON PPESSOA.CODIGO = PFUNC.CODPESSOA
	INNER JOIN PFUNCAO ON PFUNCAO.CODIGO = PFUNC.CODFUNCAO AND PFUNCAO.CODCOLIGADA = PFUNC.CODCOLIGADA

	LEFT JOIN SAMF_GRUPO_FUNCIONARIOS
	ON SAMF_GRUPO_FUNCIONARIOS.CODCOLIGADA = PFUNC.CODCOLIGADA AND SAMF_GRUPO_FUNCIONARIOS.CODTB5FAT = PFUNC.CHAPA 

	LEFT JOIN SAMF_GRUPO_TRABALHO
	ON SAMF_GRUPO_TRABALHO.ID = SAMF_GRUPO_FUNCIONARIOS.IDGRUPO

	LEFT JOIN PFMOVCC 
	ON PFMOVCC.CODCOLIGADA = PFUNC.CODCOLIGADA AND PFMOVCC.CHAPA = PFUNC.CHAPA

    WHERE
 
    PFRATEIOFIXO.CODCCUSTO = ?
    AND PFUNC.CODCOLIGADA = 1
	AND (PFUNC.CODSITUACAO <> 'D'
    OR PFUNC.DATADEMISSAO > DATEADD(DAY, -5, GETDATE()))

    ORDER BY

        PFUNC.NOME, PFUNCAO.NOME",
        [$CODCCUSTO]);
            
            return $query->getResultArray();
    }





    // TRAZENDO OS GRUPOS DE TRABALHO PARA QUE POSSAM SER UTILIZADOS COMO FILTRO
    public function getGruposFiltro($CODCCUSTO)
    {
    $query = $this->db->query("
    SELECT DISTINCT NOME 
    FROM SAMF_GRUPO_TRABALHO

    LEFT JOIN SAMF_GRUPO_FUNCIONARIOS ON SAMF_GRUPO_FUNCIONARIOS.CODCOLIGADA = SAMF_GRUPO_TRABALHO.CODCOLIGADA  
    AND SAMF_GRUPO_FUNCIONARIOS.IDGRUPO = SAMF_GRUPO_TRABALHO.ID

    WHERE SAMF_GRUPO_TRABALHO.CODCCUSTO = ?
    AND SAMF_GRUPO_FUNCIONARIOS.IDGRUPO IS NOT NULL
    AND SAMF_GRUPO_TRABALHO.ATIVO = 1",[$CODCCUSTO]);
            
            return $query->getResultArray();
    }


    /* TRAZENDO OS FUNCIONÁRIOS DO CENTRO INSERIDOS PARA DETERMINADO RDO NO QUAL PODERÁ SER ATUALIZADO A INFORMAÇÃO */
    public function getFuncionariosEdit($IDMOV)
    {
    $query = $this->db->query("
    SELECT 

	TITMMOV.IDMOV, 
	TITMMOV.CODTB5FAT AS CHAPA, 
	TTB5.DESCRICAO AS FUNCIONARIO,  
	TITMMOVCOMPL.RDO_FUNC_ENTRADA,
	TITMMOVCOMPL.RDO_FUNC_SAIDA,
	QUANTIDADE,	
	--DBO.FN_CONVMIN(ISNULL(CAST(TITMMOV.QUANTIDADE AS INT), 0)) AS TOTAL_HORAS_REALIZADAS,
    CASE 
    WHEN TITMMOV.QUANTIDADE = 0 THEN '00:00'
    ELSE DBO.FN_CONVMIN(ISNULL(CAST(TITMMOV.QUANTIDADE AS INT), 0))
	END AS TOTAL_HORAS_REALIZADAS,
	IDPRD,
	PFUNCAO.NOME AS FUNCAO

    FROM TITMMOV 

        LEFT JOIN TITMMOVCOMPL ON TITMMOV.IDMOV = TITMMOVCOMPL.IDMOV AND TITMMOV.CODCOLIGADA = TITMMOVCOMPL.CODCOLIGADA AND TITMMOV.NSEQITMMOV = TITMMOVCOMPL.NSEQITMMOV
        LEFT JOIN TTB5 ON TTB5.CODTB5FAT = TITMMOV.CODTB5FAT AND TTB5.CODCOLIGADA = TITMMOV.CODCOLIGADA 
        LEFT JOIN PFUNC	ON	PFUNC.CODCOLIGADA = TTB5.CODCOLIGADA AND PFUNC.CHAPA = TTB5.CODTB5FAT
        LEFT JOIN PFUNCAO ON PFUNCAO.CODIGO = PFUNC.CODFUNCAO AND PFUNCAO.CODCOLIGADA = PFUNC.CODCOLIGADA

    WHERE TITMMOV.IDMOV = ?",[$IDMOV]);
            
        return $query->getResultArray();
    }




    /* TRAZENDO OS USUÁRIOS E ACESSOS  */
    public function getUsuarios()
    {
    $query = $this->db->query("SELECT NOME, USUARIO, EMAIL, ATIVO, CLIENTE, SAMF_ACESSO.PLANEJADOR, SAMF_ACESSO.ENCARREGADO, SAMF_ACESSO.GERENTE
    FROM SAMF_USUARIO 
    LEFT JOIN SAMF_ACESSO ON SAMF_ACESSO.CODUSUARIO = SAMF_USUARIO.USUARIO
    ");        
        return $query->getResultArray();
    }



    // TRAZENDO MOVIMENTOS QUE SÃO DE PROJETO 1.1.42 VALIDACAO 3 E SAMF_
    public function getMovimentosProjeto()
    {
        $query = $this->db->query("SELECT * FROM (

            SELECT 
            
            TITMMOV.IDPRD,
            TITMMOV.NSEQITMMOV,
            
            TITMMOVCOMPL.BM_ALTURA,
            TITMMOVCOMPL.BM_COMPRIMENTO,
            TITMMOVCOMPL.BM_LARGURA,
            
            TMOVCOMPL_PROJETO.SAMF_VS_AP1,
            TMOVCOMPL_PROJETO.SAMF_VS_AP2,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER1,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER2,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER3,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER4,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER5,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER6,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER7,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER8,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER9,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER10,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER11,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER12,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER13,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER14,
            TMOVCOMPL_PROJETO.SAMF_VS_PP1,
            TMOVCOMPL_PROJETO.SAMF_VS_PP2,
            TMOVCOMPL_PROJETO.SAMF_VS_PP3,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP4, 108), 5) AS SAMF_VS_PP4,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP5, 108), 5) AS SAMF_VS_PP5,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP6, 108), 5) AS SAMF_VS_PP6,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP7, 108), 5) AS SAMF_VS_PP7,
            TMOVCOMPL_PROJETO.SAMF_VS_COMPLX,
            
            TMOVCOMPL.IDMOV AS IDMOV_SC,
            TMOVCOMPL.SAMF_CLI_OS AS OS_CLIENTE,
            TMOVCOMPL.SAMF_CLI_LOC,
            TMOVCOMPL.SAMF_OBSERVACAO,
            TMOVCOMPL.SAMF_CLI_OS,
            TMOVCOMPL.SAMF_CLI_TEXTO_BREVE,
            TMOVCOMPL.SAMF_CLI_DESC_OP,
            TMOVCOMPL.SAMF_CLI_DENOMINACAO,
            TMOVCOMPL.SAMF_CLI_CENTRAB_RES,
            TMOVCOMPL.SAMF_CLI_CENTRAB_OP,
            TMOVCOMPL.SAMF_CLI_OPERACAO,
            TMOVCOMPL.SAMF_CLI_CODCCUSTO,
            TMOVCOMPL.SAMF_CLI_QRCODE,
            
            TMOVRELAC.IDMOVORIGEM AS IDMOVORIGEM,
            TMOVRELAC.IDMOVDESTINO AS IDMOVDESTINO,
            TR2.IDMOVDESTINO AS IDMOVPROJETO,
            CASE 
                WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 3
                WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 2
                ELSE 1
                END AS VALIDACAO
            FROM 
                TMOVCOMPL
            LEFT JOIN 
                TMOV ON TMOV.IDMOV = TMOVCOMPL.IDMOV AND TMOV.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA
            
            LEFT JOIN
                TMOVRELAC ON TMOVRELAC.CODCOLORIGEM = TMOV.CODCOLIGADA AND TMOVRELAC.IDMOVORIGEM = TMOV.IDMOV
            
            LEFT JOIN
                TMOVRELAC TR2 ON TR2.CODCOLORIGEM = TMOVRELAC.CODCOLORIGEM AND TR2.IDMOVORIGEM = TMOVRELAC.IDMOVDESTINO
            
            LEFT JOIN
                    TMOVCOMPL TMOVCOMPL_PROJETO
                    ON	TMOVCOMPL_PROJETO.CODCOLIGADA = TR2.CODCOLORIGEM
                    AND TMOVCOMPL_PROJETO.IDMOV = TR2.IDMOVDESTINO
            
            LEFT JOIN TITMMOV
            ON TITMMOV.IDMOV = TMOV.IDMOV AND TITMMOV.CODCOLIGADA = TMOV.CODCOLIGADA
            
            LEFT JOIN TITMMOVCOMPL
            ON TITMMOVCOMPL.IDMOV = TR2.IDMOVDESTINO AND TITMMOVCOMPL.CODCOLIGADA = TR2.CODCOLORIGEM 
            
            WHERE 
                TMOV.CODTMV LIKE '1.1.4%'
            
            ) AS RESULT1
            
            WHERE VALIDACAO = 3 AND SAMF_VS_AP1 = 1");
        
        return $query->getResultArray();
    }




    // TRAZENDO OS MOVIMENTOS DE PLANEJAMENTO DE ANDAIME COM STRATUS A QUE É IGUAL PENDENTE 1.1.43

    public function getMovimentosPLAndaimesSABKP($CODCCUSTO)
    {
        $query = $this->db->query("
   
SELECT * FROM(
SELECT 
		
		RESULT1.IDMOV AS IDMOVANDAIME,
		RESULT1.STATUS,
		TMOVRELAC.IDMOVORIGEM AS IDMOVPROJETO,
		TR2.IDMOVORIGEM AS IDMOVVISITA,
		TR3.IDMOVORIGEM AS IDMOVSOLICITACAO,
        TMOVCOMPL_SOLICITACAO.SAMF_CLI_QRCODE,
		CAST(SUM(PESOBRUTO) AS DECIMAL(18,2)) AS PESO_BRUTO_TOTAL,
        CAST(SUM(PESOLIQUIDO) AS DECIMAL(18,2)) AS PESO_LIQUIDO_TOTAL,
        CAST(SUM(METRAGEM_LINEAR) AS DECIMAL(18,2)) AS METRAGEM_LINEAR_TOTAL,
		--SIS_ANDAIMES_OLD.LINEAR AS LINEAR_SIS_ANTIGO,
		--CAST(SUM(METRAGEM_LINEAR) - CONVERT(DECIMAL(10, 2), REPLACE(SIS_ANDAIMES_OLD.LINEAR, ',', '.')) AS DECIMAL(18,2)) AS DIFERENCA_LINEAR,
        SUM(QUANTIDADE) AS QUANTIDADE_DE_ITENS,		
        AREANV0.NOME_AREA AS SAMF_CLI_AREANV0_NOME,
		AREANV1.NOME_AREA AS SAMF_CLI_AREANV1_NOME, 
		SAMF_ACESSO.CODUSUARIO AS ENCARREGADO
		
        FROM

        (

        SELECT  

			TITMMOV.IDMOV,
			TMOV.CODCCUSTO,
			TMOV.STATUS,
            TPRD.PESOLIQUIDO,
            TPRD.PESOBRUTO,
            TPRD.COMPRIMENTO,
            TPRD.COMPRIMENTO * TITMMOV.QUANTIDADE AS METRAGEM_LINEAR,
            CASE 
                WHEN TITMMOV.IDPRD IS NOT NULL THEN 'S'
                ELSE 'N'
            END AS EXISTE_EM_TITMMOV,
            CAST(TITMMOV.QUANTIDADE AS INT) AS QUANTIDADE
        FROM TITMMOV
		LEFT JOIN TPRD ON TPRD.IDPRD = TITMMOV.IDPRD AND TPRD.CODCOLIGADA = TITMMOV.CODCOLIGADA 
        --LEFT JOIN TPRODUTO ON TPRD.IDPRD = TPRODUTO.IDPRD AND TITMMOV.IDMOV = TPRD.IDMOV  ---- NÃO REMOVA COMENTÁRIO
		LEFT JOIN TMOV ON TMOV.IDMOV = TITMMOV.IDMOV AND TMOV.CODCOLIGADA = TITMMOV.CODCOLIGADA 
        WHERE 
            (TPRD.CODIGOPRD LIKE '02.11%' OR TPRD.IDPRD = '4361')
            AND TPRD.INATIVO = 0
            AND TPRD.CODIGOPRD LIKE '__.__._____'
			AND TITMMOV.IDPRD IS NOT NULL 
			AND TMOV.CODCCUSTO = ?
			AND TMOV.CODTMV = '1.1.43'
			AND TMOV.STATUS <> 'Z'
			--AND TMOV.IDMOV = 2024128463

        ) AS RESULT1

		--LEFT JOIN SIS_ANDAIMES_OLD_REF_ITENS ON SIS_ANDAIMES_OLD_REF_ITENS.CODIGO_SIS_OLD = RESULT1.ColumnName
		LEFT JOIN TMOVRELAC ON TMOVRELAC.IDMOVDESTINO = RESULT1.IDMOV 
		LEFT JOIN TMOVRELAC AS TR2 ON TR2.IDMOVDESTINO = TMOVRELAC.IDMOVORIGEM 
		LEFT JOIN TMOVRELAC AS TR3 ON TR3.IDMOVDESTINO = TR2.IDMOVORIGEM	
		LEFT JOIN TMOVCOMPL AS TMOVCOMPL_SOLICITACAO ON TMOVCOMPL_SOLICITACAO.IDMOV = TR3.IDMOVORIGEM AND TMOVCOMPL_SOLICITACAO.CODCOLIGADA = TR3.CODCOLORIGEM 	   
		--LEFT JOIN SIS_ANDAIMES_OLD ON SIS_ANDAIMES_OLD.REF = TMOVCOMPL_SOLICITACAO.SAMF_CLI_QRCODE
		
		LEFT JOIN SAMF_ACESSO ON SAMF_ACESSO.ID = TMOVCOMPL_SOLICITACAO.SAMF_ENCARREGADO
		LEFT JOIN SAMF_CLI_AREAS AS AREANV0 ON CAST(AREANV0.ID AS VARCHAR) = TMOVCOMPL_SOLICITACAO.SAMF_CLI_AREANV0	
        LEFT JOIN SAMF_CLI_AREAS AS AREANV1	ON CAST(AREANV1.ID AS VARCHAR) = TMOVCOMPL_SOLICITACAO.SAMF_CLI_AREANV1

		GROUP BY RESULT1.IDMOV, TMOVRELAC.IDMOVORIGEM, TR2.IDMOVORIGEM, TR3.IDMOVORIGEM,
		TMOVCOMPL_SOLICITACAO.SAMF_CLI_QRCODE, SAMF_ACESSO.CODUSUARIO, AREANV0.NOME_AREA, AREANV1.NOME_AREA,
		RESULT1.STATUS
		
		) AS RESULT2

		WHERE IDMOVSOLICITACAO NOT IN (
		2024113709,
		2024119579,
		2024119868,
		2024120349,
		2024121717
		)


		ORDER BY IDMOVSOLICITACAO
            ",[$CODCCUSTO]);
        
        return $query->getResultArray();
    }



    // NOVA VISÃO DE ANDAIME SEM RELAÇÃO COM VISITA 
    public function getMovimentosPLAndaimesSA($CODCCUSTO, $AREAREF, $STAUTSREF)
    {
        $query = $this->db->query("     SELECT

        SUM(METRAGEM_LINEAR) AS METRAGEM_LINEAR, 
        IDMOV,
        NUMEROMOV,
		
        CONVERT(VARCHAR(10), MONTADO_EM, 120) AS MONTADO_EM, 
		CONVERT(VARCHAR(10), DESMONTADO_EM, 120) AS DESMONTADO_EM, 
				
        STATUS, 
        SAMF_CLI_QRCODE,
        ENCARREGADO,
        SAMF_CLI_AREANV0_NOME,
        SAMF_CLI_AREANV1_NOME,
        SAMF_CLI_AREANV2,
        SAMF_CLI_TIPOSC,
        RDO_RESPONSAVEL_CLI2,
        DIAS_MONTADOS,
        SAMF_CLI_OS,
        SAMF_MTG_BOLETAEMIT,
        SAMF_MTG_MTLINEAR,
        SAMF_CLI_GERENCIA,
        SAMF_RDO_TPCONT

        FROM

        (


        SELECT 
            TMOV.IDMOV,
            TMOV.NUMEROMOV, 
            TMOV.DATAEXTRA1 AS MONTADO_EM, 
            TMOV.DATAEXTRA2 AS DESMONTADO_EM,
            TMOV.CODCCUSTO, 
            TMOV.STATUS,
            SAMF_CLI_QRCODE,
            SAMF_ACESSO.CODUSUARIO AS ENCARREGADO,
            AREANV0.NOME_AREA AS SAMF_CLI_AREANV0_NOME,
            AREANV1.NOME_AREA AS SAMF_CLI_AREANV1_NOME, 
            SAMF_CLI_AREANV2,
            SAMF_CLI_TIPOSC,
            RDO_RESPONSAVEL_CLI2,
            SAMF_CLI_OS,
			SAMF_MTG_BOLETAEMIT,
            SAMF_MTG_MTLINEAR,
            SAMF_CLI_GERENCIA,
            SAMF_RDO_TPCONT,
            TPRD.COMPRIMENTO * TITMMOV.QUANTIDADE AS METRAGEM_LINEAR,
            CASE 
            WHEN TMOV.DATAEXTRA2 IS NULL AND TMOV.STATUS <> 'C'
            THEN DATEDIFF(DAY, TMOV.DATAEXTRA1, GETDATE())
            ELSE '0' 
            END AS DIAS_MONTADOS
            --CAST(SUM(METRAGEM_LINEAR) AS DECIMAL(18,2)) AS METRAGEM_LINEAR_TOTAL

            FROM TMOV 

                LEFT JOIN TMOVCOMPL ON TMOVCOMPL.IDMOV = TMOV.IDMOV AND TMOVCOMPL.CODCOLIGADA = TMOV.CODCOLIGADA
                LEFT JOIN SAMF_CLI_AREAS AS AREANV0 ON CAST(AREANV0.ID AS VARCHAR) = TMOVCOMPL.SAMF_CLI_AREANV0	
                LEFT JOIN SAMF_CLI_AREAS AS AREANV1	ON CAST(AREANV1.ID AS VARCHAR) = TMOVCOMPL.SAMF_CLI_AREANV1
                LEFT JOIN SAMF_ACESSO ON SAMF_ACESSO.ID = TMOVCOMPL.SAMF_ENCARREGADO
                LEFT JOIN TITMMOV ON TMOV.IDMOV = TITMMOV.IDMOV AND TMOV.CODCOLIGADA = TITMMOV.CODCOLIGADA 
                LEFT JOIN TPRD ON TPRD.IDPRD = TITMMOV.IDPRD AND TPRD.CODCOLIGADA = TITMMOV.CODCOLIGADA 
            
            WHERE CODTMV = '1.1.43' 
            AND TMOV.CODCCUSTO = ?
            -- AND (YEAR(TMOV.DATAEXTRA2) > 2023 OR TMOV.DATAEXTRA2 IS NULL)
            AND  AREANV1.NOME_AREA = ?
            AND TMOV.STATUS = ?
					   			 		  		  
            ) AS RESULT1 
			
            GROUP BY 
            IDMOV,
            NUMEROMOV,
            MONTADO_EM,
            DESMONTADO_EM,
            STATUS, 
            SAMF_CLI_QRCODE,
            ENCARREGADO,
            SAMF_CLI_AREANV0_NOME,
            SAMF_CLI_AREANV1_NOME,
            SAMF_CLI_AREANV2,
            SAMF_CLI_TIPOSC,
            RDO_RESPONSAVEL_CLI2,
            DIAS_MONTADOS,
            SAMF_CLI_OS,
			SAMF_MTG_BOLETAEMIT,
            SAMF_MTG_MTLINEAR,
            SAMF_CLI_GERENCIA,
            SAMF_RDO_TPCONT
            
			ORDER BY IDMOV DESC
            ", [$CODCCUSTO, $AREAREF, $STAUTSREF]);
            
            return $query->getResultArray();
        }






    
    public function getMovimentosPLAndaimesSAUnico($CODCCUSTO, $IDMOV)
    {
        $query = $this->db->query("
   
SELECT * FROM(
SELECT 
		
		RESULT1.IDMOV AS IDMOVANDAIME,
		RESULT1.STATUS,
		TMOVRELAC.IDMOVORIGEM AS IDMOVPROJETO,
		TR2.IDMOVORIGEM AS IDMOVVISITA,
		TR3.IDMOVORIGEM AS IDMOVSOLICITACAO,
        TMOVCOMPL_SOLICITACAO.SAMF_CLI_QRCODE,
		CAST(SUM(PESOBRUTO) AS DECIMAL(18,2)) AS PESO_BRUTO_TOTAL,
        CAST(SUM(PESOLIQUIDO) AS DECIMAL(18,2)) AS PESO_LIQUIDO_TOTAL,
        CAST(SUM(METRAGEM_LINEAR) AS DECIMAL(18,2)) AS METRAGEM_LINEAR_TOTAL,
		SIS_ANDAIMES_OLD.LINEAR AS LINEAR_SIS_ANTIGO,
		CAST(SUM(METRAGEM_LINEAR) - CONVERT(DECIMAL(10, 2), REPLACE(SIS_ANDAIMES_OLD.LINEAR, ',', '.')) AS DECIMAL(18,2)) AS DIFERENCA_LINEAR,
        SUM(QUANTIDADE) AS QUANTIDADE_DE_ITENS,		
        AREANV0.NOME_AREA AS SAMF_CLI_AREANV0_NOME,
		AREANV1.NOME_AREA AS SAMF_CLI_AREANV1_NOME, 
		SAMF_ACESSO.CODUSUARIO AS ENCARREGADO
		
        FROM

        (

        SELECT  

			TITMMOV.IDMOV,
			TMOV.CODCCUSTO,
			TMOV.STATUS,
            TPRD.PESOLIQUIDO,
            TPRD.PESOBRUTO,
            TPRD.COMPRIMENTO,
            TPRD.COMPRIMENTO * TITMMOV.QUANTIDADE AS METRAGEM_LINEAR,
            CASE 
                WHEN TITMMOV.IDPRD IS NOT NULL THEN 'S'
                ELSE 'N'
            END AS EXISTE_EM_TITMMOV,
            CAST(TITMMOV.QUANTIDADE AS INT) AS QUANTIDADE
        FROM TITMMOV
		LEFT JOIN TPRD ON TPRD.IDPRD = TITMMOV.IDPRD AND TPRD.CODCOLIGADA = TITMMOV.CODCOLIGADA 
        --LEFT JOIN TPRODUTO ON TPRD.IDPRD = TPRODUTO.IDPRD AND TITMMOV.IDMOV = TPRD.IDMOV  ---- NÃO REMOVA COMENTÁRIO
		LEFT JOIN TMOV ON TMOV.IDMOV = TITMMOV.IDMOV AND TMOV.CODCOLIGADA = TITMMOV.CODCOLIGADA 
        WHERE 
            (TPRD.CODIGOPRD LIKE '02.11%' OR TPRD.IDPRD = '4361')
            AND TPRD.INATIVO = 0
            AND TPRD.CODIGOPRD LIKE '__.__._____'
			AND TITMMOV.IDPRD IS NOT NULL 
			AND TMOV.CODCCUSTO = ?
			AND TMOV.CODTMV = '1.1.43'
			AND TMOV.STATUS <> 'Z'
			--AND TMOV.IDMOV = 2024128463

        ) AS RESULT1

		--LEFT JOIN SIS_ANDAIMES_OLD_REF_ITENS ON SIS_ANDAIMES_OLD_REF_ITENS.CODIGO_SIS_OLD = RESULT1.ColumnName
		LEFT JOIN TMOVRELAC ON TMOVRELAC.IDMOVDESTINO = RESULT1.IDMOV 
		LEFT JOIN TMOVRELAC AS TR2 ON TR2.IDMOVDESTINO = TMOVRELAC.IDMOVORIGEM 
		LEFT JOIN TMOVRELAC AS TR3 ON TR3.IDMOVDESTINO = TR2.IDMOVORIGEM	
		LEFT JOIN TMOVCOMPL AS TMOVCOMPL_SOLICITACAO ON TMOVCOMPL_SOLICITACAO.IDMOV = TR3.IDMOVORIGEM AND TMOVCOMPL_SOLICITACAO.CODCOLIGADA = TR3.CODCOLORIGEM 	   
		LEFT JOIN SIS_ANDAIMES_OLD ON SIS_ANDAIMES_OLD.REF = TMOVCOMPL_SOLICITACAO.SAMF_CLI_QRCODE
		
		LEFT JOIN SAMF_ACESSO ON SAMF_ACESSO.ID = TMOVCOMPL_SOLICITACAO.SAMF_ENCARREGADO
		LEFT JOIN SAMF_CLI_AREAS AS AREANV0 ON CAST(AREANV0.ID AS VARCHAR) = TMOVCOMPL_SOLICITACAO.SAMF_CLI_AREANV0	
        LEFT JOIN SAMF_CLI_AREAS AS AREANV1	ON CAST(AREANV1.ID AS VARCHAR) = TMOVCOMPL_SOLICITACAO.SAMF_CLI_AREANV1

		GROUP BY RESULT1.IDMOV, TMOVRELAC.IDMOVORIGEM, TR2.IDMOVORIGEM, TR3.IDMOVORIGEM,
		TMOVCOMPL_SOLICITACAO.SAMF_CLI_QRCODE, SIS_ANDAIMES_OLD.LINEAR, SAMF_ACESSO.CODUSUARIO, AREANV0.NOME_AREA, AREANV1.NOME_AREA,
		RESULT1.STATUS
		
		) AS RESULT2

		WHERE IDMOVSOLICITACAO NOT IN (
		2024113709,
		2024119579,
		2024119868,
		2024120349,
		2024121717
		)
        AND IDMOVANDAIME = ?


		ORDER BY IDMOVSOLICITACAO
            ",[$CODCCUSTO, $IDMOV]);
        
        return $query->getResultArray();
    }



    public function getMovimentosPLAndaimesSA_BKP($CODCCUSTO)
    {
        $query = $this->db->query("
            SELECT * FROM (

            SELECT 
            
            TMOVCOMPL_PLANEJAMENTO.SAMF_MTG_OPERACAO,
			TMOVCOMPL_PLANEJAMENTO.SAMF_MTG_BOLETAEMIT,            
			TMOVCOMPL_PLANEJAMENTO.SAMF_MTG_MTLINEAR,
            TMOVCOMPL.IDMOV AS IDMOV_SC,
			--TMOVCOMPL.SAMF_CLI_LOCANDAIME2,
            TMOVCOMPL.SAMF_CLI_OS AS OS_CLIENTE,
            TMOVCOMPL.SAMF_CLI_LOC,
            TMOVCOMPL.SAMF_OBSERVACAO,
            TMOVCOMPL.SAMF_CLI_OS,
            TMOVCOMPL.SAMF_CLI_TEXTO_BREVE,
            TMOVCOMPL.SAMF_CLI_DESC_OP,
            --TMOVCOMPL.SAMF_CLI_DENOMINACAO,
            --TMOVCOMPL.SAMF_CLI_CENTRAB_RES,
            --TMOVCOMPL.SAMF_CLI_CENTRAB_OP,
            --TMOVCOMPL.SAMF_CLI_OPERACAO,
            --TMOVCOMPL.SAMF_CLI_CODCCUSTO,
            TMOVCOMPL.SAMF_CLI_QRCODE,
            TMOVCOMPL.SAMF_CLI_TAG,

            AREANV0.NOME_AREA AS SAMF_CLI_AREANV0,
            
			SAMF_ACESSO.CODUSUARIO AS ENCARREGADO,
            
            TMOVRELAC.IDMOVORIGEM AS IDMOVORIGEM,
            TMOVRELAC.IDMOVDESTINO AS IDMOVDESTINO,
            TR2.IDMOVDESTINO AS IDMOVPROJETO,
			TR3.IDMOVDESTINO AS IDMOVPLANEJAMENTO,

			TMOV_PLANEJAMENTO.STATUS AS STATUS_PLANEJAMENTO,            
            CONVERT(VARCHAR, TMOV_PLANEJAMENTO.DATAEXTRA1, 103) AS DATA_MONTAGEM,
            CONVERT(VARCHAR, TMOV_PLANEJAMENTO.DATAEXTRA2, 103) AS DATA_DESMONTAGEM,


            CASE 
                WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 3
                WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 2
                ELSE 1
                END AS VALIDACAO
            FROM 
                TMOVCOMPL

            LEFT JOIN TMOV ON TMOV.IDMOV = TMOVCOMPL.IDMOV AND TMOV.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA
            
            LEFT JOIN TMOVRELAC ON TMOVRELAC.CODCOLORIGEM = TMOV.CODCOLIGADA AND TMOVRELAC.IDMOVORIGEM = TMOV.IDMOV
            
            LEFT JOIN TMOVRELAC TR2 ON TR2.CODCOLORIGEM = TMOVRELAC.CODCOLORIGEM AND TR2.IDMOVORIGEM = TMOVRELAC.IDMOVDESTINO

            LEFT JOIN TMOVRELAC TR3 ON TR3.CODCOLORIGEM = TR2.CODCOLORIGEM AND TR3.IDMOVORIGEM = TR2.IDMOVDESTINO

			LEFT JOIN TMOV TMOV_PLANEJAMENTO ON TMOV_PLANEJAMENTO.CODCOLIGADA = TR3.CODCOLORIGEM AND TMOV_PLANEJAMENTO.IDMOV = TR3.IDMOVDESTINO
            
            LEFT JOIN TMOVCOMPL TMOVCOMPL_PROJETO ON TMOVCOMPL_PROJETO.CODCOLIGADA = TR2.CODCOLORIGEM AND TMOVCOMPL_PROJETO.IDMOV = TR2.IDMOVDESTINO
            
            LEFT JOIN TITMMOV ON TITMMOV.IDMOV = TMOV.IDMOV AND TITMMOV.CODCOLIGADA = TMOV.CODCOLIGADA
            
            LEFT JOIN TITMMOVCOMPL ON TITMMOVCOMPL.IDMOV = TR2.IDMOVDESTINO AND TITMMOVCOMPL.CODCOLIGADA = TR2.CODCOLORIGEM        
			
			--ABAIXO DADOS DA TITMMOV E TITMMOVCOMPL RELACIONADAS AO PLANEJAMENTO 
			LEFT JOIN TITMMOV TITMMOV_PLANEJAMENTO ON TITMMOV.IDMOV = TMOV_PLANEJAMENTO.IDMOV AND TITMMOV.CODCOLIGADA = TMOV_PLANEJAMENTO.CODCOLIGADA
            
            LEFT JOIN TITMMOVCOMPL TITMMOVCOMPL_PLANEJAMENTO ON TITMMOVCOMPL_PLANEJAMENTO.IDMOV = TR3.IDMOVDESTINO AND TITMMOVCOMPL_PLANEJAMENTO.CODCOLIGADA = TR3.CODCOLDESTINO     

			LEFT JOIN SAMF_ACESSO ON SAMF_ACESSO.ID = TMOVCOMPL.SAMF_ENCARREGADO

            LEFT JOIN SAMF_CLI_AREAS AS AREANV0 ON CAST(AREANV0.ID AS VARCHAR) = TMOVCOMPL.SAMF_CLI_AREANV0

            
LEFT JOIN TMOVCOMPL AS TMOVCOMPL_PLANEJAMENTO ON TMOVCOMPL_PLANEJAMENTO.CODCOLIGADA = TMOV_PLANEJAMENTO.CODCOLIGADA AND TMOVCOMPL_PLANEJAMENTO.IDMOV = TMOV_PLANEJAMENTO.IDMOV

            WHERE 
                TMOV.CODTMV LIKE '1.1.4%'
                AND TMOV_PLANEJAMENTO.STATUS NOT IN ('C','Q','Z')
                AND TMOV.CODCCUSTO = ?
            ) AS RESULT1
            
            WHERE VALIDACAO = 3
            AND IDMOVPLANEJAMENTO IS NOT NULL
            ",[$CODCCUSTO]);
        
        return $query->getResultArray();
    }



    // TRAZER O CENTRO DE CUSTO NOVO PARA ALTERAR O CONTEXTO
    public function getNomeGCCUSTO($CODCCUSTO){
        $query = $this->db->query("SELECT NOME FROM GCCUSTO WHERE CODCOLIGADA = 1 AND CODCCUSTO = ?", [$CODCCUSTO]);
        $row = $query->getRow();
        if ($row) {
            return $row->NOME;
        } else {
            return null; 
        }
    }
    




    // TRAZENDO OS MOVIMENTOS DE PLANEJAMENTO DE ANDAIME COM STRATUS G QUE É IGUAL EM MONTAGEM 1.1.43

    public function getMovimentosPLAndaimesSG()
    {
        $query = $this->db->query("
        SELECT * FROM (

        SELECT 
        
        TITMMOV.IDPRD,
        TITMMOV.NSEQITMMOV,
        
        TITMMOVCOMPL.BM_ALTURA,
        TITMMOVCOMPL.BM_COMPRIMENTO,
        TITMMOVCOMPL.BM_LARGURA,
        
        TMOVCOMPL_PROJETO.SAMF_VS_AP1,
        TMOVCOMPL_PROJETO.SAMF_VS_AP2,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER1,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER2,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER3,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER4,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER5,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER6,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER7,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER8,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER9,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER10,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER11,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER12,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER13,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER14,
        TMOVCOMPL_PROJETO.SAMF_VS_PP1,
        TMOVCOMPL_PROJETO.SAMF_VS_PP2,
        TMOVCOMPL_PROJETO.SAMF_VS_PP3,
        LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP4, 108), 5) AS SAMF_VS_PP4,
        LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP5, 108), 5) AS SAMF_VS_PP5,
        LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP6, 108), 5) AS SAMF_VS_PP6,
        LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP7, 108), 5) AS SAMF_VS_PP7,
        TMOVCOMPL_PROJETO.SAMF_VS_COMPLX,
        
        TMOVCOMPL.IDMOV AS IDMOV_SC,
        TMOVCOMPL.SAMF_CLI_OS AS OS_CLIENTE,
        TMOVCOMPL.SAMF_CLI_LOC,
        TMOVCOMPL.SAMF_OBSERVACAO,
        TMOVCOMPL.SAMF_CLI_OS,
        TMOVCOMPL.SAMF_CLI_TEXTO_BREVE,
        TMOVCOMPL.SAMF_CLI_DESC_OP,
        TMOVCOMPL.SAMF_CLI_DENOMINACAO,
        TMOVCOMPL.SAMF_CLI_CENTRAB_RES,
        TMOVCOMPL.SAMF_CLI_CENTRAB_OP,
        TMOVCOMPL.SAMF_CLI_OPERACAO,
        TMOVCOMPL.SAMF_CLI_CODCCUSTO,
        TMOVCOMPL.SAMF_CLI_QRCODE,
        
        TMOVRELAC.IDMOVORIGEM AS IDMOVORIGEM,
        TMOVRELAC.IDMOVDESTINO AS IDMOVDESTINO,
        TR2.IDMOVDESTINO AS IDMOVPROJETO,
        CASE 
            WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 3
            WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 2
            ELSE 1
            END AS VALIDACAO
        FROM 
            TMOVCOMPL
        LEFT JOIN 
            TMOV ON TMOV.IDMOV = TMOVCOMPL.IDMOV AND TMOV.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA
        
        LEFT JOIN
            TMOVRELAC ON TMOVRELAC.CODCOLORIGEM = TMOV.CODCOLIGADA AND TMOVRELAC.IDMOVORIGEM = TMOV.IDMOV
        
        LEFT JOIN
            TMOVRELAC TR2 ON TR2.CODCOLORIGEM = TMOVRELAC.CODCOLORIGEM AND TR2.IDMOVORIGEM = TMOVRELAC.IDMOVDESTINO
        
        LEFT JOIN
                TMOVCOMPL TMOVCOMPL_PROJETO
                ON	TMOVCOMPL_PROJETO.CODCOLIGADA = TR2.CODCOLORIGEM
                AND TMOVCOMPL_PROJETO.IDMOV = TR2.IDMOVDESTINO
        
        LEFT JOIN TITMMOV
        ON TITMMOV.IDMOV = TMOV.IDMOV AND TITMMOV.CODCOLIGADA = TMOV.CODCOLIGADA
        
        LEFT JOIN TITMMOVCOMPL
        ON TITMMOVCOMPL.IDMOV = TR2.IDMOVDESTINO AND TITMMOVCOMPL.CODCOLIGADA = TR2.CODCOLORIGEM 
        
        WHERE 
            TMOV.CODTMV LIKE '1.1.4%'
            
        AND TMOV.STATUS = 'G'
        
        ) AS RESULT1
        
        WHERE VALIDACAO = 3");
        
        return $query->getResultArray();
    }


    public function getMovimentosPLAndaimesSF()
    {
        $query = $this->db->query("
    SELECT * FROM (

        SELECT 
        
        TITMMOV.IDPRD,
        TITMMOV.NSEQITMMOV,
        
        TITMMOVCOMPL.BM_ALTURA,
        TITMMOVCOMPL.BM_COMPRIMENTO,
        TITMMOVCOMPL.BM_LARGURA,
        
        TMOVCOMPL_PROJETO.SAMF_VS_AP1,
        TMOVCOMPL_PROJETO.SAMF_VS_AP2,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER1,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER2,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER3,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER4,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER5,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER6,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER7,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER8,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER9,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER10,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER11,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER12,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER13,
        TMOVCOMPL_PROJETO.SAMF_VS_INTERFER14,
        TMOVCOMPL_PROJETO.SAMF_VS_PP1,
        TMOVCOMPL_PROJETO.SAMF_VS_PP2,
        TMOVCOMPL_PROJETO.SAMF_VS_PP3,
        LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP4, 108), 5) AS SAMF_VS_PP4,
        LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP5, 108), 5) AS SAMF_VS_PP5,
        LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP6, 108), 5) AS SAMF_VS_PP6,
        LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP7, 108), 5) AS SAMF_VS_PP7,
        TMOVCOMPL_PROJETO.SAMF_VS_COMPLX,
        
        TMOVCOMPL.IDMOV AS IDMOV_SC,
        TMOVCOMPL.SAMF_CLI_OS AS OS_CLIENTE,
        TMOVCOMPL.SAMF_CLI_LOC,
        TMOVCOMPL.SAMF_OBSERVACAO,
        TMOVCOMPL.SAMF_CLI_OS,
        TMOVCOMPL.SAMF_CLI_TEXTO_BREVE,
        TMOVCOMPL.SAMF_CLI_DESC_OP,
        TMOVCOMPL.SAMF_CLI_DENOMINACAO,
        TMOVCOMPL.SAMF_CLI_CENTRAB_RES,
        TMOVCOMPL.SAMF_CLI_CENTRAB_OP,
        TMOVCOMPL.SAMF_CLI_OPERACAO,
        TMOVCOMPL.SAMF_CLI_CODCCUSTO,
        TMOVCOMPL.SAMF_CLI_QRCODE,
        
        TMOVRELAC.IDMOVORIGEM AS IDMOVORIGEM,
        TMOVRELAC.IDMOVDESTINO AS IDMOVDESTINO,
        TR2.IDMOVDESTINO AS IDMOVPROJETO,
        CASE 
            WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 3
            WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 2
            ELSE 1
            END AS VALIDACAO
        FROM 
            TMOVCOMPL
        LEFT JOIN 
            TMOV ON TMOV.IDMOV = TMOVCOMPL.IDMOV AND TMOV.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA
        
        LEFT JOIN
            TMOVRELAC ON TMOVRELAC.CODCOLORIGEM = TMOV.CODCOLIGADA AND TMOVRELAC.IDMOVORIGEM = TMOV.IDMOV
        
        LEFT JOIN
            TMOVRELAC TR2 ON TR2.CODCOLORIGEM = TMOVRELAC.CODCOLORIGEM AND TR2.IDMOVORIGEM = TMOVRELAC.IDMOVDESTINO
        
        LEFT JOIN
                TMOVCOMPL TMOVCOMPL_PROJETO
                ON	TMOVCOMPL_PROJETO.CODCOLIGADA = TR2.CODCOLORIGEM
                AND TMOVCOMPL_PROJETO.IDMOV = TR2.IDMOVDESTINO
        
        LEFT JOIN TITMMOV
        ON TITMMOV.IDMOV = TMOV.IDMOV AND TITMMOV.CODCOLIGADA = TMOV.CODCOLIGADA
        
        LEFT JOIN TITMMOVCOMPL
        ON TITMMOVCOMPL.IDMOV = TR2.IDMOVDESTINO AND TITMMOVCOMPL.CODCOLIGADA = TR2.CODCOLORIGEM 
        
        WHERE 
            TMOV.CODTMV LIKE '1.1.4%'
            
        AND TMOV.STATUS = 'F'
        
        ) AS RESULT1
        
        WHERE VALIDACAO = 3");
        
        return $query->getResultArray();
    }


    public function getMovimentosPLAndaimesSC()
    {
        $query = $this->db->query("
        SELECT * FROM (

            SELECT 
            
            TITMMOV.IDPRD,
            TITMMOV.NSEQITMMOV,
            
            TITMMOVCOMPL.BM_ALTURA,
            TITMMOVCOMPL.BM_COMPRIMENTO,
            TITMMOVCOMPL.BM_LARGURA,
            
            TMOVCOMPL_PROJETO.SAMF_VS_AP1,
            TMOVCOMPL_PROJETO.SAMF_VS_AP2,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER1,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER2,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER3,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER4,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER5,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER6,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER7,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER8,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER9,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER10,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER11,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER12,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER13,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER14,
            TMOVCOMPL_PROJETO.SAMF_VS_PP1,
            TMOVCOMPL_PROJETO.SAMF_VS_PP2,
            TMOVCOMPL_PROJETO.SAMF_VS_PP3,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP4, 108), 5) AS SAMF_VS_PP4,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP5, 108), 5) AS SAMF_VS_PP5,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP6, 108), 5) AS SAMF_VS_PP6,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP7, 108), 5) AS SAMF_VS_PP7,
            TMOVCOMPL_PROJETO.SAMF_VS_COMPLX,
            
            TMOVCOMPL.IDMOV AS IDMOV_SC,
            TMOVCOMPL.SAMF_CLI_OS AS OS_CLIENTE,
            TMOVCOMPL.SAMF_CLI_LOC,
            TMOVCOMPL.SAMF_OBSERVACAO,
            TMOVCOMPL.SAMF_CLI_OS,
            TMOVCOMPL.SAMF_CLI_TEXTO_BREVE,
            TMOVCOMPL.SAMF_CLI_DESC_OP,
            TMOVCOMPL.SAMF_CLI_DENOMINACAO,
            TMOVCOMPL.SAMF_CLI_CENTRAB_RES,
            TMOVCOMPL.SAMF_CLI_CENTRAB_OP,
            TMOVCOMPL.SAMF_CLI_OPERACAO,
            TMOVCOMPL.SAMF_CLI_CODCCUSTO,
            TMOVCOMPL.SAMF_CLI_QRCODE,
            
            TMOVRELAC.IDMOVORIGEM AS IDMOVORIGEM,
            TMOVRELAC.IDMOVDESTINO AS IDMOVDESTINO,
            TR2.IDMOVDESTINO AS IDMOVPROJETO,
			TR3.IDMOVDESTINO AS IDMOVPLANEJAMENTO,

			TMOV_PLANEJAMENTO.STATUS AS STATUS_PLANEJAMENTO,

            CASE 
                WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 3
                WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 2
                ELSE 1
                END AS VALIDACAO
            FROM 
                TMOVCOMPL

            LEFT JOIN TMOV ON TMOV.IDMOV = TMOVCOMPL.IDMOV AND TMOV.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA
            
            LEFT JOIN TMOVRELAC ON TMOVRELAC.CODCOLORIGEM = TMOV.CODCOLIGADA AND TMOVRELAC.IDMOVORIGEM = TMOV.IDMOV
            
            LEFT JOIN TMOVRELAC TR2 ON TR2.CODCOLORIGEM = TMOVRELAC.CODCOLORIGEM AND TR2.IDMOVORIGEM = TMOVRELAC.IDMOVDESTINO

            LEFT JOIN TMOVRELAC TR3 ON TR3.CODCOLORIGEM = TR2.CODCOLORIGEM AND TR3.IDMOVORIGEM = TR2.IDMOVDESTINO

			LEFT JOIN TMOV TMOV_PLANEJAMENTO ON TMOV_PLANEJAMENTO.CODCOLIGADA = TR3.CODCOLORIGEM AND TMOV_PLANEJAMENTO.IDMOV = TR3.IDMOVDESTINO
            
            LEFT JOIN TMOVCOMPL TMOVCOMPL_PROJETO ON TMOVCOMPL_PROJETO.CODCOLIGADA = TR2.CODCOLORIGEM AND TMOVCOMPL_PROJETO.IDMOV = TR2.IDMOVDESTINO
            
            LEFT JOIN TITMMOV ON TITMMOV.IDMOV = TMOV.IDMOV AND TITMMOV.CODCOLIGADA = TMOV.CODCOLIGADA
            
            LEFT JOIN TITMMOVCOMPL ON TITMMOVCOMPL.IDMOV = TR2.IDMOVDESTINO AND TITMMOVCOMPL.CODCOLIGADA = TR2.CODCOLORIGEM             


            WHERE 
                TMOV.CODTMV LIKE '1.1.4%'
				AND TMOV_PLANEJAMENTO.STATUS = 'C'
				            
            ) AS RESULT1
            
            WHERE VALIDACAO = 3");
        
        return $query->getResultArray();
    }





    public function getAtendimentoPLAndaimesBKP($parametro)
    {
        $query = $this->db->query("SELECT * FROM (

            SELECT
			
			TMOVCOMPL_PLANEJAMENTO.SAMF_MTG_OPERACAO, 

			FORMAT(TITMMOVCOMPL_PLANEJAMENTO.BM_ALTURA, 'N2') AS ALTURA_PLANEJAMENTO,
			FORMAT(TITMMOVCOMPL_PLANEJAMENTO.BM_LARGURA, 'N2')  AS LARGURA_PLANEJAMENTO,
			FORMAT(TITMMOVCOMPL_PLANEJAMENTO.BM_COMPRIMENTO, 'N2')  AS COMPRIMENTO_PLANEJAMENTO,
			FORMAT(TITMMOVCOMPL_PLANEJAMENTO.BM_ALTURA * TITMMOVCOMPL_PLANEJAMENTO.BM_LARGURA * TITMMOVCOMPL_PLANEJAMENTO.BM_COMPRIMENTO, 'N2')   AS METRAGEM_PLANEJAMENTO,

            TITMMOV.IDPRD, -- AJUSTAR ISSO
            TITMMOV.NSEQITMMOV, -- AJUSTAR ISSO
            
            TITMMOVCOMPL.BM_ALTURA,
            TITMMOVCOMPL.BM_COMPRIMENTO,
            TITMMOVCOMPL.BM_LARGURA,
            
            TMOVCOMPL_PROJETO.SAMF_VS_AP1,
            TMOVCOMPL_PROJETO.SAMF_VS_AP2,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER1,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER2,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER3,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER4,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER5,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER6,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER7,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER8,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER9,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER10,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER11,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER12,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER13,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER14,
            TMOVCOMPL_PROJETO.SAMF_VS_PP1,
            TMOVCOMPL_PROJETO.SAMF_VS_PP2,
            TMOVCOMPL_PROJETO.SAMF_VS_PP3,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP4, 108), 5) AS SAMF_VS_PP4,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP5, 108), 5) AS SAMF_VS_PP5,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP6, 108), 5) AS SAMF_VS_PP6,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP7, 108), 5) AS SAMF_VS_PP7,
            TMOVCOMPL_PROJETO.SAMF_VS_COMPLX,
			TMOVCOMPL_PROJETO.SAMF_VS_AMBIENTE,
			TMOVCOMPL_PROJETO.SAMF_VS_ATERRADO,
            TMOVCOMPL_PROJETO.SAMF_VS_DESCPECAS,
            TMOVCOMPL_PROJETO.SAMF_MTG_TIPOAND,            
           
            TMOVCOMPL_PLANEJAMENTO.SAMF_MTG_MTLINEAR,
            TMOVCOMPL_PLANEJAMENTO.SAMF_MTG_BOLETAEMIT,
            
            TMOVCOMPL.IDMOV AS IDMOV_SC,
			TMOVCOMPL.SAMF_CLI_LOCANDAIME2,
            TMOVCOMPL.SAMF_CLI_OS AS OS_CLIENTE,
            TMOVCOMPL.SAMF_CLI_LOC,
            TMOVCOMPL.SAMF_OBSERVACAO,
            TMOVCOMPL.SAMF_CLI_OS,
            TMOVCOMPL.SAMF_CLI_TEXTO_BREVE,
            TMOVCOMPL.SAMF_CLI_DESC_OP,
            TMOVCOMPL.SAMF_CLI_DENOMINACAO,
            TMOVCOMPL.SAMF_CLI_CENTRAB_RES,
            TMOVCOMPL.SAMF_CLI_CENTRAB_OP,
            TMOVCOMPL.SAMF_CLI_OPERACAO,
            TMOVCOMPL.SAMF_CLI_CODCCUSTO,
            TMOVCOMPL_PLANEJAMENTO.SAMF_CLI_QRCODE,
            TMOVCOMPL.SAMF_CLI_TAG,
            TMOVCOMPL_PLANEJAMENTO.SAMF_VS_PISO,
            TMOVCOMPL.SAMF_CLI_PARADA,
            TMOVCOMPL.SAMF_CLI_BMOBS,
            TMOVCOMPL.SAMF_CLI_AREANV1,
            TMOVCOMPL.SAMF_CLI_AREANV2,
            AREANV1.NOME_AREA AS SAMF_CLI_AREANV1_NOME,            
            AREANV0.NOME_AREA AS SAMF_CLI_AREANV0_NOME,
            
            TMOVRELAC.IDMOVORIGEM AS IDMOVORIGEM,
            TMOVRELAC.IDMOVDESTINO AS IDMOVDESTINO,
            TR2.IDMOVDESTINO AS IDMOVPROJETO,
			TR3.IDMOVDESTINO AS IDMOVPLANEJAMENTO,

			TMOV_PLANEJAMENTO.STATUS AS STATUS_PLANEJAMENTO,
			-- FORMAT(TMOV_PLANEJAMENTO.DATAEXTRA1, 'dd/MM/yyyy') AS DATA_MONTAGEM,
			-- FORMAT(TMOV_PLANEJAMENTO.DATAEXTRA2, 'dd/MM/yyyy') AS DATA_DESMONTAGEM,

            CONVERT(VARCHAR(10), TMOV_PLANEJAMENTO.DATAEXTRA1, 120) AS DATA_MONTAGEM, 
			CONVERT(VARCHAR(5), TMOV_PLANEJAMENTO.DATAEXTRA1, 108) AS HORA_MONTAGEM,   

			CONVERT(VARCHAR(10), TMOV_PLANEJAMENTO.DATAEXTRA2, 120) AS DATA_DESMONTAGEM, 
			CONVERT(VARCHAR(5), TMOV_PLANEJAMENTO.DATAEXTRA2, 108) AS HORA_DESMONTAGEM,
            
            CASE 
                WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 3
                WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 2
                ELSE 1
                END AS VALIDACAO
            FROM 
                TMOVCOMPL

            LEFT JOIN TMOV ON TMOV.IDMOV = TMOVCOMPL.IDMOV AND TMOV.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA
            
            LEFT JOIN TMOVRELAC ON TMOVRELAC.CODCOLORIGEM = TMOV.CODCOLIGADA AND TMOVRELAC.IDMOVORIGEM = TMOV.IDMOV
            
            LEFT JOIN TMOVRELAC TR2 ON TR2.CODCOLORIGEM = TMOVRELAC.CODCOLORIGEM AND TR2.IDMOVORIGEM = TMOVRELAC.IDMOVDESTINO

            LEFT JOIN TMOVRELAC TR3 ON TR3.CODCOLORIGEM = TR2.CODCOLORIGEM AND TR3.IDMOVORIGEM = TR2.IDMOVDESTINO

			LEFT JOIN TMOV TMOV_PLANEJAMENTO ON TMOV_PLANEJAMENTO.CODCOLIGADA = TR3.CODCOLORIGEM AND TMOV_PLANEJAMENTO.IDMOV = TR3.IDMOVDESTINO

			LEFT JOIN TMOVCOMPL TMOVCOMPL_PLANEJAMENTO ON TMOVCOMPL_PLANEJAMENTO.CODCOLIGADA = TMOV_PLANEJAMENTO.CODCOLIGADA AND TMOVCOMPL_PLANEJAMENTO.IDMOV = TMOV_PLANEJAMENTO.IDMOV
            
            LEFT JOIN TMOVCOMPL TMOVCOMPL_PROJETO ON TMOVCOMPL_PROJETO.CODCOLIGADA = TR2.CODCOLORIGEM AND TMOVCOMPL_PROJETO.IDMOV = TR2.IDMOVDESTINO
            
            LEFT JOIN TITMMOV ON TITMMOV.IDMOV = TMOV.IDMOV AND TITMMOV.CODCOLIGADA = TMOV.CODCOLIGADA
            
            LEFT JOIN TITMMOVCOMPL ON TITMMOVCOMPL.IDMOV = TR2.IDMOVDESTINO AND TITMMOVCOMPL.CODCOLIGADA = TR2.CODCOLORIGEM        
			
			--ABAIXO DADOS DA TITMMOV E TITMMOVCOMPL RELACIONADAS AO PLANEJAMENTO 
			LEFT JOIN TITMMOV TITMMOV_PLANEJAMENTO ON TITMMOV.IDMOV = TMOV_PLANEJAMENTO.IDMOV AND TITMMOV.CODCOLIGADA = TMOV_PLANEJAMENTO.CODCOLIGADA
            
            LEFT JOIN TITMMOVCOMPL TITMMOVCOMPL_PLANEJAMENTO ON TITMMOVCOMPL_PLANEJAMENTO.IDMOV = TR3.IDMOVDESTINO AND TITMMOVCOMPL_PLANEJAMENTO.CODCOLIGADA = TR3.CODCOLDESTINO     

            LEFT JOIN SAMF_CLI_AREAS AS AREANV1	ON CAST(AREANV1.ID AS VARCHAR) = TMOVCOMPL.SAMF_CLI_AREANV1
            
			LEFT JOIN SAMF_CLI_AREAS AS AREANV0 ON CAST(AREANV0.ID AS VARCHAR) = TMOVCOMPL.SAMF_CLI_AREANV0 

            WHERE 
                TMOV.CODTMV LIKE '1.1.4%'
				            
            ) AS RESULT1
            
            WHERE VALIDACAO = 3

			AND IDMOVPLANEJAMENTO = ?", [$parametro]);
        
        return $query->getResultArray();
    }



    // ABAIXO A CONSULTA DE ACORDO COM O NOVO DIRECIONAMENTO DA VISITA SQL ABAIXO TRAZ EM NIVEL ATENDIMENTO 
    public function getAtendimentoPLAndaimes($CODCCUSTO, $IDMOVPLANEJAMENTO)
    {
        $query = $this->db->query("SELECT 

        TMOV.IDMOV,
        TMOV.NUMEROMOV, 
        CONVERT(VARCHAR(10), SAMF_MTG_ULTIMAREV, 120) AS SAMF_MTG_ULTIMAREV, 
        CONVERT(VARCHAR(10), SAMF_MTG_PROXIMAREV, 120) AS SAMF_MTG_PROXIMAREV, 
        CONVERT(VARCHAR(10), TMOV.DATAEXTRA1, 120) AS DATA_MONTAGEM, 
		CONVERT(VARCHAR(5), TMOV.DATAEXTRA1, 108) AS HORA_MONTAGEM,   
        CONVERT(VARCHAR(10), TMOV.DATAEXTRA2, 120) AS DATA_DESMONTAGEM, 
		CONVERT(VARCHAR(5), TMOV.DATAEXTRA2, 108) AS HORA_DESMONTAGEM,
        FORMAT(TITMMOVCOMPL.BM_ALTURA, 'N2') AS ALTURA_PLANEJAMENTO,
        FORMAT(TITMMOVCOMPL.BM_LARGURA, 'N2')  AS LARGURA_PLANEJAMENTO,
        FORMAT(TITMMOVCOMPL.BM_COMPRIMENTO, 'N2')  AS COMPRIMENTO_PLANEJAMENTO,
        FORMAT(TITMMOVCOMPL.BM_ALTURA * TITMMOVCOMPL.BM_LARGURA * TITMMOVCOMPL.BM_COMPRIMENTO, 'N2')   AS METRAGEM_PLANEJAMENTO,
        CONVERT(VARCHAR(10), TMOVCOMPL.SAMF_MTG_PREVDES, 120) AS SAMF_MTG_PREVDES,    
		CONVERT(VARCHAR(5), TMOVCOMPL.SAMF_MTG_PREVDES, 108) AS HORA_PREV_DES, 
        CONVERT(VARCHAR(10), TMOVCOMPL.SAMF_MTG_PREVMTG, 120) AS SAMF_MTG_PREVMTG,  
		CONVERT(VARCHAR(5), TMOVCOMPL.SAMF_MTG_PREVMTG, 108) AS HORA_PREV_MTG,   
        TMOV.CODCCUSTO, 
        TMOV.STATUS,
        SAMF_CLI_LOC,
        SAMF_OBSERVACAO,
        SAMF_CLI_OS,
        SAMF_CLI_TEXTO_BREVE,
        SAMF_CLI_DESC_OP,
        SAMF_CLI_DENOMINACAO,
        SAMF_CLI_CENTRAB_RES,
        SAMF_CLI_CENTRAB_OP,
        SAMF_CLI_OPERACAO,
        SAMF_CLI_CODCCUSTO,
        SAMF_CLI_QRCODE,
        SAMF_IDMOV_ORIGEM,
        SAMF_ACESSO.CODUSUARIO AS ENCARREGADO,
        SAMF_PREDECESSORA,
        SAMF_PREV_DURACAO,
        SAMF_CLI_TAG,
        SAMF_PREV_VISITA,
        SAMF_PREV_VISITANOVO,
        SAMF_VS_AP1,
        SAMF_VS_AP2,
        SAMF_VS_INTERFER1,
        SAMF_VS_INTERFER2,
        SAMF_VS_INTERFER3,
        SAMF_VS_INTERFER4,
        SAMF_VS_INTERFER5,
        SAMF_VS_INTERFER6,
        SAMF_VS_INTERFER7,
        SAMF_VS_INTERFER8,
        SAMF_VS_INTERFER9,
        SAMF_VS_MOBILIZACAO,
        SAMF_VS_MONTAGEM,
        SAMF_VS_DESMONTAGEM,
        SAMF_VS_INTERFER10,
        SAMF_VS_INTERFER11,
        SAMF_VS_INTERFER12,
        SAMF_VS_INTERFER13,
        SAMF_VS_INTERFER14,
        SAMF_VS_PP1,
        SAMF_VS_PP2,
        SAMF_VS_PP3,
        SAMF_VS_PP4,
        SAMF_VS_PP5,
        SAMF_VS_PP6,
        SAMF_VS_PP7,
        SAMF_VS_COMPLX,
        SC_APROV01,
        SC_APROV02,
        SC_DTAPROV01,
        SC_DTAPROV02,
        SAMF_TEMPO_VISITA,
        SAMF_VS_PISO,
        SAMF_CLI_LOCANDAIME2,
        SAMF_CLI_LOCANDAIME,
        SAMF_CLI_PARADA,
        SAMF_CLI_BMOBS,
        SAMF_CLI_AREANV1,
        AREANV0.NOME_AREA AS SAMF_CLI_AREANV0_NOME,
        AREANV1.NOME_AREA AS SAMF_CLI_AREANV1_NOME, 
        SAMF_CLI_AREANV2,
        SAMF_CLI_TIPOSC
        OC_APROVSUP,
        OC_DTAAPROVSUP,
        SAMF_VS_ADEQUACAO,
        OC_APROVORC,
        OC_DTAAPROVORC,
        RDO_TURNO,
        RDO_RESPONSAVEL_CLI,
        RDO_RESPONSAVEL_CLI2,
        OC_JUSTORC,
        SAMF_RDO_TIPORDO,
        SAMF_CLI_AREANV0,
        SAMF_RDO_METCUB,
        SAMF_VS_MANUTENCAO,
        SAMF_VS_AMBIENTE,
        SAMF_VS_ATERRADO,
        SAMF_VS_DESCPECAS,
        SAMF_MTG_TIPOAND,
        SAMF_MTG_OPERACAO,
        SAMF_MTG_MTLINEAR,
        SAMF_MTG_BOLETAEMIT,
        SAMF_APROVTOP,
        SAMF_APROVCLIENTE,
        SAMF_CLI_DISCIPLINA,
        SAMF_MTG_MTLIMITE,
        SAMF_RDO_TPCONT,
        SC_REPROVADOR,
        SAMF_VS_ATICIVIL,
        SAMF_CLI_GERENCIA,
        SAMF_MTG_ALTURA,
        SAMF_MTG_LARGURA,
        SAMF_MTG_COMPRIMENTO,
        SAMF_MTG_MTCUBIC,
        TPRD.COMPRIMENTO * TITMMOV.QUANTIDADE AS METRAGEM_LINEAR,
	    CASE 
        WHEN TMOV.DATAEXTRA2 IS NULL
        THEN DATEDIFF(DAY, TMOV.DATAEXTRA1, GETDATE())
        ELSE '0' 
        END AS DIAS_MONTADOS
        --CAST(SUM(METRAGEM_LINEAR) AS DECIMAL(18,2)) AS METRAGEM_LINEAR_TOTAL,

        FROM TMOV 

            LEFT JOIN TMOVCOMPL ON TMOVCOMPL.IDMOV = TMOV.IDMOV AND TMOVCOMPL.CODCOLIGADA = TMOV.CODCOLIGADA
            LEFT JOIN SAMF_CLI_AREAS AS AREANV0 ON CAST(AREANV0.ID AS VARCHAR) = TMOVCOMPL.SAMF_CLI_AREANV0	
            LEFT JOIN SAMF_CLI_AREAS AS AREANV1	ON CAST(AREANV1.ID AS VARCHAR) = TMOVCOMPL.SAMF_CLI_AREANV1
            LEFT JOIN SAMF_ACESSO ON SAMF_ACESSO.ID = TMOVCOMPL.SAMF_ENCARREGADO
            LEFT JOIN TITMMOV ON TMOV.IDMOV = TITMMOV.IDMOV AND TMOV.CODCOLIGADA = TITMMOV.CODCOLIGADA 
            LEFT JOIN TPRD ON TPRD.IDPRD = TITMMOV.IDPRD AND TPRD.CODCOLIGADA = TITMMOV.CODCOLIGADA 
            LEFT JOIN TITMMOVCOMPL ON TITMMOVCOMPL.IDMOV = TITMMOV.IDMOV AND TITMMOVCOMPL.CODCOLIGADA = TITMMOV.CODCOLIGADA   
        
        WHERE CODTMV = '1.1.43' 
        AND TMOV.CODCCUSTO = ?
		AND TMOV.IDMOV = ?
		AND TMOV.STATUS <> 'Z' ", [$CODCCUSTO, $IDMOVPLANEJAMENTO]);
        
        return $query->getRow();
    }



    // ATENDIMENTO RDO PRIMEIRO NIVEL
    public function getAtendimentoRDOUnico($IDMOV)
    {
        $query = $this->db->query("
        SELECT 

        /* ABAIXO BLOCO COM DADOS INICIAIS DO RDO */
		TMOV.STATUS,
        TMOV.CODUSUARIO AS RESPONSAVEL_TOP, 
        TMOVCOMPL.SAMF_CLI_AREANV1, 
        TMOVCOMPL.SAMF_CLI_AREANV2, 
        TMOVCOMPL.SAMF_CLI_TIPOSC AS TIPOSOLICITACAO, 
        FORMAT(TMOV.DATAEXTRA1, 'dd/MM/yyyy') AS DATA_REFERENCIA, 

        /*ABAIXO BLOCO ATIVIDADES EXECUTADAS*/
        TMOVCOMPL.SAMF_VS_ADEQUACAO,
        SAMF_VS_MOBILIZACAO,
        SAMF_VS_MONTAGEM,
        SAMF_VS_DESMONTAGEM,
        SAMF_VS_ATICIVIL,

        /*ABAIXO BLOCO IMPACTOS NA TAREFA*/
        SAMF_VS_INTERFER1,
        SAMF_VS_INTERFER2,
        SAMF_VS_INTERFER3,
        SAMF_VS_INTERFER4,
        SAMF_VS_INTERFER5,
        SAMF_VS_INTERFER6,
        SAMF_VS_INTERFER7,
        SAMF_VS_INTERFER8,
        SAMF_VS_INTERFER9,
        RDO_RESPONSAVEL_CLI2,
        SAMF_RDO_TIPORDO, *

        /**/

        
        FROM TMOV 
        --LEFT JOIN TITMMOV ON TMOV.IDMOV = TITMMOV.IDMOV AND TMOV.CODCOLIGADA = TITMMOV.CODCOLIGADA 
        --LEFT JOIN TITMMOVCOMPL ON TITMMOV.IDMOV = TITMMOVCOMPL.IDMOV AND TITMMOV.CODCOLIGADA = TITMMOVCOMPL.CODCOLIGADA 
        LEFT JOIN TMOVCOMPL ON TMOV.IDMOV = TMOVCOMPL.IDMOV AND TMOV.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA 
        WHERE TMOV.STATUS <> 'G' AND TMOV.IDMOV = ?", [$IDMOV]);
        
        return $query->getRow();
    }


    // TRAZENDO TUDO QUE ESTÁ RELACIONADO AO RDO PRAS REFERENCIAS DO RDO 
    public function getAtendimentoRelacUnico($IDMOV)
    {
        $query = $this->db->query("
        SELECT 
        TMOVCOMPL.IDMOV,
        SAMF_CLI_OS, 
        SAMF_CLI_TAG, 
        SAMF_RDO_TIPORDO, 
        RDO_TURNO,
        SAMF_RDO_METCUB,
        CASE
            WHEN SAMF_VS_MONTAGEM = 1 THEN 1
            WHEN SAMF_VS_DESMONTAGEM = 1 THEN 2
            WHEN SAMF_VS_ADEQUACAO = 1 THEN 3
            WHEN SAMF_VS_MOBILIZACAO = 1 THEN 4
            WHEN SAMF_VS_MANUTENCAO = 1 THEN 5
            ELSE 0
        END AS ATIVIDADE_REF

        FROM TMOVCOMPL 
        LEFT JOIN 
        TMOVRELAC ON  TMOVRELAC.CODCOLORIGEM = TMOVCOMPL.CODCOLIGADA AND IDMOVDESTINO = TMOVCOMPL.IDMOV 
        WHERE IDMOVORIGEM = ?
        ", [$IDMOV]);
        
        return $query->getResultArray();
    }







    
    // TRAZER DADOS PARA GERAR PDF
    public function getPDFRDO($IDMOV)
    {
        $query = $this->db->query("
        SELECT 

        /* ABAIXO BLOCO COM DADOS INICIAIS DO RDO */
		TMOV.STATUS,
        TMOV.IDMOV,
        TMOV.NUMEROMOV,
        TMOV.CODUSUARIO AS RESPONSAVEL_TOP, 
        TMOVCOMPL.SAMF_CLI_AREANV1, 
        TMOVCOMPL.SAMF_CLI_AREANV2, 
        TMOVCOMPL.SAMF_CLI_TIPOSC AS TIPOSOLICITACAO, 
        FORMAT(TMOV.DATAEXTRA1, 'dd/MM/yyyy') AS DATA_REFERENCIA, 

        /*ABAIXO BLOCO ATIVIDADES EXECUTADAS*/
        TMOVCOMPL.SAMF_VS_ADEQUACAO,
        SAMF_VS_MOBILIZACAO,
        SAMF_VS_MONTAGEM,
        SAMF_VS_DESMONTAGEM,

        /*ABAIXO BLOCO IMPACTOS NA TAREFA*/
        SAMF_VS_INTERFER1,
        SAMF_VS_INTERFER2,
        SAMF_VS_INTERFER3,
        SAMF_VS_INTERFER4,
        SAMF_VS_INTERFER5,
        SAMF_VS_INTERFER6,
        SAMF_VS_INTERFER7,
        SAMF_VS_INTERFER8,
        SAMF_VS_INTERFER9,
        RDO_RESPONSAVEL_CLI2,

        /**/

        *
        FROM TMOV 
        --LEFT JOIN TITMMOV ON TMOV.IDMOV = TITMMOV.IDMOV AND TMOV.CODCOLIGADA = TITMMOV.CODCOLIGADA 
        --LEFT JOIN TITMMOVCOMPL ON TITMMOV.IDMOV = TITMMOVCOMPL.IDMOV AND TITMMOV.CODCOLIGADA = TITMMOVCOMPL.CODCOLIGADA 
        LEFT JOIN TMOVCOMPL ON TMOV.IDMOV = TMOVCOMPL.IDMOV AND TMOV.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA 
        WHERE TMOV.STATUS <> 'G' AND TMOV.IDMOV = ?", [$IDMOV]);
        
        return $query->getRow();
    }




    // ATENDIMENTO RDO GESTOR
    public function getAtendimentoRDOUnicoGestor($IDMOV)
    {
        $query = $this->db->query("
        SELECT 

        /* ABAIXO BLOCO COM DADOS INICIAIS DO RDO */
		TMOV.STATUS,
        TMOV.CODUSUARIO AS RESPONSAVEL_TOP, 
        TMOVCOMPL.SAMF_CLI_AREANV1, 
        TMOVCOMPL.SAMF_CLI_AREANV2, 
        TMOVCOMPL.SAMF_CLI_TIPOSC AS TIPOSOLICITACAO, 
        FORMAT(TMOV.DATAEXTRA1, 'dd/MM/yyyy') AS DATA_REFERENCIA, 

        /*ABAIXO BLOCO ATIVIDADES EXECUTADAS*/
        TMOVCOMPL.SAMF_VS_ADEQUACAO,
        SAMF_VS_MOBILIZACAO,
        SAMF_VS_MONTAGEM,
        SAMF_VS_DESMONTAGEM,
        TMOVCOMPL.RDO_TURNO,

        /*ABAIXO BLOCO IMPACTOS NA TAREFA*/
        SAMF_VS_INTERFER1,
        SAMF_VS_INTERFER2,
        SAMF_VS_INTERFER3,
        SAMF_VS_INTERFER4,
        SAMF_VS_INTERFER5,
        SAMF_VS_INTERFER6,
        SAMF_VS_INTERFER7,
        SAMF_VS_INTERFER8,
        SAMF_VS_INTERFER9,
        RDO_RESPONSAVEL_CLI2,

        /**/

        *
        FROM TMOV 
        --LEFT JOIN TITMMOV ON TMOV.IDMOV = TITMMOV.IDMOV AND TMOV.CODCOLIGADA = TITMMOV.CODCOLIGADA 
        --LEFT JOIN TITMMOVCOMPL ON TITMMOV.IDMOV = TITMMOVCOMPL.IDMOV AND TITMMOV.CODCOLIGADA = TITMMOVCOMPL.CODCOLIGADA 
        LEFT JOIN TMOVCOMPL ON TMOV.IDMOV = TMOVCOMPL.IDMOV AND TMOV.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA 
        WHERE TMOV.STATUS IN ('G','F') AND TMOV.IDMOV = ?", [$IDMOV]);
        
        return $query->getRow();
    }

    // APROVAÇÃO VIA E-MAIL DO GESTOR 
    public function aprovagestoremail($IDMOV, $CODUSUARIO, $HASH, $CODCCUSTO)
    {
        $query = $this->db->query("
        SELECT 

        'http://192.168.1.59/SisAndaimes/SAMF/SAMF/aprovagestoremail' + 
        '?IDMOV=' + CAST(TMOV.IDMOV AS VARCHAR(20)) + 
        '&HASH=' + SAMF_USUARIO.SENHA + 
        '&U=' + CAST(SAMF_USUARIO.USUARIO AS VARCHAR(50)) + 
        '&CC=' + CAST(TMOV.CODCCUSTO AS VARCHAR(50)) + 
        '&HAS2=' + CAST(TMOV.NUMEROMOV AS VARCHAR(20)) AS URL,
        
        TMOV.STATUS,
        TMOV.IDMOV,
        TMOV.NUMEROMOV, 
        SAMF_ACESSO.CODUSUARIO,
        SAMF_USUARIO.SENHA AS HASH_S, 
        SAMF_USUARIO.EMAIL,
        TMOV.CODUSUARIO AS RESPONSAVEL_TOP, 
        TMOVCOMPL.SAMF_CLI_AREANV1, 
        TMOVCOMPL.SAMF_CLI_AREANV2, 
        TMOVCOMPL.SAMF_CLI_TIPOSC AS TIPOSOLICITACAO, 
        FORMAT(TMOV.DATAEXTRA1, 'dd/MM/yyyy') AS DATA_REFERENCIA,
        TMOV.CODCCUSTO, 

        TMOVCOMPL.SAMF_VS_ADEQUACAO,
        SAMF_VS_MOBILIZACAO,
        SAMF_VS_MONTAGEM,
        SAMF_VS_DESMONTAGEM,
        SAMF_VS_MANUTENCAO,
        TMOVCOMPL.RDO_TURNO,

        SAMF_VS_INTERFER1,
        SAMF_VS_INTERFER2,
        SAMF_VS_INTERFER3,
        SAMF_VS_INTERFER4,
        SAMF_VS_INTERFER5,
        SAMF_VS_INTERFER6,
        SAMF_VS_INTERFER7,
        SAMF_VS_INTERFER8,
        SAMF_VS_INTERFER9,
        RDO_RESPONSAVEL_CLI2        

        FROM TMOV 
        LEFT JOIN TMOVCOMPL ON TMOV.IDMOV = TMOVCOMPL.IDMOV AND TMOV.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA 
        LEFT JOIN SAMF_ACESSO ON SAMF_ACESSO.CODCCUSTO = TMOV.CODCCUSTO AND SAMF_ACESSO.CODCOLIGADA = TMOV.CODCOLIGADA 
        LEFT JOIN SAMF_USUARIO ON SAMF_USUARIO.USUARIO =  SAMF_ACESSO.CODUSUARIO 

        WHERE TMOV.STATUS IN ('G')
        AND SAMF_ACESSO.GERENTE = 1 
        AND TMOV.IDMOV = ?
        AND SAMF_ACESSO.CODUSUARIO = ?
        AND SAMF_USUARIO.SENHA = ?
        AND TMOV.CODCCUSTO = ?
        ", [$IDMOV, $CODUSUARIO, $HASH, $CODCCUSTO]);
        
        return $query->getRow();
    }



    // APROVACAO CLIENTE EMAIL NIVEL 1
    public function aprovaclienteemail1($IDMOV)
    {
        $query = $this->db->query("
        SELECT 

        'http://192.168.1.59/SisAndaimes/SAMF/SAMF/aprovaclienteemail1' + 
        '?IDMOV=' + CAST(TMOV.IDMOV AS VARCHAR(20)) + 
        '&HASH=' + SAMF_USUARIO.SENHA + 
        '&U=' + 'LUDSON.MORENO' + 
        '&CC=' + CAST(TMOV.CODCCUSTO AS VARCHAR(50)) + 
        '&HAS2=' + CAST(TMOV.NUMEROMOV AS VARCHAR(20)) AS URL,
        
        TMOV.STATUS,
        TMOV.IDMOV,
        TMOV.NUMEROMOV, 
        SAMF_ACESSO.CODUSUARIO,
        SAMF_USUARIO.SENHA AS HASH_S, 
        SAMF_USUARIO.EMAIL,
        TMOV.CODUSUARIO AS RESPONSAVEL_TOP, 
        TMOVCOMPL.SAMF_CLI_AREANV1, 
        TMOVCOMPL.SAMF_CLI_AREANV2, 
        TMOVCOMPL.SAMF_CLI_TIPOSC AS TIPOSOLICITACAO, 
        FORMAT(TMOV.DATAEXTRA1, 'dd/MM/yyyy') AS DATA_REFERENCIA,
        TMOV.CODCCUSTO, 

        TMOVCOMPL.SAMF_VS_ADEQUACAO,
        SAMF_VS_MOBILIZACAO,
        SAMF_VS_MONTAGEM,
        SAMF_VS_DESMONTAGEM,
        SAMF_VS_MANUTENCAO,
        TMOVCOMPL.RDO_TURNO,

        SAMF_VS_INTERFER1,
        SAMF_VS_INTERFER2,
        SAMF_VS_INTERFER3,
        SAMF_VS_INTERFER4,
        SAMF_VS_INTERFER5,
        SAMF_VS_INTERFER6,
        SAMF_VS_INTERFER7,
        SAMF_VS_INTERFER8,
        SAMF_VS_INTERFER9,
        RDO_RESPONSAVEL_CLI2        

        FROM TMOV 
        LEFT JOIN TMOVCOMPL ON TMOV.IDMOV = TMOVCOMPL.IDMOV AND TMOV.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA 
        LEFT JOIN SAMF_ACESSO ON SAMF_ACESSO.CODCCUSTO = TMOV.CODCCUSTO AND SAMF_ACESSO.CODCOLIGADA = TMOV.CODCOLIGADA 
        LEFT JOIN SAMF_USUARIO ON SAMF_USUARIO.USUARIO =  SAMF_ACESSO.CODUSUARIO 

        WHERE TMOV.STATUS IN ('F')
        --AND SAMF_ACESSO.GERENTE = 1 
        AND TMOV.IDMOV = ?
		AND SAMF_ACESSO.CODUSUARIO = 'LUDSON.MORENO'
        ", [$IDMOV]);
        
        return $query->getRow();
    }

    // APROVACAO CLIENTE EMAIL NIVEL 2
    public function aprovaclienteemail2($IDMOV)
    {
        $query = $this->db->query("
        SELECT 

        'http://192.168.1.59/SisAndaimes/SAMF/SAMF/aprovaclienteemail2' + 
        '?IDMOV=' + CAST(TMOV.IDMOV AS VARCHAR(20)) + 
        '&HASH=' + SAMF_USUARIO.SENHA + 
        '&U=' + 'AYSLA OLIVEIRA' + 
        '&CC=' + CAST(TMOV.CODCCUSTO AS VARCHAR(50)) + 
        '&HAS2=' + CAST(TMOV.NUMEROMOV AS VARCHAR(20)) AS URL,
        
        TMOV.STATUS,
        TMOV.IDMOV,
        TMOV.NUMEROMOV, 
        SAMF_ACESSO.CODUSUARIO,
        SAMF_USUARIO.SENHA AS HASH_S, 
        SAMF_USUARIO.EMAIL,
        TMOV.CODUSUARIO AS RESPONSAVEL_TOP, 
        TMOVCOMPL.SAMF_CLI_AREANV1, 
        TMOVCOMPL.SAMF_CLI_AREANV2, 
        TMOVCOMPL.SAMF_CLI_TIPOSC AS TIPOSOLICITACAO, 
        FORMAT(TMOV.DATAEXTRA1, 'dd/MM/yyyy') AS DATA_REFERENCIA,
        TMOV.CODCCUSTO, 

        TMOVCOMPL.SAMF_VS_ADEQUACAO,
        SAMF_VS_MOBILIZACAO,
        SAMF_VS_MONTAGEM,
        SAMF_VS_DESMONTAGEM,
        SAMF_VS_MANUTENCAO,
        TMOVCOMPL.RDO_TURNO,

        SAMF_VS_INTERFER1,
        SAMF_VS_INTERFER2,
        SAMF_VS_INTERFER3,
        SAMF_VS_INTERFER4,
        SAMF_VS_INTERFER5,
        SAMF_VS_INTERFER6,
        SAMF_VS_INTERFER7,
        SAMF_VS_INTERFER8,
        SAMF_VS_INTERFER9,
        RDO_RESPONSAVEL_CLI2        

        FROM TMOV 
        LEFT JOIN TMOVCOMPL ON TMOV.IDMOV = TMOVCOMPL.IDMOV AND TMOV.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA 
        LEFT JOIN SAMF_ACESSO ON SAMF_ACESSO.CODCCUSTO = TMOV.CODCCUSTO AND SAMF_ACESSO.CODCOLIGADA = TMOV.CODCOLIGADA 
        LEFT JOIN SAMF_USUARIO ON SAMF_USUARIO.USUARIO =  SAMF_ACESSO.CODUSUARIO 

        WHERE TMOV.STATUS IN ('R')
        --AND SAMF_ACESSO.GERENTE = 1 
        AND TMOV.IDMOV = ?
		AND SAMF_ACESSO.CODUSUARIO = 'AYSLA.OLIVEIRA'
        ", [$IDMOV]);
        
        return $query->getRow();
    }



    // ATENDIMENTO RDO CLIENTE
    public function getAtendimentoRDOUnicoCliente($IDMOV)
    {
        $query = $this->db->query("
        SELECT 

        /* ABAIXO BLOCO COM DADOS INICIAIS DO RDO */
		TMOV.STATUS,
        TMOV.NUMEROMOV,
        TMOV.CODUSUARIO AS RESPONSAVEL_TOP,
		AREANV1.NOME_AREA, 
        TMOVCOMPL.SAMF_CLI_AREANV1, 
        TMOVCOMPL.SAMF_CLI_AREANV2, 
        TMOVCOMPL.SAMF_CLI_TIPOSC AS TIPOSOLICITACAO, 
        FORMAT(TMOV.DATAEXTRA1, 'dd/MM/yyyy') AS DATA_REFERENCIA, 

        /*ABAIXO BLOCO ATIVIDADES EXECUTADAS*/
        TMOVCOMPL.SAMF_VS_ADEQUACAO,
        SAMF_VS_MOBILIZACAO,
        SAMF_VS_MONTAGEM,
        SAMF_VS_DESMONTAGEM,

        /*ABAIXO BLOCO IMPACTOS NA TAREFA*/
        SAMF_VS_INTERFER1,
        SAMF_VS_INTERFER2,
        SAMF_VS_INTERFER3,
        SAMF_VS_INTERFER4,
        SAMF_VS_INTERFER5,
        SAMF_VS_INTERFER6,
        SAMF_VS_INTERFER7,
        SAMF_VS_INTERFER8,
        SAMF_VS_INTERFER9,
        RDO_RESPONSAVEL_CLI2,

        /**/

        *
        FROM TMOV 
        --LEFT JOIN TITMMOV ON TMOV.IDMOV = TITMMOV.IDMOV AND TMOV.CODCOLIGADA = TITMMOV.CODCOLIGADA 
        --LEFT JOIN TITMMOVCOMPL ON TITMMOV.IDMOV = TITMMOVCOMPL.IDMOV AND TITMMOV.CODCOLIGADA = TITMMOVCOMPL.CODCOLIGADA 
        LEFT JOIN TMOVCOMPL ON TMOV.IDMOV = TMOVCOMPL.IDMOV AND TMOV.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA 
		LEFT JOIN SAMF_CLI_AREAS AS AREANV0 ON CAST(AREANV0.ID AS VARCHAR) = TMOVCOMPL.SAMF_CLI_AREANV0 
		LEFT JOIN SAMF_CLI_AREAS AS AREANV1	ON CAST(AREANV1.ID AS VARCHAR) = TMOVCOMPL.SAMF_CLI_AREANV1
        WHERE TMOV.STATUS IN ('F','R') AND TMOV.IDMOV = ?", [$IDMOV]);
        
        return $query->getRow();
    }



    public function getAtendimentoRDO($parametro)
    {
        $query = $this->db->query("SELECT * FROM (

            SELECT 

			FORMAT(TITMMOVCOMPL_PLANEJAMENTO.BM_ALTURA, 'N2') AS ALTURA_PLANEJAMENTO,
			FORMAT(TITMMOVCOMPL_PLANEJAMENTO.BM_LARGURA, 'N2')  AS LARGURA_PLANEJAMENTO,
			FORMAT(TITMMOVCOMPL_PLANEJAMENTO.BM_COMPRIMENTO, 'N2')  AS COMPRIMENTO_PLANEJAMENTO,
			FORMAT(TITMMOVCOMPL_PLANEJAMENTO.BM_ALTURA * TITMMOVCOMPL_PLANEJAMENTO.BM_LARGURA * TITMMOVCOMPL_PLANEJAMENTO.BM_COMPRIMENTO, 'N2')   AS METRAGEM_PLANEJAMENTO,

            TITMMOV.IDPRD, -- AJUSTAR ISSO
            TITMMOV.NSEQITMMOV, -- AJUSTAR ISSO
            
            TITMMOVCOMPL.BM_ALTURA,
            TITMMOVCOMPL.BM_COMPRIMENTO,
            TITMMOVCOMPL.BM_LARGURA,
            
            TMOVCOMPL_PROJETO.SAMF_VS_AP1,
            TMOVCOMPL_PROJETO.SAMF_VS_AP2,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER1,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER2,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER3,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER4,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER5,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER6,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER7,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER8,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER9,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER10,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER11,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER12,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER13,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER14,
            TMOVCOMPL_PROJETO.SAMF_VS_PP1,
            TMOVCOMPL_PROJETO.SAMF_VS_PP2,
            TMOVCOMPL_PROJETO.SAMF_VS_PP3,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP4, 108), 5) AS SAMF_VS_PP4,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP5, 108), 5) AS SAMF_VS_PP5,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP6, 108), 5) AS SAMF_VS_PP6,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP7, 108), 5) AS SAMF_VS_PP7,
            TMOVCOMPL_PROJETO.SAMF_VS_COMPLX,
            
            TMOVCOMPL.IDMOV AS IDMOV_SC,
			TMOVCOMPL.SAMF_CLI_LOCANDAIME2,
            TMOVCOMPL.SAMF_CLI_OS AS OS_CLIENTE,
            TMOVCOMPL.SAMF_CLI_LOC,
            TMOVCOMPL.SAMF_OBSERVACAO,
            TMOVCOMPL.SAMF_CLI_OS,
            TMOVCOMPL.SAMF_CLI_TEXTO_BREVE,
            TMOVCOMPL.SAMF_CLI_DESC_OP,
            TMOVCOMPL.SAMF_CLI_DENOMINACAO,
            TMOVCOMPL.SAMF_CLI_CENTRAB_RES,
            TMOVCOMPL.SAMF_CLI_CENTRAB_OP,
            TMOVCOMPL.SAMF_CLI_OPERACAO,
            TMOVCOMPL.SAMF_CLI_CODCCUSTO,
            TMOVCOMPL.SAMF_CLI_QRCODE,
            TMOVCOMPL.SAMF_CLI_TAG,
            TMOVCOMPL.SAMF_VS_PISO,
            TMOVCOMPL.SAMF_CLI_PARADA,
            TMOVCOMPL.SAMF_CLI_BMOBS,
            TMOVCOMPL.SAMF_CLI_AREANV1,
            TMOVCOMPL.SAMF_CLI_AREANV2,
            
            TMOVRELAC.IDMOVORIGEM AS IDMOVORIGEM,
            TMOVRELAC.IDMOVDESTINO AS IDMOVDESTINO,
            TR2.IDMOVDESTINO AS IDMOVPROJETO,
			TR3.IDMOVDESTINO AS IDMOVPLANEJAMENTO,

			TMOV_PLANEJAMENTO.STATUS AS STATUS_PLANEJAMENTO,
			FORMAT(TMOV_PLANEJAMENTO.DATAEXTRA1, 'dd/MM/yyyy') AS DATA_MONTAGEM,
			FORMAT(TMOV_PLANEJAMENTO.DATAEXTRA1, 'dd/MM/yyyy') AS DATA_DESMONTAGEM,
            
            CASE 
                WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 3
                WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 2
                ELSE 1
                END AS VALIDACAO
            FROM 
                TMOVCOMPL

            LEFT JOIN TMOV ON TMOV.IDMOV = TMOVCOMPL.IDMOV AND TMOV.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA
            
            LEFT JOIN TMOVRELAC ON TMOVRELAC.CODCOLORIGEM = TMOV.CODCOLIGADA AND TMOVRELAC.IDMOVORIGEM = TMOV.IDMOV
            
            LEFT JOIN TMOVRELAC TR2 ON TR2.CODCOLORIGEM = TMOVRELAC.CODCOLORIGEM AND TR2.IDMOVORIGEM = TMOVRELAC.IDMOVDESTINO

            LEFT JOIN TMOVRELAC TR3 ON TR3.CODCOLORIGEM = TR2.CODCOLORIGEM AND TR3.IDMOVORIGEM = TR2.IDMOVDESTINO

			LEFT JOIN TMOV TMOV_PLANEJAMENTO ON TMOV_PLANEJAMENTO.CODCOLIGADA = TR3.CODCOLORIGEM AND TMOV_PLANEJAMENTO.IDMOV = TR3.IDMOVDESTINO
            
            LEFT JOIN TMOVCOMPL TMOVCOMPL_PROJETO ON TMOVCOMPL_PROJETO.CODCOLIGADA = TR2.CODCOLORIGEM AND TMOVCOMPL_PROJETO.IDMOV = TR2.IDMOVDESTINO
            
            LEFT JOIN TITMMOV ON TITMMOV.IDMOV = TMOV.IDMOV AND TITMMOV.CODCOLIGADA = TMOV.CODCOLIGADA
            
            LEFT JOIN TITMMOVCOMPL ON TITMMOVCOMPL.IDMOV = TR2.IDMOVDESTINO AND TITMMOVCOMPL.CODCOLIGADA = TR2.CODCOLORIGEM        
			
			--ABAIXO DADOS DA TITMMOV E TITMMOVCOMPL RELACIONADAS AO PLANEJAMENTO 
			LEFT JOIN TITMMOV TITMMOV_PLANEJAMENTO ON TITMMOV.IDMOV = TMOV_PLANEJAMENTO.IDMOV AND TITMMOV.CODCOLIGADA = TMOV_PLANEJAMENTO.CODCOLIGADA
            
            LEFT JOIN TITMMOVCOMPL TITMMOVCOMPL_PLANEJAMENTO ON TITMMOVCOMPL_PLANEJAMENTO.IDMOV = TR3.IDMOVDESTINO AND TITMMOVCOMPL_PLANEJAMENTO.CODCOLIGADA = TR3.CODCOLDESTINO     


            WHERE 
                TMOV.CODTMV LIKE '1.1.4%'
				            
            ) AS RESULT1
            
            WHERE VALIDACAO = 3

			AND IDMOVORIGEM = ?", [$parametro]);
        
        return $query->getResultArray();
    }









    // TRAZENDO MOVIMENTOS QUE SÃO DE PROJETO 1.1.42 VALIDACAO 3 E SAMF_
    public function getMovimentosPLAndaimes()
    {
        $query = $this->db->query("SELECT * FROM (

            SELECT 

            FORMAT(TITMMOVCOMPL_PLANEJAMENTO.BM_ALTURA, 'N2') AS ALTURA_PLANEJAMENTO,
			FORMAT(TITMMOVCOMPL_PLANEJAMENTO.BM_LARGURA, 'N2')  AS LARGURA_PLANEJAMENTO,
			FORMAT(TITMMOVCOMPL_PLANEJAMENTO.BM_COMPRIMENTO, 'N2')  AS COMPRIMENTO_PLANEJAMENTO,
			FORMAT(TITMMOVCOMPL_PLANEJAMENTO.BM_ALTURA * TITMMOVCOMPL_PLANEJAMENTO.BM_LARGURA * TITMMOVCOMPL_PLANEJAMENTO.BM_COMPRIMENTO, 'N2')   AS METRAGEM_PLANEJAMENTO,

            TITMMOV.IDPRD, -- AJUSTAR ISSO
            TITMMOV.NSEQITMMOV, -- AJUSTAR ISSO
            
            TITMMOVCOMPL.BM_ALTURA,
            TITMMOVCOMPL.BM_COMPRIMENTO,
            TITMMOVCOMPL.BM_LARGURA,
            
            TMOVCOMPL_PROJETO.SAMF_VS_AP1,
            TMOVCOMPL_PROJETO.SAMF_VS_AP2,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER1,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER2,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER3,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER4,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER5,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER6,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER7,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER8,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER9,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER10,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER11,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER12,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER13,
            TMOVCOMPL_PROJETO.SAMF_VS_INTERFER14,
            TMOVCOMPL_PROJETO.SAMF_VS_PP1,
            TMOVCOMPL_PROJETO.SAMF_VS_PP2,
            TMOVCOMPL_PROJETO.SAMF_VS_PP3,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP4, 108), 5) AS SAMF_VS_PP4,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP5, 108), 5) AS SAMF_VS_PP5,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP6, 108), 5) AS SAMF_VS_PP6,
            LEFT(CONVERT(varchar, TMOVCOMPL_PROJETO.SAMF_VS_PP7, 108), 5) AS SAMF_VS_PP7,
            TMOVCOMPL_PROJETO.SAMF_VS_COMPLX,
            
            TMOVCOMPL.IDMOV AS IDMOV_SC,
			TMOVCOMPL.SAMF_CLI_LOCANDAIME2,
            TMOVCOMPL.SAMF_CLI_OS AS OS_CLIENTE,
            TMOVCOMPL.SAMF_CLI_LOC,
            TMOVCOMPL.SAMF_OBSERVACAO,
            TMOVCOMPL.SAMF_CLI_OS,
            TMOVCOMPL.SAMF_CLI_TEXTO_BREVE,
            TMOVCOMPL.SAMF_CLI_DESC_OP,
            TMOVCOMPL.SAMF_CLI_DENOMINACAO,
            TMOVCOMPL.SAMF_CLI_CENTRAB_RES,
            TMOVCOMPL.SAMF_CLI_CENTRAB_OP,
            TMOVCOMPL.SAMF_CLI_OPERACAO,
            TMOVCOMPL.SAMF_CLI_CODCCUSTO,
            TMOVCOMPL.SAMF_CLI_QRCODE,
            TMOVCOMPL.SAMF_CLI_TAG,
            
            TMOVRELAC.IDMOVORIGEM AS IDMOVORIGEM,
            TMOVRELAC.IDMOVDESTINO AS IDMOVDESTINO,
            TR2.IDMOVDESTINO AS IDMOVPROJETO,
			TR3.IDMOVDESTINO AS IDMOVPLANEJAMENTO,

			TMOV_PLANEJAMENTO.STATUS AS STATUS_PLANEJAMENTO,
			TMOV_PLANEJAMENTO.DATAEXTRA1 AS DATA_MONTAGEM,
            TMOV_PLANEJAMENTO.DATAEXTRA2 AS DATA_DESMONTAGEM,

            CASE 
                WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 3
                WHEN TR2.IDMOVDESTINO IS NOT NULL THEN 2
                ELSE 1
                END AS VALIDACAO
            FROM 
                TMOVCOMPL

            LEFT JOIN TMOV ON TMOV.IDMOV = TMOVCOMPL.IDMOV AND TMOV.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA
            
            LEFT JOIN TMOVRELAC ON TMOVRELAC.CODCOLORIGEM = TMOV.CODCOLIGADA AND TMOVRELAC.IDMOVORIGEM = TMOV.IDMOV
            
            LEFT JOIN TMOVRELAC TR2 ON TR2.CODCOLORIGEM = TMOVRELAC.CODCOLORIGEM AND TR2.IDMOVORIGEM = TMOVRELAC.IDMOVDESTINO

            LEFT JOIN TMOVRELAC TR3 ON TR3.CODCOLORIGEM = TR2.CODCOLORIGEM AND TR3.IDMOVORIGEM = TR2.IDMOVDESTINO

			LEFT JOIN TMOV TMOV_PLANEJAMENTO ON TMOV_PLANEJAMENTO.CODCOLIGADA = TR3.CODCOLORIGEM AND TMOV_PLANEJAMENTO.IDMOV = TR3.IDMOVDESTINO
            
            LEFT JOIN TMOVCOMPL TMOVCOMPL_PROJETO ON TMOVCOMPL_PROJETO.CODCOLIGADA = TR2.CODCOLORIGEM AND TMOVCOMPL_PROJETO.IDMOV = TR2.IDMOVDESTINO
            
            LEFT JOIN TITMMOV ON TITMMOV.IDMOV = TMOV.IDMOV AND TITMMOV.CODCOLIGADA = TMOV.CODCOLIGADA
            
            LEFT JOIN TITMMOVCOMPL ON TITMMOVCOMPL.IDMOV = TR2.IDMOVDESTINO AND TITMMOVCOMPL.CODCOLIGADA = TR2.CODCOLORIGEM        
			
			--ABAIXO DADOS DA TITMMOV E TITMMOVCOMPL RELACIONADAS AO PLANEJAMENTO 
			LEFT JOIN TITMMOV TITMMOV_PLANEJAMENTO ON TITMMOV.IDMOV = TMOV_PLANEJAMENTO.IDMOV AND TITMMOV.CODCOLIGADA = TMOV_PLANEJAMENTO.CODCOLIGADA
            
            LEFT JOIN TITMMOVCOMPL TITMMOVCOMPL_PLANEJAMENTO ON TITMMOVCOMPL_PLANEJAMENTO.IDMOV = TR3.IDMOVDESTINO AND TITMMOVCOMPL_PLANEJAMENTO.CODCOLIGADA = TR3.CODCOLDESTINO     


            WHERE 
                TMOV.CODTMV LIKE '1.1.4%'
				            
            ) AS RESULT1
            
            WHERE VALIDACAO = 3");
        
        return $query->getResultArray();
    }




    /* TRAZENDO OS MOVIMENTOS 1.1.41 GESTÃO DE VISITAS */
    public function getMovimentosvisitas($CODCCUSTO)
    {
        $query = $this->db->query("
            
            SELECT 			
            
            TMOV_SOLICITACAO.IDMOV AS IDMOV,
            TMOV_VISITA.IDMOV AS IDMOVVISITA,
			TMOV_VISITA.CODTMV AS MOVIMENTO_VISITA,
			TMOV_VISITA.STATUS AS STATUS_VISITA, 

			TMOV_SOLICITACAO.CODCCUSTO,
            TMOV_SOLICITACAO.STATUS,			
            
            COMPL_SOLICITACAO.IDMOV AS IDMOV_SC,
			COMPL_SOLICITACAO.SAMF_CLI_LOCANDAIME2,
            COMPL_SOLICITACAO.SAMF_CLI_OS AS OS_CLIENTE,
            COMPL_SOLICITACAO.SAMF_CLI_LOC,
            COMPL_SOLICITACAO.SAMF_OBSERVACAO,
            COMPL_SOLICITACAO.SAMF_CLI_OS,
            COMPL_SOLICITACAO.SAMF_CLI_TEXTO_BREVE,
            COMPL_SOLICITACAO.SAMF_CLI_DESC_OP,
            COMPL_SOLICITACAO.SAMF_CLI_DENOMINACAO,
            COMPL_SOLICITACAO.SAMF_CLI_CENTRAB_RES,
            COMPL_SOLICITACAO.SAMF_CLI_CENTRAB_OP,
            COMPL_SOLICITACAO.SAMF_CLI_OPERACAO,
            COMPL_SOLICITACAO.SAMF_CLI_CODCCUSTO,
            COMPL_SOLICITACAO.SAMF_CLI_QRCODE,
            COMPL_SOLICITACAO.SAMF_CLI_TAG,
            COMPL_SOLICITACAO.SAMF_VS_PISO,
            COMPL_SOLICITACAO.SAMF_CLI_PARADA,
            COMPL_SOLICITACAO.SAMF_CLI_BMOBS,
			COMPL_SOLICITACAO.SAMF_CLI_AREANV0 AS ID_SAMF_CLI_AREANV0,
            COMPL_SOLICITACAO.SAMF_CLI_AREANV1,
            COMPL_SOLICITACAO.SAMF_CLI_AREANV2,
			SAMF_ACESSO.ID AS ID_ENCARREGADO,
			SAMF_ACESSO.CODUSUARIO AS NOME_ENCARREGADO,
            AREANV0.NOME_AREA AS SAMF_CLI_AREANV0

            FROM TMOV AS TMOV_SOLICITACAO

            LEFT JOIN TMOVCOMPL AS COMPL_SOLICITACAO ON COMPL_SOLICITACAO.IDMOV = TMOV_SOLICITACAO.IDMOV AND COMPL_SOLICITACAO.CODCOLIGADA = TMOV_SOLICITACAO.CODCOLIGADA 
			LEFT JOIN TMOVRELAC AS RELAC_SOLICITACAO ON RELAC_SOLICITACAO.CODCOLORIGEM = TMOV_SOLICITACAO.CODCOLIGADA AND RELAC_SOLICITACAO.IDMOVORIGEM = TMOV_SOLICITACAO.IDMOV             
         
			LEFT JOIN TMOV AS TMOV_VISITA ON TMOV_VISITA.IDMOV = RELAC_SOLICITACAO.IDMOVDESTINO 

			LEFT JOIN TMOVCOMPL AS COMPL_VISITA ON COMPL_VISITA.CODCOLIGADA = TMOV_VISITA.CODCOLIGADA AND COMPL_VISITA.IDMOV = TMOV_VISITA.IDMOV 

			LEFT JOIN SAMF_ACESSO ON SAMF_ACESSO.CODCCUSTO = TMOV_SOLICITACAO.CODCCUSTO AND SAMF_ACESSO.ID = COMPL_SOLICITACAO.SAMF_ENCARREGADO
			
			LEFT JOIN SAMF_CLI_AREAS AS AREANV0 ON CAST(AREANV0.ID AS VARCHAR) = COMPL_SOLICITACAO.SAMF_CLI_AREANV0 
			
			LEFT JOIN SAMF_CLI_AREAS AS AREANV1	ON CAST(AREANV1.ID AS VARCHAR) = COMPL_SOLICITACAO.SAMF_CLI_AREANV1

			WHERE 
            
			TMOV_VISITA.CODTMV LIKE '1.1.41'
			AND TMOV_VISITA.STATUS IN ('A','B')
			AND TMOV_VISITA.CODCCUSTO = ?",[$CODCCUSTO]);
        
        return $query->getResultArray();
    }

    /* TRAZENDO OS ENCARREGADOS*/
    public function getEncarregados($CODCCUSTO)
    {
        $query = $this->db->query("SELECT ID, CODUSUARIO FROM SAMF_ACESSO WHERE ENCARREGADO = 1 AND CODCCUSTO = ?" ,[$CODCCUSTO]);
        
        return $query->getResultArray();
    }

    

    


    public function get_all_sis_equipamentos()
    {
        $this->where('saldoimplantado >', 0);
        $this->orderBy('id', 'desc');
        return $this->findAll();
    }

    public function logar_cliente($email, $senha)
    {
        return $this->db->table('sm_usuario')
            ->select('*')
            ->where('Email', $email)
            ->where('Senha', $senha)
            ->get()
            ->getRowArray();
    }

    // CONTANDO QUANTOS ANDAIMES ESTÃO CADASTRADOS. PENDENTE DE NÍVEL DE ACESSO
    public function cont_all_andaimes()
    {        
        return $this->db->table('sm_sis_andaime')->countAll();
    }

    public function contar_estoque_por_obra($idUsuario)
    {
        return $this->db->table('sm_sis_andaime')
            ->join('sm_acesso', 'sm_acesso.idobra = sm_sis_andaime.obra')
            ->where('sm_acesso.idusuario', $idUsuario)
            ->countAllResults();
    }

    public function buscar_contexto_usuario($idUsuario)
    {
        return $this->db->table('sm_usuario')
            ->select('CONTEXTO')
            ->where('idCliente', $idUsuario)
            ->get()
            ->getRow();
    }

    public function buscar_info_usuario_top($idUsuario)
    {
        return $this->db->table('sm_usuario u')
            ->select('f.CODSITUACAO, u.CONTEXTO, u.Nome as Nomecliente, p.NOME')
            ->join('PPESSOA p', 'u.cpf = p.CPF')
            ->join('PFUNC f', 'p.codigo = f.codpessoa')
            ->where('u.idCliente', $idUsuario)
            ->get()
            ->getRow();
    }

    public function buscar_info_usuario_cliente($idUsuario)
    {
        return $this->db->table('sm_usuario')
            ->select('CONTEXTO, Nome, Email')
            ->where('idCliente', $idUsuario)
            ->get()
            ->getRow();
    }

    public function dados_usuario_logado($idUsuario)
    {
        return $this->db->table('sm_sis_andaime')
            ->join('sm_acesso', 'sm_acesso.idobra = sm_sis_andaime.obra')
            ->where('sm_acesso.idusuario', $idUsuario)
            ->countAllResults();
    }

    public function listar_obras($idUsuario)
    {
        return $this->db->table('sm_obra')
            ->join('sm_acesso', 'sm_acesso.idobra = sm_obra.id')
            ->where('sm_acesso.idusuario', $idUsuario)
            ->get()
            ->getResult();
    }

    public function cont_all_areas()
    {
        return $this->countAllResults('sm_sis_area');
    }

    public function cont_all_montadores()
    {
        return $this->countAllResults('sm_sis_equipe');
    }

    public function get_all_equipamentos()
    {
        $this->orderBy('equipamento');
        return $this->findAll();
    }

    public function saldoemuso()
    {
        return $this->query("SELECT 
            SUM(SALDOEMUSO) AS EMUSO,
            SUM(SALDOFISICO) AS FISICO,
            SUM(SALDOIMPLANTADO) AS IMPLANTADO
            FROM sm_sis_equipamentos")
            ->getRow();
    }

    // DADOS DO DASHBOARD
    public function getPrevFaturamentoHoras($CODCCUSTO)
    {
        $query = $this->db->query("
        SELECT

        DBO.FN_CONVMIN(ISNULL(SEMANA, 0)) AS TOTAL_7DIAS,
        DBO.FN_CONVMIN(ISNULL(MESATUAL, 0)) AS TOTAL_MES,
		DBO.FN_CONVMIN(ISNULL(PREVISAOMESATUAL, 0)) AS TOTAL_PREVISAOMES,
		DBO.FN_CONVMIN(ISNULL(PENDENTEAPROVACAO, 0)) AS TOTAL_PENDENTECLIENTE,
		DBO.FN_CONVMIN(ISNULL(TOTALGERALAPROVADOS, 0)) AS TOTALGERALAPROVADOS

        FROM
        (
        SELECT 
            SUM(CASE 
                WHEN TMOV.DATAEXTRA1 >= DATEADD(DAY, -7, GETDATE()) AND TMOV.STATUS = 'Q' THEN TITMMOV.QUANTIDADE 
                ELSE 0 
            END) AS SEMANA,
            SUM(CASE 
                WHEN YEAR(TMOV.DATAEXTRA1) = YEAR(GETDATE()) AND MONTH(TMOV.DATAEXTRA1) = MONTH(GETDATE()) AND TMOV.STATUS = 'Q' THEN TITMMOV.QUANTIDADE 
                ELSE 0 
            END) AS MESATUAL,
			SUM(CASE 
                WHEN YEAR(TMOV.DATAEXTRA1) = YEAR(GETDATE()) AND MONTH(TMOV.DATAEXTRA1) = MONTH(GETDATE()) AND TMOV.STATUS NOT IN ('C','B','A') THEN TITMMOV.QUANTIDADE 
                ELSE 0 
            END) AS PREVISAOMESATUAL,
			SUM(CASE 
                WHEN TMOV.STATUS IN ('F','R') THEN TITMMOV.QUANTIDADE 
                ELSE 0 
            END) AS PENDENTEAPROVACAO,
			SUM(CASE 
                WHEN TMOV.STATUS IN ('Q') THEN TITMMOV.QUANTIDADE 
                ELSE 0 
            END) AS TOTALGERALAPROVADOS
        FROM TITMMOV
        LEFT JOIN TMOV ON TMOV.IDMOV = TITMMOV.IDMOV AND TMOV.CODCOLIGADA = TITMMOV.CODCOLIGADA 
        WHERE TMOV.CODCCUSTO = ? AND CODTMV = '1.1.52'
        --AND TMOV.STATUS = 'Q'
        ) AS RESULT1", [$CODCCUSTO]);
        
        return $query->getRow();
    }

    public function getPrevFaturamentoHorasGrf($CODCCUSTO)
    {
        $query = $this->db->query("
        SELECT
	DBO.FN_CONVMIN(ISNULL(MESATUAL, 0)) AS TOTAL_MES
    FROM(
        SELECT 
            SUM(CASE 
                WHEN YEAR(TMOV.DATAEXTRA1) = YEAR(GETDATE()) AND MONTH(TMOV.DATAEXTRA1) = MONTH(GETDATE()) THEN TITMMOV.QUANTIDADE 
                ELSE 0 
            END) AS MESATUAL
        FROM TITMMOV
        LEFT JOIN TMOV ON TMOV.IDMOV = TITMMOV.IDMOV AND TMOV.CODCOLIGADA = TITMMOV.CODCOLIGADA 
        WHERE TMOV.CODCCUSTO = ? AND CODTMV = '1.1.52'
        AND TMOV.STATUS = 'F'
        GROUP BY DATAEXTRA1
    ) AS RESULT1", [$CODCCUSTO]);
        
        return $query->getResultArray();
    }

    

    // XML ESOCIAL
    public function getXMLeSocial_OK()
    {
        $builder = $this->db->table('PESOCIALEVENTOS');
        $builder->select('MENSAGEM, CODPESSOA');
        $builder->limit(1);
        
        $query = $builder->get();
        
        return $query->getRow();
    }





    public function getXMLeSocial_1200SAMARCO($ANOCOMP, $MESCOMP){
        $query = $this->db->query("
        SELECT  
        TIPOEVENTO, 
        MENSAGEM, 
        PESOCIALEVENTOS.CODPESSOA, 
        PPESSOA.NOME, 
        PFUNC.CODSECAO,
        PFUNC.MATRICULAESOCIAL,
        PSECAO.DESCRICAO

    FROM PESOCIALEVENTOS 
    LEFT JOIN (
        SELECT CODCOLIGADA, CODPESSOA, CODSECAO, DATAADMISSAO, MATRICULAESOCIAL,
            ROW_NUMBER() OVER (PARTITION BY CODCOLIGADA, CODPESSOA ORDER BY DATAADMISSAO DESC) AS REFERENCIA
        FROM PFUNC
    ) AS PFUNC ON PESOCIALEVENTOS.CODCOLIGADA = PFUNC.CODCOLIGADA 
            AND PESOCIALEVENTOS.CODPESSOA = PFUNC.CODPESSOA 
            AND PFUNC.REFERENCIA = 1
    LEFT JOIN PPESSOA (NOLOCK) ON PESOCIALEVENTOS.CODPESSOA = PPESSOA.CODIGO
    LEFT JOIN PSECAO (NOLOCK) ON PFUNC.CODCOLIGADA = PSECAO.CODCOLIGADA 
                            AND PFUNC.CODSECAO = PSECAO.CODIGO
    WHERE 
        TIPOEVENTO = 'S-1200' 
        AND STATUS = '10' 
        AND ANOCOMP = ? 
        AND MESCOMP = ? 
        AND CODSECAO = '01.2.12.07'
        ", [$ANOCOMP, $MESCOMP]);
        
        return $query->getResultArray();
        // return $query->getRow();
    }

    public function getXMLeSocial_1200SAMARCORetorno($ANOCOMP, $MESCOMP){
        $query = $this->db->query("
        SELECT  
        TIPOEVENTO, 
        MENSAGEMRETORNO, 
        PESOCIALEVENTOS.CODPESSOA, 
        PPESSOA.NOME, 
        PFUNC.CODSECAO,
        PFUNC.MATRICULAESOCIAL,
        PSECAO.DESCRICAO

    FROM PESOCIALEVENTOS 
    LEFT JOIN (
        SELECT CODCOLIGADA, CODPESSOA, CODSECAO, DATAADMISSAO, MATRICULAESOCIAL,
            ROW_NUMBER() OVER (PARTITION BY CODCOLIGADA, CODPESSOA ORDER BY DATAADMISSAO DESC) AS REFERENCIA
        FROM PFUNC
    ) AS PFUNC ON PESOCIALEVENTOS.CODCOLIGADA = PFUNC.CODCOLIGADA 
            AND PESOCIALEVENTOS.CODPESSOA = PFUNC.CODPESSOA 
            AND PFUNC.REFERENCIA = 1
    LEFT JOIN PPESSOA (NOLOCK) ON PESOCIALEVENTOS.CODPESSOA = PPESSOA.CODIGO
    LEFT JOIN PSECAO (NOLOCK) ON PFUNC.CODCOLIGADA = PSECAO.CODCOLIGADA 
                            AND PFUNC.CODSECAO = PSECAO.CODIGO
    WHERE 
        TIPOEVENTO = 'S-1200' 
        AND STATUS = '10' 
        AND ANOCOMP = ? 
        AND MESCOMP = ? 
        AND CODSECAO = '01.2.12.07'
        ", [$ANOCOMP, $MESCOMP]);
        
        return $query->getResultArray();
        // return $query->getRow();
    }

    public function getXMLeSocial_Admissao_OLD($MESCOMP, $ANOCOMP){
        $query = $this->db->query("
        SELECT
        PESOCIALEVENTOS.TIPOEVENTO,
        PESOCIALEVENTOS.MENSAGEM,
        PESOCIALEVENTOS.DATAGERACAO,
        PESOCIALEVENTOS.DATAENVIO,
        PFUNC.NOME,
        PFUNC.CHAPA,
        PFUNC.CODSECAO,
        PSECAO.DESCRICAO AS DESCRICAO
        
        FROM	PESOCIALEVENTOS

                INNER JOIN
                PFUNC (NOLOCK)
                ON	PESOCIALEVENTOS.CODCOLIGADA = PFUNC.CODCOLIGADA
                AND	PESOCIALEVENTOS.CHAPA = PFUNC.CHAPA

                INNER JOIN
                PPESSOA (NOLOCK)
                ON	PFUNC.CODPESSOA = PPESSOA.CODIGO

                INNER JOIN
                PSECAO (NOLOCK)
                ON	PFUNC.CODCOLIGADA = PSECAO.CODCOLIGADA
                AND	PFUNC.CODSECAO = PSECAO.CODIGO

        WHERE	
                PESOCIALEVENTOS.CODCOLIGADA = 1
                AND	PESOCIALEVENTOS.TIPOEVENTO IN ('S-2200','S-2220','S-2240')
                AND PESOCIALEVENTOS.STATUS = '10' 
                AND (MONTH(PFUNC.DATAADMISSAO) = ? AND YEAR(PFUNC.DATAADMISSAO) = ?)
        ", [$MESCOMP, $ANOCOMP]);
        
        return $query->getResultArray();
        // return $query->getRow();
    }


    public function getXMLeSocial_Admissao($MESCOMP, $ANOCOMP){
        $sql = "
        SELECT
            PESOCIALEVENTOS.TIPOEVENTO,
            PESOCIALEVENTOS.MENSAGEM,
            PESOCIALEVENTOS.DATAGERACAO,
            PESOCIALEVENTOS.DATAENVIO,
            PFUNC.NOME,
            PFUNC.CHAPA,
            PFUNC.CODSECAO,
            PSECAO.DESCRICAO AS DESCRICAO
        FROM
            PESOCIALEVENTOS
            INNER JOIN PFUNC 
                ON PESOCIALEVENTOS.CODCOLIGADA = PFUNC.CODCOLIGADA
                AND PESOCIALEVENTOS.CHAPA = PFUNC.CHAPA
            INNER JOIN PPESSOA 
                ON PFUNC.CODPESSOA = PPESSOA.CODIGO
            INNER JOIN PSECAO 
                ON PFUNC.CODCOLIGADA = PSECAO.CODCOLIGADA
                AND PFUNC.CODSECAO = PSECAO.CODIGO
        WHERE
            PESOCIALEVENTOS.CODCOLIGADA = 1
            AND PESOCIALEVENTOS.TIPOEVENTO IN ('S-2200', 'S-2220', 'S-2240', 'S-2240')
            AND PESOCIALEVENTOS.STATUS = '10'
            AND MONTH(PFUNC.DATAADMISSAO) = ?
            AND YEAR(PFUNC.DATAADMISSAO) = ?
        ";
    
        $query = $this->db->query($sql, [$MESCOMP, $ANOCOMP]);
        return $query->getResultArray();
    }

    

    public function getXMLeSocial_Rescisao($MESCOMP, $ANOCOMP){
        $sql = "
        SELECT
            PESOCIALEVENTOS.TIPOEVENTO,
            PESOCIALEVENTOS.MENSAGEM,
            PESOCIALEVENTOS.DATAGERACAO,
            PESOCIALEVENTOS.DATAENVIO,
            PFUNC.NOME,
            PFUNC.CHAPA,
            PFUNC.CODSECAO,
            PSECAO.DESCRICAO AS DESCRICAO
        FROM
            PESOCIALEVENTOS
            INNER JOIN PFUNC 
                ON PESOCIALEVENTOS.CODCOLIGADA = PFUNC.CODCOLIGADA
                AND PESOCIALEVENTOS.CHAPA = PFUNC.CHAPA
            INNER JOIN PPESSOA 
                ON PFUNC.CODPESSOA = PPESSOA.CODIGO
            INNER JOIN PSECAO 
                ON PFUNC.CODCOLIGADA = PSECAO.CODCOLIGADA
                AND PFUNC.CODSECAO = PSECAO.CODIGO
        WHERE
            PESOCIALEVENTOS.CODCOLIGADA = 1
            AND PESOCIALEVENTOS.TIPOEVENTO IN ('S-2299')
            AND PESOCIALEVENTOS.STATUS = '10'
            AND MONTH(PFUNC.DATADEMISSAO) = ?
            AND YEAR(PFUNC.DATADEMISSAO) = ?
        ";
    
        $query = $this->db->query($sql, [$MESCOMP, $ANOCOMP]);
        return $query->getResultArray();
    }


    
    // ABAIXO XML DE FÉRIAS 
    public function getXMLeSocial_Ferias($MESCOMP, $ANOCOMP){
        $sql = "
        SELECT
            PESOCIALEVENTOS.TIPOEVENTO,
            PESOCIALEVENTOS.MENSAGEM,
            PESOCIALEVENTOS.DATAGERACAO,
            PESOCIALEVENTOS.DATAENVIO,
            PFUNC.NOME,
            PFUNC.CHAPA,
            PFUNC.CODSECAO,
            PSECAO.DESCRICAO AS DESCRICAO
        FROM
            PESOCIALEVENTOS
            INNER JOIN PFUNC 
                ON PESOCIALEVENTOS.CODCOLIGADA = PFUNC.CODCOLIGADA
                AND PESOCIALEVENTOS.CHAPA = PFUNC.CHAPA
            INNER JOIN PPESSOA 
                ON PFUNC.CODPESSOA = PPESSOA.CODIGO
            INNER JOIN PSECAO 
                ON PFUNC.CODCOLIGADA = PSECAO.CODCOLIGADA
                AND PFUNC.CODSECAO = PSECAO.CODIGO

            LEFT JOIN PFUFERIASPER
                ON PFUFERIASPER.CHAPA = PFUNC.CHAPA AND PFUFERIASPER.CODCOLIGADA = PFUNC.CODCOLIGADA

        WHERE
            PESOCIALEVENTOS.CODCOLIGADA = 1
            AND PESOCIALEVENTOS.TIPOEVENTO IN ('S-2230')
            AND PESOCIALEVENTOS.STATUS = '10'
            AND MONTH(PFUFERIASPER.DATAINICIO) = ?
            AND YEAR(PFUFERIASPER.DATAINICIO) = ?
        ";

        $query = $this->db->query($sql, [$MESCOMP, $ANOCOMP]);
        return $query->getResultArray();
    }


    // ABAIXO XML 1020 SAMARCO 
    public function getXMLeSocial_LotacaoSamarco($MESCOMP, $ANOCOMP){
    $sql = "
    select * from PESOCIALEVENTOSCOMPL where tipoevento = 's-1020' and CODLOTACAOTRIBUTARIA = 'C01S000032' AND ANOCOMP = 2020
    ";

    $query = $this->db->query($sql, [$MESCOMP, $ANOCOMP]);
    return $query->getResultArray();
}


    // ABAIXO XML 1020 SAMARCO 
    public function getXMLeSocialRetorno5002Samarco($MESCOMP, $ANOCOMP){
    $sql = "
    SELECT  
            TIPOEVENTO, 
            MENSAGEMRETORNO, 
            PESOCIALEVENTOS.CODPESSOA, 
            PESOCIALEVENTOS.ANOCOMP,
            PESOCIALEVENTOS.MESCOMP,
            PPESSOA.NOME, 
            PFUNC.CODSECAO,
            PFUNC.MATRICULAESOCIAL,
            PSECAO.DESCRICAO

        FROM PESOCIALEVENTOS 
        LEFT JOIN (
            SELECT CODCOLIGADA, CODPESSOA, CODSECAO, DATAADMISSAO, MATRICULAESOCIAL,
                ROW_NUMBER() OVER (PARTITION BY CODCOLIGADA, CODPESSOA ORDER BY DATAADMISSAO DESC) AS REFERENCIA
            FROM PFUNC
        ) AS PFUNC ON PESOCIALEVENTOS.CODCOLIGADA = PFUNC.CODCOLIGADA 
                AND PESOCIALEVENTOS.CODPESSOA = PFUNC.CODPESSOA 
                AND PFUNC.REFERENCIA = 1
        LEFT JOIN PPESSOA (NOLOCK) ON PESOCIALEVENTOS.CODPESSOA = PPESSOA.CODIGO
        LEFT JOIN PSECAO (NOLOCK) ON PFUNC.CODCOLIGADA = PSECAO.CODCOLIGADA 
                                AND PFUNC.CODSECAO = PSECAO.CODIGO
        WHERE 
            TIPOEVENTO = 'S-1210' 
            AND STATUS = '10' 
            AND MESCOMP = ? 
            AND ANOCOMP = ?
            AND CODSECAO = '01.2.12.07'
    ";

    $query = $this->db->query($sql, [$MESCOMP, $ANOCOMP]);
    return $query->getResultArray();
    }


    // ABAIXO RETORNO 5001 5003 5002 DE TODOS MENOS SAMARCO  
    public function getXMLeSocial_1200VALE($MESCOMP, $ANOCOMP){
    $query = $this->db->query("
    SELECT  
        TIPOEVENTO, 
        MENSAGEMRETORNO, 
        PESOCIALEVENTOS.CODPESSOA, 
        PPESSOA.NOME, 
        PFUNC.CODSECAO,
        PFUNC.MATRICULAESOCIAL,
        PSECAO.DESCRICAO

    FROM PESOCIALEVENTOS 
    LEFT JOIN (
        SELECT CODCOLIGADA, CODPESSOA, CODSECAO, DATAADMISSAO, MATRICULAESOCIAL,
            ROW_NUMBER() OVER (PARTITION BY CODCOLIGADA, CODPESSOA ORDER BY DATAADMISSAO DESC) AS REFERENCIA
        FROM PFUNC
    ) AS PFUNC ON PESOCIALEVENTOS.CODCOLIGADA = PFUNC.CODCOLIGADA 
            AND PESOCIALEVENTOS.CODPESSOA = PFUNC.CODPESSOA 
            AND PFUNC.REFERENCIA = 1
    LEFT JOIN PPESSOA (NOLOCK) ON PESOCIALEVENTOS.CODPESSOA = PPESSOA.CODIGO
    LEFT JOIN PSECAO (NOLOCK) ON PFUNC.CODCOLIGADA = PSECAO.CODCOLIGADA 
                            AND PFUNC.CODSECAO = PSECAO.CODIGO
    WHERE 
        TIPOEVENTO IN ('S-1200') 
        AND STATUS = '10' 
        AND MESCOMP = ?
        AND ANOCOMP = ?
            AND CODSECAO IN (SELECT CODIGO FROM PSECAO WHERE DESCRICAO LIKE '%VALE%')
    ", [$ANOCOMP, $MESCOMP]);

    return $query->getResultArray();
    }


    public function getXMLeSocial_1200VALEFGTS($MESCOMP, $ANOCOMP){
        $query = $this->db->query("
        SELECT  
            TIPOEVENTO, 
            MENSAGEMRETORNO, 
            PESOCIALEVENTOS.CODPESSOA, 
            PPESSOA.NOME, 
            PFUNC.CODSECAO,
            PFUNC.MATRICULAESOCIAL,
            PSECAO.DESCRICAO
    
        FROM PESOCIALEVENTOS 
        LEFT JOIN (
            SELECT CODCOLIGADA, CODPESSOA, CODSECAO, DATAADMISSAO, MATRICULAESOCIAL,
                ROW_NUMBER() OVER (PARTITION BY CODCOLIGADA, CODPESSOA ORDER BY DATAADMISSAO DESC) AS REFERENCIA
            FROM PFUNC
        ) AS PFUNC ON PESOCIALEVENTOS.CODCOLIGADA = PFUNC.CODCOLIGADA 
                AND PESOCIALEVENTOS.CODPESSOA = PFUNC.CODPESSOA 
                AND PFUNC.REFERENCIA = 1
        LEFT JOIN PPESSOA (NOLOCK) ON PESOCIALEVENTOS.CODPESSOA = PPESSOA.CODIGO
        LEFT JOIN PSECAO (NOLOCK) ON PFUNC.CODCOLIGADA = PSECAO.CODCOLIGADA 
                                AND PFUNC.CODSECAO = PSECAO.CODIGO
        WHERE 
            TIPOEVENTO IN ('S-1210') 
            AND STATUS = '10' 
            AND MESCOMP = ?
            AND ANOCOMP = ?
                AND CODSECAO IN (SELECT CODIGO FROM PSECAO WHERE DESCRICAO LIKE '%VALE%')
        ", [$ANOCOMP, $MESCOMP]);
    
        return $query->getResultArray();
        }




        //TOTALIZADORES
        public function getXMLTotalizadores($MESCOMP, $ANOCOMP){
            $query = $this->db->query("
            SELECT  TOP 1
                TIPOEVENTO, 
                MENSAGEMRETORNO, 
                PESOCIALEVENTOS.DATAEVENTO,
                PESOCIALEVENTOS.CODPESSOA, 
                PPESSOA.NOME, 
                PFUNC.CODSECAO,
                PFUNC.MATRICULAESOCIAL,
                PSECAO.DESCRICAO

            FROM PESOCIALEVENTOS 
            LEFT JOIN (
                SELECT CODCOLIGADA, CODPESSOA, CODSECAO, DATAADMISSAO, MATRICULAESOCIAL,
                    ROW_NUMBER() OVER (PARTITION BY CODCOLIGADA, CODPESSOA ORDER BY DATAADMISSAO DESC) AS REFERENCIA
                FROM PFUNC
            ) AS PFUNC ON PESOCIALEVENTOS.CODCOLIGADA = PFUNC.CODCOLIGADA 
                    AND PESOCIALEVENTOS.CODPESSOA = PFUNC.CODPESSOA 
                    AND PFUNC.REFERENCIA = 1
            LEFT JOIN PPESSOA (NOLOCK) ON PESOCIALEVENTOS.CODPESSOA = PPESSOA.CODIGO
            LEFT JOIN PSECAO (NOLOCK) ON PFUNC.CODCOLIGADA = PSECAO.CODCOLIGADA 
                                    AND PFUNC.CODSECAO = PSECAO.CODIGO
            WHERE 
                TIPOEVENTO IN ('S-1299') 
                AND STATUS = '10' 
                AND ANOCOMP = ?
                AND MESCOMP = ?
                

                ORDER BY DATAEVENTO DESC
            ", [$ANOCOMP, $MESCOMP]);

            return $query->getResultArray();
            }


            //TOTALIZADORES
            public function get1010complementar(){
            $query = $this->db->query("
            SELECT  
            TIPOEVENTO, 
            CODRUBRICA,
            MENSAGEM, 
            PESOCIALEVENTOSCOMPL.DATAEVENTO
                        

            FROM PESOCIALEVENTOSCOMPL 
                        
            WHERE 
            TIPOEVENTO IN ('S-1010') 
            AND STATUS = '10' 
            AND CODCOLIGADA = 1
                            

            ORDER BY DATAEVENTO DESC
            ", []);

            return $query->getResultArray();
            }


                 //TOTALIZADORES
        public function get1010(){
            $query = $this->db->query("
            SELECT  
            TIPOEVENTO, 
            MENSAGEM, 
            CODRUBRICA,
            PESOCIALEVENTOS.DATAEVENTO
                        

            FROM PESOCIALEVENTOS 
                        
            WHERE 
            TIPOEVENTO IN ('S-1010') 
            AND STATUS = '10' 
            AND CODCOLIGADA = 1
                            

            ORDER BY DATAEVENTO DESC
            ", []);

            return $query->getResultArray();
            }

            
            public function getXMLesocialAfastamentoSamarco($MESCOMP, $ANOCOMP){
                $query = $this->db->query("
                SELECT		PESOCIALEVENTOS.TPOPERACAO,
                PESOCIALEVENTOS.TIPOEVENTO,
                PESOCIALEVENTOS.MENSAGEM,
                PESOCIALEVENTOS.DATAGERACAO,
                PESOCIALEVENTOS.DATAENVIO,
                PFUNC.NOME,
                PFUNC.CHAPA,
                PFUNC.CODSECAO,
                PSECAO.DESCRICAO AS DESCRICAO
            FROM
                PESOCIALEVENTOS
                INNER JOIN PFUNC 
                    ON PESOCIALEVENTOS.CODCOLIGADA = PFUNC.CODCOLIGADA
                    AND PESOCIALEVENTOS.CHAPA = PFUNC.CHAPA
                INNER JOIN PPESSOA 
                    ON PFUNC.CODPESSOA = PPESSOA.CODIGO
                INNER JOIN PSECAO 
                    ON PFUNC.CODCOLIGADA = PSECAO.CODCOLIGADA
                    AND PFUNC.CODSECAO = PSECAO.CODIGO

                LEFT JOIN PFUFERIASPER
                    ON PFUFERIASPER.CHAPA = PFUNC.CHAPA AND PFUFERIASPER.CODCOLIGADA = PFUNC.CODCOLIGADA

            WHERE
                PESOCIALEVENTOS.CODCOLIGADA = 1
                AND PESOCIALEVENTOS.TIPOEVENTO IN ('S-2230')
                AND PESOCIALEVENTOS.STATUS = '10'
                AND MONTH(PESOCIALEVENTOS.DATAEVENTO) = ?
                AND YEAR(PESOCIALEVENTOS.DATAEVENTO) = ?
                AND CODSECAO = '01.2.12.07'
                AND AFASTAMENTOFERIAS = 0
                ", [$MESCOMP,$ANOCOMP]);
            
                return $query->getResultArray();
                }
            



       public function getReferenciasAndaimeRDO ($CODCCUSTO){
            $query = $this->db->query(
            "SELECT

            TMOV.CODCOLIGADA,
            TMOV.IDMOV AS IDMOV_AND,
            TMOV_GV.IDMOV AS IDMOV_GV,
            TMOV_SV.IDMOV AS IDMOV_SV,
            CASE
                WHEN TMOV.STATUS = 'A' THEN 'INICIAR'
                WHEN TMOV.STATUS = 'G' THEN 'EM MONTAGEM'
                WHEN TMOV.STATUS = 'F' THEN 'MONTADO'
                WHEN TMOV.STATUS = 'C' THEN 'CANCELADO'
                ELSE 'DESCONHECIDO'
            END AS STATUS_AND,
            TMOV.DATAEXTRA1 AS DATA_MONTAGEM_AND,
            TMOV.DATAEXTRA2 AS DATA_DESMONTAGEM_AND,
            TMOVCOMPL_SV.SAMF_CLI_AREANV0,
            TMOVCOMPL_SV.SAMF_CLI_AREANV1,
            TMOVCOMPL_SV.SAMF_CLI_AREANV2 AS LOCAL,
            TMOVCOMPL_SV.SAMF_CLI_OS,
            TMOVCOMPL_SV.SAMF_CLI_TAG,
            TMOVCOMPL_SV.SAMF_CLI_QRCODE

            FROM	TMOV (NOLOCK)

            LEFT JOIN
            TITMMOV
            ON	TMOV.CODCOLIGADA = TITMMOV.CODCOLIGADA
            AND TMOV.IDMOV = TITMMOV.IDMOV
    
            LEFT JOIN
            TITMMOVCOMPL
            ON	TITMMOV.CODCOLIGADA = TITMMOVCOMPL.CODCOLIGADA
            AND TITMMOV.IDMOV = TITMMOVCOMPL.IDMOV
            AND TITMMOV.NSEQITMMOV = TITMMOVCOMPL.NSEQITMMOV
    
            LEFT JOIN
            TMOVCOMPL
            ON	TMOV.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA
            AND	TMOV.IDMOV = TMOVCOMPL.IDMOV
            LEFT JOIN
            
            TMOVRELAC
            ON	TMOV.CODCOLIGADA = TMOVRELAC.CODCOLDESTINO
            AND	TMOV.IDMOV = TMOVRELAC.IDMOVDESTINO
            
            LEFT JOIN
            TMOV AS TMOV_PJ
            ON	TMOV_PJ.CODCOLIGADA = TMOVRELAC.CODCOLORIGEM
            AND TMOV_PJ.IDMOV = TMOVRELAC.IDMOVORIGEM
            
            LEFT JOIN
            TMOVCOMPL AS TMOVCOMPL_PJ
            ON	TMOV_PJ.CODCOLIGADA = TMOVCOMPL_PJ.CODCOLIGADA
            AND	TMOV_PJ.IDMOV = TMOVCOMPL_PJ.IDMOV
            LEFT JOIN
            
            TMOVRELAC AS TMOVRELAC_PJ
            ON	TMOV_PJ.CODCOLIGADA = TMOVRELAC_PJ.CODCOLDESTINO
            AND	TMOV_PJ.IDMOV = TMOVRELAC_PJ.IDMOVDESTINO
            LEFT JOIN
            
            TMOV AS TMOV_GV
            ON	TMOV_GV.CODCOLIGADA = TMOVRELAC_PJ.CODCOLORIGEM
            AND TMOV_GV.IDMOV = TMOVRELAC_PJ.IDMOVORIGEM
            
            LEFT JOIN
            TMOVCOMPL AS TMOVCOMPL_GV
            ON	TMOV_GV.CODCOLIGADA = TMOVCOMPL_GV.CODCOLIGADA
            AND	TMOV_GV.IDMOV = TMOVCOMPL_GV.IDMOV
    
            LEFT JOIN
            TMOVRELAC AS TMOVRELAC_SV
            ON	TMOV_GV.CODCOLIGADA = TMOVRELAC_SV.CODCOLDESTINO
            AND TMOV_GV.IDMOV = TMOVRELAC_SV.IDMOVDESTINO
    
            LEFT JOIN
            TMOV AS TMOV_SV
            ON	TMOVRELAC_SV.CODCOLORIGEM = TMOV_SV.CODCOLIGADA	
            AND	TMOVRELAC_SV.IDMOVORIGEM = TMOV_SV.IDMOV	
    
            LEFT JOIN
            TMOVCOMPL AS TMOVCOMPL_SV
            ON	TMOV_SV.CODCOLIGADA = TMOVCOMPL_SV.CODCOLIGADA
            AND TMOV_SV.IDMOV = TMOVCOMPL_SV.IDMOV

            LEFT JOIN
            SAMF_ACESSO
            ON	TMOVCOMPL_SV.SAMF_ENCARREGADO = SAMF_ACESSO.ID

            WHERE	TMOV.CODCOLIGADA = 1
            AND		TMOV.CODTMV = '1.1.43'
            AND		TMOV.CODCCUSTO = ?", [$CODCCUSTO]);
            
            return $query->getResultArray();
            }


                    
        public function reprovadosClienteDatatable($CODCCUSTO)
        {
        $query = $this->db->query("
        SELECT  
            
            SAMF_COMENTARIOS.COMENTARIO,
            TMOV.IDMOV,
            TMOV.STATUS AS STATUS_ATUAL,
            TMOV.NUMEROMOV AS NUMERO_RDO,
            FORMAT(TMOV.DATAEXTRA1, 'dd/MM/yyyy') AS DATA_REFERENCIA,
            SAMF_USUARIO.NOME,
            SAMF_COMENTARIOS.RECCREATEDON AS REPROVADO_EM,
            SAMF_COMENTARIOS.RECCREATEDBY AS REPROVADO_POR

        FROM SAMF_COMENTARIOS 

        LEFT JOIN TMOV ON SAMF_COMENTARIOS.IDMOV = TMOV.IDMOV 
        AND SAMF_COMENTARIOS.CODCOLIGADA = TMOV.CODCOLIGADA
        AND TMOV.CODCCUSTO = SAMF_COMENTARIOS.CODCCUSTO 
        
        LEFT JOIN SAMF_ACESSO ON SAMF_ACESSO.CODUSUARIO = SAMF_COMENTARIOS.RECCREATEDBY 
        AND SAMF_ACESSO.CODCOLIGADA = SAMF_COMENTARIOS.CODCOLIGADA 

        LEFT JOIN SAMF_USUARIO ON SAMF_USUARIO.USUARIO = SAMF_ACESSO.CODUSUARIO 

        WHERE 
        SAMF_COMENTARIOS.CODCCUSTO = ?
        AND TMOV.STATUS NOT IN ('R','F','Q','C')
        AND SAMF_USUARIO.CLIENTE = 1
        AND SAMF_COMENTARIOS.COMENTARIO NOT LIKE '%INFORMAÇÃO AUTOMÁTICA%'
        ORDER BY TMOV.DATAEXTRA1 DESC", [$CODCCUSTO]);
            
            return $query->getResultArray();
        }

    
    // LISTANDO FUNCIONÁRIOS PARA ADICIONAR COMO USUÁRIO 
    public function funcionariosdatatable()
    {
    $query = $this->db->query("
    SELECT 

    PPESSOA.NOME, 	
    PFUNC.CHAPA,	
    LEFT(PPESSOA.NOME, CHARINDEX(' ', PPESSOA.NOME + ' ') - 1) + '.' + CHAPA AS USUARIO,
    PPESSOA.CPF AS CPF,
	CONVERT(VARCHAR(32), HASHBYTES('MD5', LOWER(CONVERT(VARCHAR(255), PPESSOA.CPF))), 2) AS SENHA,
	LOWER(LEFT(PPESSOA.NOME, CHARINDEX(' ', PPESSOA.NOME + ' ') - 1) + '.' + CHAPA + '@topandaimes.com.br') AS EMAIL,
	PFUNC.CODFUNCAO,
	PFUNCAO.NOME AS NOME_FUNCAO

    FROM PFUNC

        LEFT JOIN PPESSOA ON PFUNC.CODPESSOA = PPESSOA.CODIGO 
        LEFT JOIN SAMF_USUARIO ON SAMF_USUARIO.CPF = PPESSOA.CPF
        LEFT JOIN PFUNCAO ON PFUNCAO.CODIGO = PFUNC.CODFUNCAO AND PFUNCAO.CODCOLIGADA = PFUNC.CODCOLIGADA 

    WHERE PFUNC.CODSITUACAO <> 'D'
    AND SAMF_USUARIO.CPF IS NULL

    ORDER BY NOME ");
        
        return $query->getResultArray();
    }

    // LISTANDO FUNCIONÁRIOS JÁ ADICIONADOS
    public function usuariosdatatable($CODCCUSTO)
    {
    $query = $this->db->query("
    SELECT 

	NOME,
	USUARIO,
	CODCCUSTO,
	ATIVO,
	CLIENTE,
	EMAIL,
	ENCARREGADO,
	PLANEJADOR,
	GERENTE,
	COORDENADOR,
	APROVA_RDO_NV1,
	APROVA_RDO_NV2

    FROM SAMF_USUARIO

        LEFT JOIN 
        SAMF_ACESSO ON	
        SAMF_USUARIO.USUARIO = SAMF_ACESSO.CODUSUARIO

    WHERE CODCCUSTO = ?
    AND CODCOLIGADA = 1", [$CODCCUSTO]);
        
        return $query->getResultArray();
    }


    // TRAZENDO O LOG DE AÇÕES PARA DASHBOARD 
    public function logAcoesObra($CODCCUSTO)
    {
    $query = $this->db->query("
    SELECT TOP 30
    ROTINA,
    RECCREATEDBY,
    LEFT(CONVERT(VARCHAR, RECCREATEDON, 120), 16) AS EXECUTADO_EM 
    FROM SAMF_LOGS
    WHERE 
        CODCCUSTO = ?
    ORDER BY RECCREATEDON DESC", [$CODCCUSTO]);
        
        return $query->getResultArray();
    }

    public function logAcoesObraCompleto()
    {
    $query = $this->db->query("
    SELECT TOP 500
    ROTINA,
    RECCREATEDBY,
    LEFT(CONVERT(VARCHAR, RECCREATEDON, 120), 16) AS EXECUTADO_EM,
    OBSERVACOES,
    CODCCUSTO
    FROM SAMF_LOGS
    
    ORDER BY RECCREATEDON DESC", []);
        
        return $query->getResultArray();
    }




// ANÁLISES
public function totalizadorAreasNexa(){
    $query = $this->db->query("
     
SELECT
	
	--TMOVCOMPL.SAMF_MTG_MTLINEAR AS VOLUME_LINEAR,
	--CONVERT(INT, TMOVCOMPL.SAMF_MTG_MTLINEAR) AS VOLUME_LINEAR,
	--SUM(CAST(TMOVCOMPL.SAMF_MTG_MTLINEAR AS DECIMAL(10,2))) AS VOLUME_LINEAR,
	SUM(TRY_CAST(TMOVCOMPL.SAMF_MTG_MTLINEAR AS DECIMAL(10,2))) AS VOLUME_LINEAR,
	SAMF_CLI_AREAS.METRAGEM_LIMITE - SUM(TRY_CAST(TMOVCOMPL.SAMF_MTG_MTLINEAR AS DECIMAL(10,2))) AS SALDO,
	TMOVCOMPL_SV.SAMF_CLI_AREANV1,
	SAMF_CLI_AREAS.NOME_AREA,
	SAMF_CLI_AREAS.METRAGEM_LIMITE
	
FROM	TMOV (NOLOCK)

		LEFT JOIN
		TITMMOV
		ON	TMOV.CODCOLIGADA = TITMMOV.CODCOLIGADA
		AND TMOV.IDMOV = TITMMOV.IDMOV
 
		LEFT JOIN
		TITMMOVCOMPL
		ON	TITMMOV.CODCOLIGADA = TITMMOVCOMPL.CODCOLIGADA
		AND TITMMOV.IDMOV = TITMMOVCOMPL.IDMOV
		AND TITMMOV.NSEQITMMOV = TITMMOVCOMPL.NSEQITMMOV
 
		LEFT JOIN
		TMOVCOMPL
		ON	TMOV.CODCOLIGADA = TMOVCOMPL.CODCOLIGADA
		AND	TMOV.IDMOV = TMOVCOMPL.IDMOV
		LEFT JOIN
		
		TMOVRELAC
		ON	TMOV.CODCOLIGADA = TMOVRELAC.CODCOLDESTINO
		AND	TMOV.IDMOV = TMOVRELAC.IDMOVDESTINO
		
		LEFT JOIN
		TMOV AS TMOV_PJ
		ON	TMOV_PJ.CODCOLIGADA = TMOVRELAC.CODCOLORIGEM
		AND TMOV_PJ.IDMOV = TMOVRELAC.IDMOVORIGEM
		
		LEFT JOIN
		TMOVCOMPL AS TMOVCOMPL_PJ
		ON	TMOV_PJ.CODCOLIGADA = TMOVCOMPL_PJ.CODCOLIGADA
		AND	TMOV_PJ.IDMOV = TMOVCOMPL_PJ.IDMOV
		LEFT JOIN
		
		TMOVRELAC AS TMOVRELAC_PJ
		ON	TMOV_PJ.CODCOLIGADA = TMOVRELAC_PJ.CODCOLDESTINO
		AND	TMOV_PJ.IDMOV = TMOVRELAC_PJ.IDMOVDESTINO
		LEFT JOIN
		
		TMOV AS TMOV_GV
		ON	TMOV_GV.CODCOLIGADA = TMOVRELAC_PJ.CODCOLORIGEM
		AND TMOV_GV.IDMOV = TMOVRELAC_PJ.IDMOVORIGEM
		
		LEFT JOIN
		TMOVCOMPL AS TMOVCOMPL_GV
		ON	TMOV_GV.CODCOLIGADA = TMOVCOMPL_GV.CODCOLIGADA
		AND	TMOV_GV.IDMOV = TMOVCOMPL_GV.IDMOV
 
		LEFT JOIN
		TMOVRELAC AS TMOVRELAC_SV
		ON	TMOV_GV.CODCOLIGADA = TMOVRELAC_SV.CODCOLDESTINO
		AND TMOV_GV.IDMOV = TMOVRELAC_SV.IDMOVDESTINO
 
		LEFT JOIN
		TMOV AS TMOV_SV
		ON	TMOVRELAC_SV.CODCOLORIGEM = TMOV_SV.CODCOLIGADA	
		AND	TMOVRELAC_SV.IDMOVORIGEM = TMOV_SV.IDMOV	
 
		LEFT JOIN
		TMOVCOMPL AS TMOVCOMPL_SV
		ON	TMOV_SV.CODCOLIGADA = TMOVCOMPL_SV.CODCOLIGADA
		AND TMOV_SV.IDMOV = TMOVCOMPL_SV.IDMOV

		LEFT JOIN
		SAMF_ACESSO
		ON	TMOVCOMPL_SV.SAMF_ENCARREGADO = SAMF_ACESSO.ID

		LEFT JOIN SAMF_CLI_AREAS
    ON SAMF_CLI_AREAS.ID = TRY_CAST(TMOVCOMPL_SV.SAMF_CLI_AREANV1 AS INT)

    WHERE	TMOV.CODCOLIGADA = 1
    AND		TMOV.CODTMV = '1.1.43'
    AND		TMOV.CODCCUSTO =  '02.0140.00'
    AND TMOV.STATUS = 'F'
    --AND		TMOV.IDMOV = 2024101492
    AND SAMF_CLI_AREAS.NOME_AREA IS NOT NULL

    GROUP BY
    TMOVCOMPL_SV.SAMF_CLI_AREANV1,
	SAMF_CLI_AREAS.NOME_AREA,
	SAMF_CLI_AREAS.METRAGEM_LIMITE
    
    ");
    
    return $query->getResultArray();
    // return $query->getRow();
}


// ROTINAS FISCAIS 
public function getRegistroFiscal($IDMOV)
    {
    $query = $this->db->query("
   SELECT 
    *
    FROM (
    SELECT 
        
        TMOV.IDMOV,
        TMOV.CODTMV,
        TMOV.SERIE,
        TMOV.CODCCUSTO,
        GCCUSTO.NOME AS NOME_CENTRO_CUSTO,
        CASE
            WHEN CODTMV IN ('1.2.01','1.2.05', '1.2.06','1.2.07','1.2.20','1.2.23','1.2.47') OR TMOV.SERIE IN ('D')
            THEN TMOV.CHAVEACESSONFE
            ELSE 'NÃO_SE_APLICA'
        END AS CHAVE_DE_ACESSO,

        CASE 
            WHEN (CODTMV IN ('1.2.01','1.2.05', '1.2.06','1.2.07','1.2.20','1.2.23','1.2.47') OR TMOV.SERIE = 'D') AND LEN(TMOV.CHAVEACESSONFE) = 44 AND CHARINDEX(' ', TMOV.CHAVEACESSONFE) = 0 THEN 1
            WHEN CODTMV NOT IN ('1.2.01','1.2.05', '1.2.06','1.2.07','1.2.20','1.2.23','1.2.47') THEN 0
            ELSE 2
        END AS INDICADOR_CHAVE_ACESSO,

        TITMMOVFISCAL.INDNATFRETE,

        CASE 
            WHEN CODTMV <> '1.2.23' THEN 0
            WHEN CODTMV = '1.2.23' AND TITMMOVFISCAL.INDNATFRETE <> '9' OR (CODTMV = '1.2.23' AND TITMMOVFISCAL.INDNATFRETE IS NULL) THEN 2
            WHEN CODTMV = '1.2.23' AND TITMMOVFISCAL.INDNATFRETE = '9' THEN 1
            ELSE 2--CONCAT('ERRO - VALOR PREENCHIDO', TITMMOVFISCAL.INDNATFRETE)
        END AS INDICADOR_FRETE,

        TMOV.NUMEROMOV,
        TMOV.CODTDO, 
        FORMAT(TMOV.DATAEMISSAO, 'dd/MM/yyyy') AS DATAEMISSAO,
        FORMAT(TMOV.DATALANCAMENTO, 'dd/MM/yyyy') AS DATALANCAMENTO,
        TPRDFISCAL.NATBCCRED,

        CASE 
            --WHEN TTRBMOV.VALOR > 0 AND TPRDFISCAL.NATBCCRED IS NULL OR (SITTRIBUTARIAPIS = 50 AND TTRBMOV.VALOR = '0.0000') THEN 'INCORRETO - SITTRIBUTARIAPIS 50 SEM VALOR DE PIS/COFINS OU NATUREZA DE BASE NÃO PREENCHIDA MAS POSSUI VALOR PIS/COFINS'
            WHEN TTRBMOV.VALOR > 0 AND TPRDFISCAL.NATBCCRED IS NULL OR (SITTRIBUTARIAPIS = 50 AND TTRBMOV.VALOR = '0.0000') THEN 2
            WHEN SITTRIBUTARIAPIS = 50 AND TPRDFISCAL.NATBCCRED IS NULL  THEN 2
            ELSE 1
        END AS VALIDACAO_NATUREZA_DE_BASE_E_VALOR,
            
        TITMMOV.IDPRD, 
        TPRD.NOMEFANTASIA, 
        TTRBMOV.BASEDECALCULO, 
        TTRBMOV.VALOR, 
        TTRBMOV.ALIQUOTA, 
        TTRBMOV.CODTRB,
        TITMMOV.IDNAT,  
        DNATUREZA.CODNAT AS CFOP, 
        SITTRIBUTARIAPIS AS SITTRIBUTARIA, 
        FCFO.CODETD, 
        FCFO.NOMEFANTASIA AS NOME_FORNECEDOR,
        TPRODUTO.NUMEROCCF AS NCM,

        CASE 
            WHEN CODTMV IN ('1.2.01','1.2.05','1.2.06','1.2.20','1.2.47') 
            AND TPRODUTO.NUMEROCCF IS NOT NULL AND LEN(TPRODUTO.NUMEROCCF) = 8 
            AND CHARINDEX(' ', TPRODUTO.NUMEROCCF) = 0 OR TPRODUTO.NUMEROCCF = '00000000'THEN 1
            --WHEN THEN 'NAO_SE_APLICA'
            ELSE 2
        END AS VALIDACAO_NCM,
        
        --201 205 1206 1220 1247 OBRIGATORIO TER NCM TEM QUE SER DIFERENTE DE 00000 E DIFERENTE DE NULLO PELO MENOS 8 DIGITOS E NAO PODE TER ESPAÇO 

        TMOVHISTORICO.HISTORICOCURTO

        FROM TTRBMOV
        
            LEFT JOIN
            TMOV ON TMOV.IDMOV = TTRBMOV.IDMOV AND TMOV.CODCOLIGADA = TTRBMOV.CODCOLIGADA

            LEFT JOIN
            TMOVHISTORICO ON TMOVHISTORICO.IDMOV = TMOV.IDMOV AND TMOVHISTORICO.CODCOLIGADA = TMOV.CODCOLIGADA

            LEFT JOIN
            TITMMOV ON TITMMOV.IDMOV = TTRBMOV.IDMOV AND TITMMOV.CODCOLIGADA = TTRBMOV.CODCOLIGADA AND TITMMOV.NSEQITMMOV = TTRBMOV.NSEQITMMOV

            LEFT JOIN
            TITMMOVFISCAL ON TITMMOV.IDMOV = TITMMOVFISCAL.IDMOV AND TITMMOV.CODCOLIGADA = TITMMOVFISCAL.CODCOLIGADA AND TITMMOV.NSEQITMMOV = TITMMOVFISCAL.NSEQITMMOV

            LEFT JOIN 
            TPRD ON TITMMOV.IDPRD = TPRD.IDPRD AND TITMMOV.CODCOLIGADA = TPRD.CODCOLIGADA

            LEFT JOIN 
            TPRDFISCAL ON TPRD.IDPRD = TPRDFISCAL.IDPRD AND TPRDFISCAL.CODCOLIGADA = TPRD.CODCOLIGADA

            LEFT JOIN 
            FCFO ON FCFO.CODCFO = TMOV.CODCFO AND FCFO.CODCOLIGADA = TMOV.CODCOLCFO 

            LEFT JOIN 
            DNATUREZA ON DNATUREZA.IDNAT = TMOV.IDNAT AND DNATUREZA.CODCOLIGADA = TMOV.CODCOLIGADA

            LEFT JOIN
            TPRODUTO ON TPRODUTO.IDPRD = TITMMOV.IDPRD 

            LEFT JOIN 
            GCCUSTO ON GCCUSTO.CODCOLIGADA = TMOV.CODCOLIGADA AND GCCUSTO.CODCCUSTO = TMOV.CODCCUSTO 

        WHERE CODTRB IN ('PIS C') 
        --AND CODTMV IN (@CODTMV) 
        AND CODTMV IN ('1.2.01','1.2.05', '1.2.06','1.2.07', '1.2.12','1.2.20','1.2.23','1.2.47')
        OR (CODTMV = '1.2.27' AND CODTRB IN ('PIS C') AND VALOR > 0) 

        --AND TMOV.DATAEMISSAO BETWEEN @DATAINICIO AND @DATAFIM 

        --ORDER BY CODTMV 


        ) AS RESULT

        WHERE
        IDMOV = ? ", [$IDMOV]);
        
        return $query->getResultArray();
    }


    // ITENS UTILIZADOS NO RM     
    public function getItensRMFiscal()
    {
    $query = $this->db->query("
    SELECT 

        TPRD.IDPRD,
        TPRD.CODIGOPRD,
        TPRD.NOMEFANTASIA, 
        TPRD.NUMEROCCF AS NCM, 
        --FORMAT(TPRD.DTCADASTRAMENTO, 'dd/MM/yyyy') AS CADASTRADO_EM,
        TPRD.DTCADASTRAMENTO AS CADASTRADO_EM,
        TPRDFISCAL.NATBCCRED,
        TPRDFISCAL.SITTRIBUTARIAPIS,
        TPRDFISCAL.SITTRIBUTARIACOFINS

    FROM TPRD 

    LEFT JOIN TPRDFISCAL ON TPRDFISCAL.IDPRD = TPRD.IDPRD AND TPRDFISCAL.CODCOLIGADA = TPRD.CODCOLIGADA 

    WHERE 

        CODIGOPRD LIKE '__.__._____'
        AND INATIVO = 0
        AND TPRD.CODCOLIGADA = 1 
    
    ", []);
        
        return $query->getResultArray();
    }



    /* TRAZENDO QR CODE LIDO PELO USUÁRIO */
    public function getProximoNSEQITMMOV($IDMOV)
    {
        $query = $this->db->query("
        SELECT MAX (NSEQITMMOV) + 1 AS PROXIMONSEQITMMOV FROM TITMMOV WHERE IDMOV = ?", [$IDMOV]);
        

        // $row = $query->getRow();
        // if ($row) {
        //     return $row; 
        // } else {
        //     return null; 
        // }

        return $query->getRow();



        // return $query->getResultArray();
    }


    


    //DASHBOARD
    public function getIndicadoresAndaimes($CODCCUSTO)
    {
        $query = $this->db->query("SELECT 
    CAST(SUM(EM_MONTAGEM) AS DECIMAL(10, 2)) EM_MONTAGEM,
    CAST(SUM(DESMONTADO) AS DECIMAL(10, 2)) DESMONTADO,
    CAST(SUM(MONTADO) AS DECIMAL(10, 2)) MONTADO,
    SUM(TOTAL_ANDAIMES_EM_MONTAGEM) TOTAL_ANDAIMES_EM_MONTAGEM,
    SUM(TOTAL_ANDAIMES_SOLICITADOS) TOTAL_ANDAIMES_SOLICITADOS,
    SUM(TOTAL_ANDAIMES_CANCELADOS) TOTAL_ANDAIMES_CANCELADOS,
    SUM(TOTAL_ANDAIMES_MONTADOS) TOTAL_ANDAIMES_MONTADOS,
    SUM(TOTAL_ANDAIMES_DESMONTADOS) TOTAL_ANDAIMES_DESMONTADOS

    FROM(
    SELECT 
    
        0 AS EM_MONTAGEM,
        0 AS DESMONTADO,
        0 AS MONTADO,

        COUNT(CASE WHEN TMOV.STATUS = 'G' THEN TMOV.IDMOV ELSE NULL END) AS TOTAL_ANDAIMES_EM_MONTAGEM,
        COUNT(CASE WHEN TMOV.STATUS <> 'Z' THEN TMOV.IDMOV ELSE NULL END) AS TOTAL_ANDAIMES_SOLICITADOS,
        COUNT(CASE WHEN TMOV.STATUS = 'C' THEN TMOV.IDMOV ELSE NULL END) AS TOTAL_ANDAIMES_CANCELADOS,
        COUNT(CASE WHEN TMOV.STATUS = 'F' THEN TMOV.IDMOV ELSE NULL END) AS TOTAL_ANDAIMES_MONTADOS,
        COUNT(CASE WHEN TMOV.STATUS = 'B' THEN TMOV.IDMOV ELSE NULL END) AS TOTAL_ANDAIMES_DESMONTADOS

    FROM TMOV 

    WHERE CODTMV = '1.1.43' 
    AND TMOV.CODCCUSTO = ?
    

    UNION ALL

    SELECT 

        SUM(EM_MONTAGEM) AS EM_MONTAGEM,
        SUM(DESMONTADO) AS DESMONTADO,
        SUM(MONTADO) AS MONTADO,

        TOTAL_ANDAIMES_ATUADOS,
        TOTAL_ANDAIMES_SOLICITADOS,
        TOTAL_ANDAIMES_CANCELADOS,
        TOTAL_ANDAIMES_MONTADOS,
		TOTAL_ANDAIMES_DESMONTADOS

        FROM

        (

        SELECT 
            
            CASE 
                WHEN TMOV.STATUS = 'G' THEN TPRD.COMPRIMENTO * TITMMOV.QUANTIDADE  -- EM MONTAGEM
                ELSE 0 
            END AS EM_MONTAGEM,

            CASE 
                WHEN TMOV.STATUS = 'B' THEN TPRD.COMPRIMENTO * TITMMOV.QUANTIDADE  -- DESMONTADO 
                ELSE 0 
            END AS DESMONTADO ,

            CASE 
                WHEN TMOV.STATUS = 'F' THEN TPRD.COMPRIMENTO * TITMMOV.QUANTIDADE  -- MONTADO
                ELSE 0 
            END AS MONTADO,

            0 AS TOTAL_ANDAIMES_ATUADOS,

            0 AS TOTAL_ANDAIMES_SOLICITADOS,

            0 TOTAL_ANDAIMES_CANCELADOS,

			0 AS TOTAL_ANDAIMES_MONTADOS,

			0 AS TOTAL_ANDAIMES_DESMONTADOS
		
        FROM TMOV 

            LEFT JOIN TMOVCOMPL ON TMOVCOMPL.IDMOV = TMOV.IDMOV AND TMOVCOMPL.CODCOLIGADA = TMOV.CODCOLIGADA
            LEFT JOIN SAMF_CLI_AREAS AS AREANV0 ON CAST(AREANV0.ID AS VARCHAR) = TMOVCOMPL.SAMF_CLI_AREANV0	
            LEFT JOIN SAMF_CLI_AREAS AS AREANV1	ON CAST(AREANV1.ID AS VARCHAR) = TMOVCOMPL.SAMF_CLI_AREANV1
            LEFT JOIN SAMF_ACESSO ON SAMF_ACESSO.ID = TMOVCOMPL.SAMF_ENCARREGADO
            LEFT JOIN TITMMOV ON TMOV.IDMOV = TITMMOV.IDMOV AND TMOV.CODCOLIGADA = TITMMOV.CODCOLIGADA 
            LEFT JOIN TPRD ON TPRD.IDPRD = TITMMOV.IDPRD AND TPRD.CODCOLIGADA = TITMMOV.CODCOLIGADA 
        
        WHERE CODTMV = '1.1.43' 
        AND TMOV.CODCCUSTO = ?

		GROUP BY 
		TMOV.STATUS, TPRD.COMPRIMENTO, TITMMOV.QUANTIDADE
		
		) AS RESULT1 

		GROUP BY 

		TOTAL_ANDAIMES_ATUADOS,
        TOTAL_ANDAIMES_SOLICITADOS,
        TOTAL_ANDAIMES_CANCELADOS,
        TOTAL_ANDAIMES_MONTADOS,
		TOTAL_ANDAIMES_DESMONTADOS

		) AS RESULT", [$CODCCUSTO, $CODCCUSTO]);
        

        // $row = $query->getRow();
        // if ($row) {
        //     return $row; 
        // } else {
        //     return null; 
        // }

        return $query->getRow();



        // return $query->getResultArray();
    }







}